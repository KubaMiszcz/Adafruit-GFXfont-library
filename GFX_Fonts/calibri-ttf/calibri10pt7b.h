#pragma once
#include <Adafruit_GFX.h>

const uint8_t calibri10pt7bBitmaps[] PROGMEM = {
  0xEA, 0xAA, 0xA8, 0xF0, 0xCB, 0x2C, 0x92, 0x48, 0x11, 0x84, 0x41, 0x10,
  0x44, 0x7F, 0xCC, 0xC3, 0x30, 0x8C, 0xFF, 0x88, 0x82, 0x20, 0x88, 0x62,
  0x00, 0x08, 0x08, 0x3E, 0x66, 0xC0, 0xC0, 0xC0, 0x70, 0x3E, 0x07, 0x03,
  0x03, 0x03, 0xCE, 0xFC, 0x30, 0x30, 0x70, 0x24, 0xC3, 0x22, 0x11, 0x11,
  0x08, 0x98, 0x4D, 0x81, 0xC9, 0xC0, 0x93, 0x0C, 0x88, 0xC4, 0x44, 0x22,
  0x61, 0x36, 0x07, 0x00, 0x0F, 0x00, 0xCC, 0x0C, 0x20, 0x61, 0x01, 0x18,
  0x0F, 0x80, 0x30, 0x07, 0xC6, 0x27, 0x33, 0x19, 0x18, 0x78, 0xC1, 0xC3,
  0xBF, 0x0F, 0x8C, 0xFD, 0x40, 0x32, 0x66, 0x44, 0xCC, 0xCC, 0xCC, 0x46,
  0x66, 0x23, 0xC4, 0x66, 0x22, 0x33, 0x33, 0x33, 0x22, 0x66, 0x4C, 0x32,
  0xDE, 0xCC, 0xEE, 0xD3, 0x00, 0x18, 0x18, 0x18, 0x18, 0xFF, 0x18, 0x18,
  0x18, 0x18, 0x33, 0x26, 0x40, 0xF0, 0x6C, 0x03, 0x02, 0x06, 0x04, 0x0C,
  0x0C, 0x08, 0x18, 0x18, 0x10, 0x30, 0x30, 0x20, 0x60, 0x40, 0xC0, 0xC0,
  0x3C, 0x66, 0xC3, 0xC3, 0xC1, 0x81, 0x81, 0x81, 0xC1, 0xC3, 0xC3, 0x66,
  0x3C, 0x31, 0xE2, 0x40, 0x81, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x8F,
  0xE0, 0x7C, 0xCE, 0x06, 0x02, 0x06, 0x06, 0x06, 0x0C, 0x18, 0x30, 0x60,
  0xC0, 0xFF, 0x7C, 0xCE, 0x06, 0x02, 0x06, 0x0C, 0x7C, 0x06, 0x03, 0x03,
  0x03, 0xCE, 0x7C, 0x07, 0x01, 0xC0, 0xF0, 0x6C, 0x13, 0x0C, 0xC2, 0x31,
  0x8C, 0x43, 0x3F, 0xF0, 0x30, 0x0C, 0x03, 0x00, 0x7E, 0x40, 0x40, 0x40,
  0x40, 0x7E, 0x07, 0x03, 0x03, 0x03, 0x03, 0xCE, 0xFC, 0x1F, 0x33, 0x60,
  0x40, 0xC0, 0xFE, 0xE7, 0xC3, 0xC1, 0xC1, 0xC3, 0x66, 0x3C, 0xFF, 0x03,
  0x03, 0x02, 0x06, 0x04, 0x0C, 0x0C, 0x18, 0x18, 0x30, 0x30, 0x20, 0x3C,
  0x67, 0xC3, 0xC3, 0x62, 0x7E, 0x3C, 0x66, 0xC3, 0xC1, 0xC3, 0xE7, 0x7E,
  0x3C, 0x66, 0xC3, 0xC3, 0xC3, 0xC3, 0xE7, 0x7F, 0x03, 0x03, 0x06, 0xCE,
  0xF8, 0xF0, 0x03, 0xC0, 0x6C, 0x00, 0x03, 0x6B, 0x40, 0x01, 0x07, 0x3C,
  0xF0, 0x80, 0xF0, 0x3C, 0x07, 0x01, 0xFF, 0x00, 0x00, 0xFF, 0x80, 0xE0,
  0x38, 0x0F, 0x01, 0x0F, 0x38, 0xE0, 0x80, 0x7D, 0x9C, 0x18, 0x10, 0x20,
  0xC1, 0x9E, 0x30, 0x60, 0xC0, 0x03, 0x06, 0x00, 0x01, 0xF8, 0x07, 0x1E,
  0x0C, 0x03, 0x19, 0xD3, 0x13, 0x31, 0x32, 0x31, 0x26, 0x31, 0x26, 0x33,
  0x26, 0x23, 0x26, 0xF6, 0x23, 0x9C, 0x30, 0x00, 0x38, 0x00, 0x1E, 0x30,
  0x07, 0xF0, 0x06, 0x01, 0xC0, 0x3C, 0x05, 0x81, 0x90, 0x33, 0x04, 0x61,
  0x84, 0x30, 0xCF, 0xF9, 0x81, 0x30, 0x3C, 0x06, 0xFC, 0x8E, 0x86, 0x86,
  0x86, 0x8C, 0xFE, 0x87, 0x83, 0x83, 0x83, 0x86, 0xFC, 0x1F, 0x1C, 0xD8,
  0x18, 0x0C, 0x06, 0x03, 0x01, 0x80, 0xC0, 0x60, 0x18, 0x07, 0x31, 0xF0,
  0xFC, 0x47, 0xA0, 0xD0, 0x38, 0x1C, 0x06, 0x03, 0x01, 0x81, 0xC0, 0xE0,
  0xD1, 0xEF, 0xC0, 0xFF, 0x02, 0x04, 0x08, 0x10, 0x3F, 0x40, 0x81, 0x02,
  0x04, 0x0F, 0xE0, 0xFE, 0x08, 0x20, 0x82, 0x0F, 0xE0, 0x82, 0x08, 0x20,
  0x80, 0x0F, 0x8E, 0x76, 0x01, 0x00, 0xC0, 0x30, 0x0C, 0x7F, 0x03, 0xC0,
  0xF0, 0x36, 0x0C, 0xE7, 0x1F, 0x80, 0x81, 0xC0, 0xE0, 0x70, 0x38, 0x1C,
  0x0F, 0xFF, 0x03, 0x81, 0xC0, 0xE0, 0x70, 0x38, 0x18, 0xFF, 0xF8, 0x18,
  0xC6, 0x31, 0x8C, 0x63, 0x18, 0xC6, 0x6F, 0x00, 0x83, 0x86, 0x8C, 0x98,
  0x90, 0xB0, 0xF0, 0xB0, 0x98, 0x8C, 0x8C, 0x86, 0x83, 0x82, 0x08, 0x20,
  0x82, 0x08, 0x20, 0x82, 0x08, 0x20, 0xFC, 0xE0, 0x1F, 0x01, 0xE8, 0x0B,
  0x60, 0xD9, 0x06, 0xCC, 0x26, 0x63, 0x31, 0x11, 0x8D, 0x8C, 0x6C, 0x61,
  0xC3, 0x0E, 0x18, 0x20, 0x80, 0xC0, 0xF0, 0x68, 0x36, 0x19, 0x0C, 0xC6,
  0x33, 0x19, 0x86, 0xC3, 0x60, 0xF0, 0x78, 0x18, 0x1F, 0x07, 0x39, 0x83,
  0x60, 0x3C, 0x07, 0x80, 0xF0, 0x1E, 0x03, 0xC0, 0x78, 0x0D, 0x83, 0x3C,
  0xE1, 0xF0, 0xFD, 0x1E, 0x1C, 0x18, 0x30, 0xE3, 0xFC, 0x81, 0x02, 0x04,
  0x08, 0x00, 0x1F, 0x01, 0xCE, 0x18, 0x31, 0x80, 0xCC, 0x06, 0x60, 0x33,
  0x01, 0x98, 0x0C, 0xC0, 0x66, 0x03, 0x18, 0x30, 0xF3, 0x81, 0xF6, 0x00,
  0x1C, 0x00, 0x60, 0xFC, 0x8E, 0x86, 0x82, 0x86, 0x86, 0xFC, 0x9C, 0x84,
  0x86, 0x86, 0x83, 0x83, 0x3C, 0xCF, 0x06, 0x0C, 0x0E, 0x0F, 0x07, 0x06,
  0x04, 0x1E, 0x7F, 0xC0, 0xFF, 0xC3, 0x00, 0xC0, 0x30, 0x0C, 0x03, 0x00,
  0xC0, 0x30, 0x0C, 0x03, 0x00, 0xC0, 0x30, 0x0C, 0x00, 0x80, 0xC0, 0x60,
  0x30, 0x18, 0x0C, 0x06, 0x03, 0x01, 0x80, 0xE0, 0xF0, 0x6E, 0xE3, 0xE0,
  0xC0, 0x6C, 0x0D, 0x81, 0x30, 0x63, 0x0C, 0x61, 0x0C, 0x60, 0xCC, 0x19,
  0x03, 0x60, 0x3C, 0x07, 0x00, 0x60, 0x81, 0x83, 0xC1, 0x83, 0xC3, 0x83,
  0xC3, 0xC2, 0x42, 0xC6, 0x62, 0x46, 0x66, 0x44, 0x26, 0x64, 0x34, 0x6C,
  0x34, 0x2C, 0x3C, 0x38, 0x1C, 0x38, 0x18, 0x38, 0x60, 0xD8, 0x63, 0x18,
  0xCC, 0x1A, 0x03, 0x80, 0xC0, 0x78, 0x1B, 0x0C, 0xC3, 0x19, 0x86, 0x40,
  0xC0, 0xC0, 0xB0, 0xD8, 0x46, 0x63, 0x20, 0xF0, 0x70, 0x18, 0x0C, 0x06,
  0x03, 0x01, 0x80, 0xC0, 0xFF, 0x03, 0x06, 0x04, 0x0C, 0x18, 0x18, 0x30,
  0x60, 0x60, 0xC0, 0x80, 0xFF, 0xF2, 0x49, 0x24, 0x92, 0x49, 0x24, 0xE0,
  0xC0, 0x40, 0x60, 0x60, 0x20, 0x30, 0x30, 0x10, 0x18, 0x18, 0x08, 0x0C,
  0x04, 0x06, 0x06, 0x02, 0x03, 0xE4, 0x92, 0x49, 0x24, 0x92, 0x49, 0xE0,
  0x18, 0x38, 0x2C, 0x64, 0x66, 0x42, 0xC3, 0xFF, 0xC0, 0x61, 0x84, 0x00,
  0x7D, 0x9C, 0x18, 0x17, 0xF8, 0x70, 0xE7, 0x7A, 0x80, 0x80, 0x80, 0x80,
  0x80, 0xBC, 0xEE, 0x86, 0x83, 0x83, 0x83, 0x86, 0xEE, 0xBC, 0x3C, 0xCF,
  0x06, 0x0C, 0x18, 0x30, 0x33, 0x3C, 0x03, 0x03, 0x03, 0x03, 0x03, 0x3B,
  0x67, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0x6F, 0x39, 0x3C, 0x66, 0xC3, 0xC3,
  0xFF, 0xC0, 0xC0, 0x67, 0x3E, 0x1C, 0xC3, 0x0C, 0x33, 0xF3, 0x0C, 0x30,
  0xC3, 0x0C, 0x30, 0xC0, 0x7F, 0xC4, 0xC6, 0xC6, 0xC6, 0xFC, 0x80, 0xFC,
  0x4E, 0x83, 0x83, 0xC6, 0x7C, 0x81, 0x02, 0x04, 0x08, 0x17, 0xBB, 0xE3,
  0x87, 0x0E, 0x1C, 0x38, 0x70, 0xC0, 0xF0, 0xFF, 0xFF, 0xC0, 0x24, 0x02,
  0x49, 0x24, 0x92, 0x4B, 0xC0, 0x81, 0x02, 0x04, 0x08, 0x11, 0xA6, 0x58,
  0xE1, 0xC2, 0xC4, 0xC8, 0xD0, 0xC0, 0xFF, 0xFC, 0xBC, 0xE7, 0x6D, 0xB1,
  0x85, 0x0C, 0x38, 0x61, 0xC3, 0x0E, 0x18, 0x70, 0xC3, 0x86, 0x18, 0xBD,
  0xDF, 0x1C, 0x38, 0x70, 0xE1, 0xC3, 0x86, 0x3E, 0x33, 0xB0, 0x58, 0x3C,
  0x1E, 0x0F, 0x0C, 0xCE, 0x3C, 0x00, 0xBC, 0xEE, 0x86, 0x83, 0x83, 0x83,
  0x86, 0xEE, 0xBC, 0x80, 0x80, 0x80, 0x80, 0x39, 0x67, 0xC3, 0xC3, 0xC3,
  0xC3, 0xC3, 0x6F, 0x3B, 0x03, 0x03, 0x03, 0x03, 0xBF, 0x71, 0x08, 0x42,
  0x10, 0x80, 0x7B, 0x3C, 0x38, 0x78, 0x30, 0xF7, 0xF8, 0x20, 0x8F, 0xC8,
  0x20, 0x82, 0x08, 0x30, 0xD1, 0xC0, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3,
  0x43, 0x67, 0x39, 0xC1, 0xA0, 0x98, 0xCC, 0x62, 0x21, 0xB0, 0x50, 0x28,
  0x1C, 0x00, 0x86, 0x1E, 0x30, 0xB1, 0xC4, 0x9E, 0x64, 0x92, 0x34, 0x91,
  0xA7, 0x87, 0x18, 0x30, 0xC0, 0x63, 0x62, 0x36, 0x1C, 0x1C, 0x1C, 0x36,
  0x62, 0x43, 0xC1, 0xB0, 0x98, 0xC4, 0x63, 0x21, 0xB0, 0x50, 0x38, 0x1C,
  0x04, 0x06, 0x03, 0x01, 0x00, 0xFC, 0x31, 0x84, 0x31, 0x84, 0x30, 0xFC,
  0x39, 0x08, 0x42, 0x11, 0x8C, 0x83, 0x08, 0x42, 0x10, 0x84, 0x38, 0xFF,
  0xFF, 0xC0, 0xE1, 0x08, 0x42, 0x10, 0x86, 0x19, 0x88, 0x42, 0x10, 0x84,
  0xE0, 0xF1, 0x9B, 0x8E };

const GFXglyph calibri10pt7bGlyphs[] PROGMEM = {
  {     0,   0,   0,   5,    0,    1 },   // 0x20 ' '
  {     0,   2,  14,   7,    3,  -13 },   // 0x21 '!'
  {     4,   6,   5,   8,    1,  -13 },   // 0x22 '"'
  {     8,  10,  13,  10,    0,  -12 },   // 0x23 '#'
  {    25,   8,  17,  10,    1,  -14 },   // 0x24 '$'
  {    42,  13,  13,  14,    1,  -12 },   // 0x25 '%'
  {    64,  13,  14,  14,    0,  -13 },   // 0x26 '&'
  {    87,   2,   5,   4,    1,  -13 },   // 0x27 '''
  {    89,   4,  18,   6,    1,  -13 },   // 0x28 '('
  {    98,   4,  18,   6,    1,  -13 },   // 0x29 ')'
  {   107,   6,   7,  10,    2,  -13 },   // 0x2A '*'
  {   113,   8,   9,  10,    1,   -9 },   // 0x2B '+'
  {   122,   4,   5,   5,    0,   -1 },   // 0x2C ','
  {   125,   4,   1,   6,    1,   -4 },   // 0x2D '-'
  {   126,   3,   2,   5,    1,   -1 },   // 0x2E '.'
  {   127,   8,  17,   8,    0,  -13 },   // 0x2F '/'
  {   144,   8,  13,  10,    1,  -12 },   // 0x30 '0'
  {   157,   7,  13,  10,    2,  -12 },   // 0x31 '1'
  {   169,   8,  13,  10,    1,  -12 },   // 0x32 '2'
  {   182,   8,  13,  10,    1,  -12 },   // 0x33 '3'
  {   195,  10,  13,  10,    0,  -12 },   // 0x34 '4'
  {   212,   8,  13,  10,    1,  -12 },   // 0x35 '5'
  {   225,   8,  13,  10,    1,  -12 },   // 0x36 '6'
  {   238,   8,  13,  10,    1,  -12 },   // 0x37 '7'
  {   251,   8,  13,  10,    1,  -12 },   // 0x38 '8'
  {   264,   8,  13,  10,    1,  -12 },   // 0x39 '9'
  {   277,   2,   9,   5,    2,   -8 },   // 0x3A ':'
  {   280,   3,  12,   5,    1,   -8 },   // 0x3B ';'
  {   285,   8,   9,  10,    1,   -9 },   // 0x3C '<'
  {   294,   8,   4,  10,    1,   -6 },   // 0x3D '='
  {   298,   8,   9,  10,    1,   -9 },   // 0x3E '>'
  {   307,   7,  14,   9,    1,  -13 },   // 0x3F '?'
  {   320,  16,  15,  18,    0,  -12 },   // 0x40 '@'
  {   350,  11,  13,  12,    0,  -12 },   // 0x41 'A'
  {   368,   8,  13,  11,    2,  -12 },   // 0x42 'B'
  {   381,   9,  13,  11,    1,  -12 },   // 0x43 'C'
  {   396,   9,  13,  12,    2,  -12 },   // 0x44 'D'
  {   411,   7,  13,  10,    2,  -12 },   // 0x45 'E'
  {   423,   6,  13,   9,    2,  -12 },   // 0x46 'F'
  {   433,  10,  13,  13,    1,  -12 },   // 0x47 'G'
  {   450,   9,  13,  12,    2,  -12 },   // 0x48 'H'
  {   465,   1,  13,   5,    2,  -12 },   // 0x49 'I'
  {   467,   5,  13,   6,    0,  -12 },   // 0x4A 'J'
  {   476,   8,  13,  10,    2,  -12 },   // 0x4B 'K'
  {   489,   6,  13,   8,    2,  -12 },   // 0x4C 'L'
  {   499,  13,  13,  17,    2,  -12 },   // 0x4D 'M'
  {   521,   9,  13,  13,    2,  -12 },   // 0x4E 'N'
  {   536,  11,  13,  13,    1,  -12 },   // 0x4F 'O'
  {   554,   7,  13,  10,    2,  -12 },   // 0x50 'P'
  {   566,  13,  15,  13,    1,  -12 },   // 0x51 'Q'
  {   591,   8,  13,  11,    2,  -12 },   // 0x52 'R'
  {   604,   7,  13,   9,    1,  -12 },   // 0x53 'S'
  {   616,  10,  13,  10,    0,  -12 },   // 0x54 'T'
  {   633,   9,  13,  13,    2,  -12 },   // 0x55 'U'
  {   648,  11,  13,  11,    0,  -12 },   // 0x56 'V'
  {   666,  16,  13,  18,    1,  -12 },   // 0x57 'W'
  {   692,  10,  13,  10,    0,  -12 },   // 0x58 'X'
  {   709,   9,  13,  10,    0,  -12 },   // 0x59 'Y'
  {   724,   8,  13,   9,    1,  -12 },   // 0x5A 'Z'
  {   737,   3,  17,   6,    2,  -13 },   // 0x5B '['
  {   744,   8,  17,   8,    0,  -13 },   // 0x5C '\'
  {   761,   3,  17,   6,    1,  -13 },   // 0x5D ']'
  {   768,   8,   7,  10,    1,  -12 },   // 0x5E '^'
  {   775,  10,   1,  10,    0,    4 },   // 0x5F '_'
  {   777,   5,   4,   6,    0,  -12 },   // 0x60 '`'
  {   780,   7,   9,  10,    1,   -8 },   // 0x61 'a'
  {   788,   8,  14,  11,    2,  -13 },   // 0x62 'b'
  {   802,   7,   9,   8,    1,   -8 },   // 0x63 'c'
  {   810,   8,  14,  11,    1,  -13 },   // 0x64 'd'
  {   824,   8,   9,  10,    1,   -8 },   // 0x65 'e'
  {   833,   6,  14,   6,    0,  -13 },   // 0x66 'f'
  {   844,   8,  13,   9,    1,   -8 },   // 0x67 'g'
  {   857,   7,  14,  11,    2,  -13 },   // 0x68 'h'
  {   870,   2,  13,   5,    1,  -12 },   // 0x69 'i'
  {   874,   3,  17,   5,    0,  -12 },   // 0x6A 'j'
  {   881,   7,  14,   9,    2,  -13 },   // 0x6B 'k'
  {   894,   1,  14,   5,    2,  -13 },   // 0x6C 'l'
  {   896,  13,   9,  16,    2,   -8 },   // 0x6D 'm'
  {   911,   7,   9,  11,    2,   -8 },   // 0x6E 'n'
  {   919,   9,   9,  11,    1,   -8 },   // 0x6F 'o'
  {   930,   8,  13,  11,    2,   -8 },   // 0x70 'p'
  {   943,   8,  13,  11,    1,   -8 },   // 0x71 'q'
  {   956,   5,   9,   7,    2,   -8 },   // 0x72 'r'
  {   962,   6,   9,   8,    1,   -8 },   // 0x73 's'
  {   969,   6,  11,   7,    0,  -10 },   // 0x74 't'
  {   978,   8,   9,  11,    1,   -8 },   // 0x75 'u'
  {   987,   9,   9,   9,    0,   -8 },   // 0x76 'v'
  {   998,  13,   9,  14,    1,   -8 },   // 0x77 'w'
  {  1013,   8,   9,   9,    0,   -8 },   // 0x78 'x'
  {  1022,   9,  13,   9,    0,   -8 },   // 0x79 'y'
  {  1037,   6,   9,   8,    1,   -8 },   // 0x7A 'z'
  {  1044,   5,  17,   6,    1,  -13 },   // 0x7B '{'
  {  1055,   1,  18,   9,    4,  -13 },   // 0x7C '|'
  {  1058,   5,  17,   6,    1,  -13 },   // 0x7D '}'
  {  1069,   8,   3,  10,    1,   -9 } }; // 0x7E '~'

const GFXfont calibri10pt7b PROGMEM = {
  (uint8_t  *)calibri10pt7bBitmaps,
  (GFXglyph *)calibri10pt7bGlyphs,
  0x20, 0x7E, 24 };

// Approx. 1744 bytes
