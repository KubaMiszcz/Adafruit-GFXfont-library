#pragma once
#include <Adafruit_GFX.h>

const uint8_t calibri9pt7bBitmaps[] PROGMEM = {
  0xF5, 0x55, 0x4F, 0xDE, 0xF7, 0xBC, 0x80, 0x13, 0x19, 0x8C, 0x8F, 0xF2,
  0x21, 0x10, 0x89, 0xFE, 0x26, 0x32, 0x19, 0x00, 0x18, 0x31, 0xF6, 0x2C,
  0x18, 0x18, 0x1E, 0x0E, 0x0C, 0x1C, 0x3F, 0x84, 0x08, 0x00, 0xF0, 0xD2,
  0x12, 0x44, 0x49, 0x09, 0x61, 0xC8, 0x02, 0x78, 0xC9, 0x11, 0x24, 0x25,
  0x84, 0xA0, 0xE0, 0x1E, 0x03, 0x30, 0x31, 0x03, 0x10, 0x16, 0x01, 0xC0,
  0x3C, 0x66, 0x64, 0x63, 0x46, 0x18, 0x73, 0xC3, 0xE3, 0xFF, 0xC0, 0x2D,
  0x25, 0xB6, 0xDB, 0x26, 0xC8, 0xC9, 0x36, 0x49, 0x25, 0xB4, 0xB0, 0x10,
  0xA9, 0xF3, 0xE5, 0x42, 0x00, 0x10, 0x20, 0x40, 0x8F, 0xE2, 0x04, 0x08,
  0x25, 0xAC, 0xF0, 0xF0, 0x06, 0x08, 0x10, 0x60, 0x83, 0x06, 0x08, 0x30,
  0x40, 0x83, 0x04, 0x18, 0x30, 0x00, 0x3C, 0x46, 0xC2, 0x82, 0x82, 0x83,
  0x82, 0x82, 0xC2, 0xC6, 0x7C, 0x33, 0xC3, 0x0C, 0x30, 0xC3, 0x0C, 0x30,
  0xCF, 0xC0, 0x79, 0x98, 0x18, 0x30, 0x41, 0x86, 0x18, 0x61, 0x83, 0xF8,
  0x79, 0x98, 0x10, 0x20, 0xCF, 0x01, 0x83, 0x07, 0x1D, 0xE0, 0x06, 0x05,
  0x06, 0x82, 0x42, 0x23, 0x11, 0x09, 0xFF, 0x02, 0x01, 0x00, 0x80, 0xFD,
  0x83, 0x06, 0x0F, 0xC0, 0xC1, 0x83, 0x07, 0x1B, 0xE0, 0x3E, 0xC5, 0x06,
  0x0B, 0xD8, 0xE0, 0xE1, 0xC2, 0xCC, 0xF0, 0xFE, 0x04, 0x18, 0x20, 0xC1,
  0x06, 0x08, 0x30, 0x61, 0x80, 0x7D, 0x8F, 0x1E, 0x36, 0xC7, 0x11, 0xC1,
  0x83, 0x8D, 0xF0, 0x7D, 0x8A, 0x1C, 0x18, 0x38, 0xDE, 0x81, 0x07, 0x1B,
  0xE0, 0xC3, 0x50, 0x05, 0x78, 0x02, 0x18, 0xC6, 0x0C, 0x06, 0x03, 0x01,
  0xFE, 0x00, 0x07, 0xF0, 0x80, 0xC0, 0x60, 0x30, 0x63, 0x18, 0x40, 0x79,
  0x18, 0x10, 0x30, 0x41, 0x8E, 0x10, 0x20, 0x00, 0xC1, 0x80, 0x03, 0xF0,
  0x1C, 0x30, 0x60, 0x30, 0x9D, 0x22, 0x66, 0x64, 0x8C, 0xC9, 0x19, 0x12,
  0x22, 0x24, 0xCC, 0x4E, 0x70, 0xC0, 0x00, 0xC3, 0x00, 0xFC, 0x00, 0x0C,
  0x03, 0x81, 0xA0, 0x48, 0x13, 0x0C, 0x42, 0x19, 0xFE, 0x60, 0x90, 0x3C,
  0x0C, 0xF9, 0x1A, 0x14, 0x28, 0xDF, 0xA1, 0xC3, 0x87, 0x0F, 0xE0, 0x1E,
  0x63, 0x40, 0xC0, 0xC0, 0x80, 0xC0, 0xC0, 0xC0, 0x63, 0x3E, 0xF8, 0x8E,
  0x83, 0x83, 0x81, 0x81, 0x81, 0x83, 0x83, 0x8E, 0xF8, 0xFE, 0x08, 0x20,
  0x83, 0xE8, 0x20, 0x82, 0x0F, 0xC0, 0xFC, 0x21, 0x08, 0x7E, 0x10, 0x84,
  0x20, 0x1F, 0x38, 0xD0, 0x18, 0x08, 0x04, 0x3E, 0x03, 0x81, 0xC0, 0xB8,
  0xC7, 0xC0, 0x83, 0x83, 0x83, 0x83, 0x83, 0xFF, 0x83, 0x83, 0x83, 0x83,
  0x83, 0xFF, 0xE0, 0x11, 0x11, 0x11, 0x11, 0x13, 0xE0, 0x87, 0x1A, 0x65,
  0x8A, 0x1C, 0x2C, 0x4C, 0x99, 0x1A, 0x18, 0x84, 0x21, 0x08, 0x42, 0x10,
  0x84, 0x3E, 0xC0, 0x7E, 0x07, 0xA0, 0xFA, 0x0B, 0xB0, 0xB9, 0x1B, 0x99,
  0x38, 0xB3, 0x8E, 0x38, 0xE3, 0x84, 0x30, 0xC1, 0xC1, 0xE1, 0xB1, 0x91,
  0x99, 0x89, 0x8D, 0x85, 0x87, 0x83, 0x1F, 0x18, 0x64, 0x0F, 0x03, 0xC0,
  0xE0, 0x3C, 0x0F, 0x03, 0xC0, 0x98, 0xE3, 0xE0, 0xF9, 0x1A, 0x14, 0x28,
  0x51, 0xBE, 0x40, 0x81, 0x02, 0x00, 0x1F, 0x0C, 0x33, 0x03, 0x60, 0x6C,
  0x0D, 0x01, 0xB0, 0x36, 0x06, 0xC0, 0x8C, 0x70, 0xFA, 0x00, 0x20, 0x02,
  0xF9, 0x1A, 0x14, 0x28, 0xDF, 0x26, 0x46, 0x85, 0x0E, 0x18, 0x79, 0x8A,
  0x06, 0x06, 0x07, 0x03, 0x03, 0x07, 0x1B, 0xE0, 0xFF, 0x84, 0x02, 0x01,
  0x00, 0x80, 0x40, 0x20, 0x10, 0x08, 0x04, 0x02, 0x00, 0x81, 0x81, 0x81,
  0x81, 0x81, 0x81, 0x81, 0x81, 0x83, 0xC6, 0x7C, 0xC0, 0xD0, 0x26, 0x09,
  0x86, 0x21, 0x0C, 0x41, 0x30, 0x48, 0x1A, 0x03, 0x80, 0xC0, 0x83, 0x06,
  0x0C, 0x1C, 0x30, 0xF1, 0xE3, 0x44, 0x89, 0x92, 0x26, 0xCD, 0x8B, 0x34,
  0x28, 0x50, 0xE1, 0xC1, 0x86, 0x00, 0x41, 0xB1, 0x8C, 0x82, 0xC1, 0xC0,
  0x60, 0x70, 0x6C, 0x23, 0x31, 0x90, 0x60, 0xC1, 0x31, 0x98, 0x86, 0xC3,
  0x40, 0xE0, 0x20, 0x10, 0x08, 0x04, 0x02, 0x00, 0xFE, 0x0C, 0x30, 0x41,
  0x86, 0x08, 0x30, 0xC1, 0x03, 0xF8, 0xF2, 0x49, 0x24, 0x92, 0x49, 0x38,
  0xC0, 0x81, 0x03, 0x02, 0x06, 0x0C, 0x08, 0x18, 0x10, 0x20, 0x60, 0x40,
  0x81, 0x80, 0xED, 0xB6, 0xDB, 0x6D, 0xB6, 0xF8, 0x30, 0x70, 0xA3, 0x64,
  0x58, 0xF1, 0x80, 0xFF, 0x80, 0x62, 0x10, 0x7B, 0x30, 0x5F, 0xC6, 0x1C,
  0xDD, 0xC0, 0xC0, 0xC0, 0xC0, 0xDC, 0xE6, 0xC2, 0xC3, 0xC3, 0xC2, 0xE6,
  0xDC, 0x7B, 0x1C, 0x20, 0x83, 0x0C, 0x5E, 0x02, 0x04, 0x08, 0x17, 0xB9,
  0xF0, 0xC1, 0x83, 0x87, 0x3B, 0xD0, 0x3C, 0x8E, 0x0F, 0xF8, 0x18, 0x31,
  0xBE, 0x1C, 0xC2, 0x08, 0xF8, 0x82, 0x08, 0x20, 0x82, 0x08, 0x3F, 0x66,
  0x42, 0x66, 0x7C, 0x40, 0x7E, 0x43, 0x43, 0x43, 0x7C, 0xC1, 0x83, 0x06,
  0x0D, 0xDC, 0xF0, 0xE1, 0xC3, 0x87, 0x0E, 0x10, 0xF0, 0xFF, 0xFF, 0x2C,
  0x06, 0xDB, 0x6D, 0xB6, 0xF0, 0xC1, 0x83, 0x06, 0x0C, 0x59, 0x34, 0x70,
  0xD1, 0xB3, 0x36, 0x30, 0xFF, 0xFF, 0xFF, 0xDC, 0xEE, 0x73, 0xC6, 0x1C,
  0x61, 0xC6, 0x1C, 0x61, 0xC6, 0x1C, 0x61, 0xDD, 0xCF, 0x0E, 0x1C, 0x38,
  0x70, 0xE1, 0x3C, 0x46, 0xC3, 0x83, 0x83, 0xC2, 0xC6, 0x7C, 0xDC, 0xE6,
  0xC2, 0xC3, 0xC3, 0xC2, 0xE6, 0xDC, 0xC0, 0xC0, 0xC0, 0x7B, 0x9F, 0x0C,
  0x18, 0x38, 0x73, 0xBD, 0x02, 0x04, 0x08, 0xFF, 0x31, 0x8C, 0x63, 0x18,
  0x76, 0x61, 0xC3, 0x86, 0x7E, 0x21, 0x3E, 0x42, 0x10, 0x84, 0x21, 0xC0,
  0xC3, 0x87, 0x0E, 0x1C, 0x38, 0x53, 0xBD, 0xC3, 0x42, 0x62, 0x66, 0x24,
  0x34, 0x1C, 0x18, 0x42, 0x14, 0x71, 0x65, 0x36, 0x52, 0x25, 0x22, 0x8E,
  0x38, 0xC1, 0x8C, 0x42, 0xC8, 0xF0, 0xC1, 0x85, 0x99, 0xA1, 0xC3, 0x42,
  0x62, 0x26, 0x24, 0x3C, 0x1C, 0x18, 0x18, 0x10, 0x30, 0xF8, 0xC4, 0x66,
  0x23, 0x1F, 0x36, 0x66, 0x66, 0x48, 0x46, 0x66, 0x66, 0x30, 0xFF, 0xFF,
  0xFF, 0xFF, 0xC6, 0x66, 0x62, 0x21, 0x22, 0x26, 0x66, 0xC0, 0xF3, 0x26,
  0x38 };

const GFXglyph calibri9pt7bGlyphs[] PROGMEM = {
  {     0,   0,   0,   4,    0,    1 },   // 0x20 ' '
  {     0,   2,  12,   6,    2,  -11 },   // 0x21 '!'
  {     3,   5,   5,   7,    1,  -11 },   // 0x22 '"'
  {     7,   9,  11,   9,    0,  -10 },   // 0x23 '#'
  {    20,   7,  15,   9,    1,  -12 },   // 0x24 '$'
  {    34,  11,  12,  13,    1,  -11 },   // 0x25 '%'
  {    51,  12,  12,  12,    0,  -11 },   // 0x26 '&'
  {    69,   2,   5,   4,    1,  -11 },   // 0x27 '''
  {    71,   3,  15,   5,    1,  -11 },   // 0x28 '('
  {    77,   3,  15,   5,    1,  -11 },   // 0x29 ')'
  {    83,   7,   6,   9,    1,  -11 },   // 0x2A '*'
  {    89,   7,   8,   9,    1,   -8 },   // 0x2B '+'
  {    96,   3,   5,   4,    0,   -1 },   // 0x2C ','
  {    98,   4,   1,   6,    1,   -4 },   // 0x2D '-'
  {    99,   2,   2,   5,    1,   -1 },   // 0x2E '.'
  {   100,   7,  15,   7,    0,  -12 },   // 0x2F '/'
  {   114,   8,  11,   9,    1,  -10 },   // 0x30 '0'
  {   125,   6,  11,   9,    2,  -10 },   // 0x31 '1'
  {   134,   7,  11,   9,    1,  -10 },   // 0x32 '2'
  {   144,   7,  11,   9,    1,  -10 },   // 0x33 '3'
  {   154,   9,  11,   9,    0,  -10 },   // 0x34 '4'
  {   167,   7,  11,   9,    1,  -10 },   // 0x35 '5'
  {   177,   7,  11,   9,    1,  -10 },   // 0x36 '6'
  {   187,   7,  11,   9,    1,  -10 },   // 0x37 '7'
  {   197,   7,  11,   9,    1,  -10 },   // 0x38 '8'
  {   207,   7,  11,   9,    1,  -10 },   // 0x39 '9'
  {   217,   1,   8,   5,    2,   -7 },   // 0x3A ':'
  {   218,   2,  11,   5,    1,   -7 },   // 0x3B ';'
  {   221,   7,   8,   9,    1,   -8 },   // 0x3C '<'
  {   228,   7,   4,   9,    1,   -6 },   // 0x3D '='
  {   232,   7,   8,   9,    1,   -8 },   // 0x3E '>'
  {   239,   7,  12,   8,    1,  -11 },   // 0x3F '?'
  {   250,  15,  13,  16,    0,  -10 },   // 0x40 '@'
  {   275,  10,  11,  10,    0,  -10 },   // 0x41 'A'
  {   289,   7,  11,  10,    2,  -10 },   // 0x42 'B'
  {   299,   8,  11,  10,    1,  -10 },   // 0x43 'C'
  {   310,   8,  11,  11,    2,  -10 },   // 0x44 'D'
  {   321,   6,  11,   9,    2,  -10 },   // 0x45 'E'
  {   330,   5,  11,   8,    2,  -10 },   // 0x46 'F'
  {   337,   9,  11,  11,    1,  -10 },   // 0x47 'G'
  {   350,   8,  11,  11,    2,  -10 },   // 0x48 'H'
  {   361,   1,  11,   5,    2,  -10 },   // 0x49 'I'
  {   363,   4,  11,   6,    0,  -10 },   // 0x4A 'J'
  {   369,   7,  11,   9,    2,  -10 },   // 0x4B 'K'
  {   379,   5,  11,   8,    2,  -10 },   // 0x4C 'L'
  {   386,  12,  11,  15,    2,  -10 },   // 0x4D 'M'
  {   403,   8,  11,  12,    2,  -10 },   // 0x4E 'N'
  {   414,  10,  11,  12,    1,  -10 },   // 0x4F 'O'
  {   428,   7,  11,   9,    2,  -10 },   // 0x50 'P'
  {   438,  11,  13,  12,    1,  -10 },   // 0x51 'Q'
  {   456,   7,  11,  10,    2,  -10 },   // 0x52 'R'
  {   466,   7,  11,   8,    1,  -10 },   // 0x53 'S'
  {   476,   9,  11,   9,    0,  -10 },   // 0x54 'T'
  {   489,   8,  11,  12,    2,  -10 },   // 0x55 'U'
  {   500,  10,  11,  10,    0,  -10 },   // 0x56 'V'
  {   514,  14,  11,  16,    1,  -10 },   // 0x57 'W'
  {   534,   9,  11,   9,    0,  -10 },   // 0x58 'X'
  {   547,   9,  11,   9,    0,  -10 },   // 0x59 'Y'
  {   560,   7,  11,   8,    1,  -10 },   // 0x5A 'Z'
  {   570,   3,  15,   6,    2,  -11 },   // 0x5B '['
  {   576,   7,  15,   7,    0,  -12 },   // 0x5C '\'
  {   590,   3,  15,   6,    1,  -11 },   // 0x5D ']'
  {   596,   7,   7,   9,    1,  -10 },   // 0x5E '^'
  {   603,   9,   1,   9,    0,    3 },   // 0x5F '_'
  {   605,   4,   4,   5,    0,  -11 },   // 0x60 '`'
  {   607,   6,   8,   9,    1,   -7 },   // 0x61 'a'
  {   613,   8,  12,   9,    1,  -11 },   // 0x62 'b'
  {   625,   6,   8,   8,    1,   -7 },   // 0x63 'c'
  {   631,   7,  12,   9,    1,  -11 },   // 0x64 'd'
  {   642,   7,   8,   9,    1,   -7 },   // 0x65 'e'
  {   649,   6,  12,   6,    0,  -11 },   // 0x66 'f'
  {   658,   8,  11,   8,    0,   -7 },   // 0x67 'g'
  {   669,   7,  12,   9,    1,  -11 },   // 0x68 'h'
  {   680,   2,  12,   4,    1,  -11 },   // 0x69 'i'
  {   683,   3,  15,   4,    0,  -11 },   // 0x6A 'j'
  {   689,   7,  12,   8,    1,  -11 },   // 0x6B 'k'
  {   700,   2,  12,   4,    1,  -11 },   // 0x6C 'l'
  {   703,  12,   8,  14,    1,   -7 },   // 0x6D 'm'
  {   715,   7,   8,   9,    1,   -7 },   // 0x6E 'n'
  {   722,   8,   8,  10,    1,   -7 },   // 0x6F 'o'
  {   730,   8,  11,   9,    1,   -7 },   // 0x70 'p'
  {   741,   7,  11,   9,    1,   -7 },   // 0x71 'q'
  {   751,   5,   8,   6,    1,   -7 },   // 0x72 'r'
  {   756,   5,   8,   7,    1,   -7 },   // 0x73 's'
  {   761,   5,  10,   6,    0,   -9 },   // 0x74 't'
  {   768,   7,   8,   9,    1,   -7 },   // 0x75 'u'
  {   775,   8,   8,   8,    0,   -7 },   // 0x76 'v'
  {   783,  12,   8,  13,    0,   -7 },   // 0x77 'w'
  {   795,   7,   8,   8,    0,   -7 },   // 0x78 'x'
  {   802,   8,  11,   8,    0,   -7 },   // 0x79 'y'
  {   813,   5,   8,   7,    1,   -7 },   // 0x7A 'z'
  {   818,   4,  15,   6,    1,  -11 },   // 0x7B '{'
  {   826,   2,  16,   8,    3,  -12 },   // 0x7C '|'
  {   830,   4,  15,   6,    1,  -11 },   // 0x7D '}'
  {   838,   7,   3,   9,    1,   -9 } }; // 0x7E '~'

const GFXfont calibri9pt7b PROGMEM = {
  (uint8_t  *)calibri9pt7bBitmaps,
  (GFXglyph *)calibri9pt7bGlyphs,
  0x20, 0x7E, 22 };

// Approx. 1513 bytes
