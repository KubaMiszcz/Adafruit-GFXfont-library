#pragma once
#include <Adafruit_GFX.h>

const uint8_t Roboto_Thin8pt7bBitmaps[] PROGMEM = {
  0xFF, 0x90, 0xFC, 0x11, 0x09, 0x04, 0x8F, 0xF1, 0x21, 0x10, 0x88, 0x48,
  0xFF, 0x92, 0x09, 0x08, 0x80, 0x10, 0x71, 0x14, 0x18, 0x08, 0x0C, 0x06,
  0x02, 0x06, 0x0C, 0x27, 0x82, 0x04, 0x00, 0x60, 0x24, 0x09, 0x12, 0x48,
  0x64, 0x01, 0x00, 0x80, 0x26, 0x12, 0x49, 0x12, 0x24, 0x06, 0x38, 0x48,
  0x84, 0x48, 0x50, 0x20, 0x50, 0x89, 0x89, 0x86, 0x82, 0x7D, 0xE0, 0x34,
  0x48, 0x88, 0x88, 0x88, 0x88, 0x88, 0x44, 0x30, 0x84, 0x42, 0x22, 0x21,
  0x11, 0x22, 0x22, 0x44, 0x80, 0x10, 0x22, 0x5B, 0xC3, 0x09, 0x80, 0x10,
  0x20, 0x40, 0x8F, 0xE2, 0x04, 0x08, 0x10, 0xE0, 0xF0, 0x80, 0x0C, 0x20,
  0x84, 0x10, 0x42, 0x08, 0x41, 0x04, 0x20, 0x80, 0x38, 0x8A, 0x14, 0x18,
  0x30, 0x60, 0xC1, 0x83, 0x09, 0x11, 0xC0, 0x3D, 0x11, 0x11, 0x11, 0x11,
  0x11, 0x79, 0x0A, 0x14, 0x20, 0x40, 0x82, 0x08, 0x20, 0x82, 0x07, 0xF0,
  0x39, 0x8A, 0x08, 0x10, 0x47, 0x01, 0x01, 0x83, 0x07, 0x11, 0xC0, 0x04,
  0x0C, 0x14, 0x24, 0x24, 0x44, 0x84, 0x84, 0xFF, 0x04, 0x04, 0x04, 0x7E,
  0x81, 0x04, 0x0B, 0x88, 0x80, 0x81, 0x83, 0x05, 0x11, 0xE0, 0x1C, 0x41,
  0x04, 0x0B, 0x98, 0xA0, 0xC1, 0x83, 0x05, 0x11, 0xC0, 0xFE, 0x08, 0x10,
  0x20, 0x81, 0x04, 0x08, 0x20, 0x40, 0x82, 0x00, 0x79, 0x0A, 0x0C, 0x18,
  0x4F, 0x31, 0x41, 0x83, 0x06, 0x1B, 0xC0, 0x38, 0x8A, 0x14, 0x18, 0x30,
  0x61, 0xBD, 0x04, 0x08, 0x23, 0x80, 0x80, 0x80, 0x80, 0xE0, 0x04, 0x66,
  0x20, 0x60, 0x60, 0x40, 0xFE, 0x00, 0x07, 0xF0, 0x81, 0x81, 0x81, 0x19,
  0x88, 0x00, 0x74, 0x62, 0x10, 0x88, 0x44, 0x20, 0x00, 0x40, 0x0F, 0xC0,
  0x81, 0x08, 0x04, 0x8F, 0x28, 0x88, 0xC4, 0x46, 0x42, 0x32, 0x11, 0x90,
  0x8C, 0x8C, 0xA3, 0x99, 0x00, 0x04, 0x00, 0x18, 0x40, 0x3C, 0x00, 0x08,
  0x0A, 0x05, 0x02, 0x82, 0x21, 0x10, 0x88, 0x82, 0x3F, 0x20, 0xA0, 0x30,
  0x10, 0xF9, 0x0A, 0x14, 0x28, 0x50, 0xBE, 0x42, 0x83, 0x06, 0x17, 0xC0,
  0x3C, 0x43, 0x81, 0x81, 0x80, 0x80, 0x80, 0x80, 0x81, 0x81, 0x41, 0x3E,
  0xF9, 0x0A, 0x0C, 0x18, 0x30, 0x60, 0xC1, 0x83, 0x06, 0x17, 0xC0, 0xFE,
  0x08, 0x20, 0x82, 0x0F, 0xE0, 0x82, 0x08, 0x3F, 0xFF, 0x02, 0x04, 0x08,
  0x10, 0x3F, 0x40, 0x81, 0x02, 0x04, 0x00, 0x1E, 0x30, 0xA0, 0x50, 0x18,
  0x04, 0x02, 0x01, 0x0F, 0x80, 0xA0, 0x58, 0x23, 0xE0, 0x81, 0x81, 0x81,
  0x81, 0x81, 0xFF, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0xAA, 0xAA, 0xAA,
  0x04, 0x10, 0x41, 0x04, 0x10, 0x41, 0x86, 0x18, 0x5E, 0x82, 0x84, 0x88,
  0x90, 0xA0, 0xC0, 0xA0, 0x90, 0x88, 0x84, 0x84, 0x83, 0x82, 0x08, 0x20,
  0x82, 0x08, 0x20, 0x82, 0x08, 0x3F, 0x80, 0x60, 0x38, 0x0F, 0x03, 0xC1,
  0x70, 0x5A, 0x26, 0x89, 0x94, 0x65, 0x19, 0x46, 0x21, 0x81, 0x81, 0xC1,
  0xC1, 0xA1, 0x91, 0x91, 0x89, 0x85, 0x85, 0x83, 0x81, 0x3C, 0x21, 0xA0,
  0x50, 0x28, 0x0C, 0x06, 0x03, 0x01, 0x81, 0x40, 0x90, 0xC7, 0x80, 0xF9,
  0x0A, 0x0C, 0x18, 0x30, 0xBE, 0x40, 0x81, 0x02, 0x04, 0x00, 0x3C, 0x21,
  0xA0, 0x50, 0x28, 0x0C, 0x06, 0x03, 0x01, 0x81, 0x40, 0x90, 0xC7, 0x80,
  0x20, 0x08, 0xF9, 0x0A, 0x0C, 0x18, 0x30, 0xBE, 0x44, 0x85, 0x0A, 0x0C,
  0x10, 0x3C, 0xC2, 0x81, 0x80, 0x40, 0x3C, 0x06, 0x01, 0x01, 0x81, 0x82,
  0x7C, 0xFF, 0x84, 0x02, 0x01, 0x00, 0x80, 0x40, 0x20, 0x10, 0x08, 0x04,
  0x02, 0x01, 0x00, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81,
  0x81, 0x43, 0x3C, 0x80, 0xC0, 0x50, 0x48, 0x24, 0x11, 0x10, 0x88, 0x44,
  0x14, 0x0A, 0x05, 0x01, 0x00, 0x81, 0x06, 0x0C, 0x14, 0x30, 0x91, 0x22,
  0x44, 0x89, 0x12, 0x22, 0x49, 0x0A, 0x14, 0x28, 0x50, 0xA1, 0x41, 0x06,
  0x04, 0x08, 0x80, 0xA0, 0x88, 0x84, 0x41, 0x40, 0x40, 0x20, 0x28, 0x22,
  0x11, 0x10, 0x50, 0x10, 0x80, 0xA0, 0x90, 0x44, 0x42, 0x20, 0xA0, 0x50,
  0x10, 0x08, 0x04, 0x02, 0x01, 0x00, 0xFF, 0x02, 0x04, 0x04, 0x08, 0x10,
  0x20, 0x20, 0x40, 0x80, 0x80, 0xFF, 0xF2, 0x49, 0x24, 0x92, 0x49, 0x38,
  0x82, 0x04, 0x10, 0x20, 0x82, 0x04, 0x10, 0x40, 0x82, 0x0C, 0xD5, 0x55,
  0x55, 0x5C, 0x23, 0x19, 0x29, 0x44, 0xFE, 0x90, 0x7A, 0x10, 0x5F, 0x86,
  0x18, 0x63, 0x74, 0x81, 0x02, 0x05, 0xCC, 0x50, 0x60, 0xC1, 0x83, 0x07,
  0x15, 0xC0, 0x7A, 0x18, 0x60, 0x82, 0x08, 0x61, 0x78, 0x04, 0x10, 0x5F,
  0x46, 0x18, 0x61, 0x86, 0x14, 0x5F, 0x39, 0x18, 0x61, 0xFE, 0x08, 0x21,
  0x78, 0x34, 0x8F, 0x88, 0x88, 0x88, 0x88, 0x7D, 0x18, 0x61, 0x86, 0x18,
  0x51, 0x7C, 0x18, 0x5E, 0x82, 0x08, 0x2E, 0xC6, 0x18, 0x61, 0x86, 0x18,
  0x61, 0x9F, 0xF0, 0x20, 0x12, 0x49, 0x24, 0x92, 0x70, 0x82, 0x08, 0x21,
  0x8A, 0x4A, 0x38, 0x92, 0x48, 0xA1, 0xFF, 0xF0, 0xB8, 0xEC, 0x51, 0x82,
  0x18, 0x41, 0x84, 0x18, 0x41, 0x84, 0x18, 0x41, 0x84, 0x10, 0xBB, 0x18,
  0x61, 0x86, 0x18, 0x61, 0x84, 0x38, 0x8A, 0x0C, 0x18, 0x30, 0x60, 0xA2,
  0x38, 0xB9, 0x8A, 0x0C, 0x18, 0x30, 0x60, 0xE2, 0xB9, 0x02, 0x04, 0x00,
  0x7D, 0x18, 0x61, 0x86, 0x18, 0x51, 0x7C, 0x10, 0x41, 0xBC, 0x88, 0x88,
  0x88, 0x80, 0x7A, 0x18, 0x10, 0x38, 0x10, 0x61, 0x78, 0x44, 0xF4, 0x44,
  0x44, 0x42, 0x30, 0x86, 0x18, 0x61, 0x86, 0x18, 0x51, 0x7C, 0x83, 0x05,
  0x12, 0x24, 0x45, 0x0A, 0x0C, 0x10, 0x88, 0x63, 0x19, 0x46, 0x52, 0x92,
  0x94, 0xA6, 0x29, 0x8C, 0x21, 0x00, 0x82, 0x88, 0xA1, 0x41, 0x05, 0x09,
  0x22, 0x82, 0x83, 0x05, 0x12, 0x22, 0x45, 0x0A, 0x0C, 0x10, 0x20, 0x83,
  0x00, 0xFC, 0x20, 0x84, 0x21, 0x08, 0x20, 0xFC, 0x16, 0x44, 0x44, 0x48,
  0x44, 0x44, 0x44, 0x30, 0xFF, 0xFC, 0x82, 0x08, 0x42, 0x10, 0x83, 0x31,
  0x08, 0x42, 0x22, 0x00, 0x70, 0xC4, 0x61, 0xC0 };

const GFXglyph Roboto_Thin8pt7bGlyphs[] PROGMEM = {
  {     0,   0,   0,   4,    0,    1 },   // 0x20 ' '
  {     0,   1,  12,   3,    1,  -11 },   // 0x21 '!'
  {     2,   2,   3,   4,    1,  -11 },   // 0x22 '"'
  {     3,   9,  12,   9,    0,  -11 },   // 0x23 '#'
  {    17,   7,  15,   9,    1,  -12 },   // 0x24 '$'
  {    31,  10,  12,  12,    1,  -11 },   // 0x25 '%'
  {    46,   8,  12,  10,    1,  -11 },   // 0x26 '&'
  {    58,   1,   3,   3,    1,  -11 },   // 0x27 '''
  {    59,   4,  17,   5,    1,  -12 },   // 0x28 '('
  {    68,   4,  17,   5,    0,  -12 },   // 0x29 ')'
  {    77,   7,   6,   7,    0,  -11 },   // 0x2A '*'
  {    83,   7,   9,   9,    1,   -8 },   // 0x2B '+'
  {    91,   1,   3,   3,    1,    0 },   // 0x2C ','
  {    92,   4,   1,   5,    0,   -4 },   // 0x2D '-'
  {    93,   1,   1,   3,    1,    0 },   // 0x2E '.'
  {    94,   6,  13,   6,    0,  -11 },   // 0x2F '/'
  {   104,   7,  12,   9,    1,  -11 },   // 0x30 '0'
  {   115,   4,  12,   9,    1,  -11 },   // 0x31 '1'
  {   121,   7,  12,   9,    1,  -11 },   // 0x32 '2'
  {   132,   7,  12,   9,    1,  -11 },   // 0x33 '3'
  {   143,   8,  12,   9,    1,  -11 },   // 0x34 '4'
  {   155,   7,  12,   9,    1,  -11 },   // 0x35 '5'
  {   166,   7,  12,   9,    1,  -11 },   // 0x36 '6'
  {   177,   7,  12,   9,    1,  -11 },   // 0x37 '7'
  {   188,   7,  12,   9,    1,  -11 },   // 0x38 '8'
  {   199,   7,  12,   9,    1,  -11 },   // 0x39 '9'
  {   210,   1,   9,   3,    1,   -8 },   // 0x3A ':'
  {   212,   1,  11,   3,    1,   -8 },   // 0x3B ';'
  {   214,   6,   7,   8,    1,   -7 },   // 0x3C '<'
  {   220,   7,   4,   9,    1,   -6 },   // 0x3D '='
  {   224,   6,   7,   8,    1,   -7 },   // 0x3E '>'
  {   230,   5,  12,   7,    1,  -11 },   // 0x3F '?'
  {   238,  13,  15,  15,    1,  -10 },   // 0x40 '@'
  {   263,   9,  12,  10,    0,  -11 },   // 0x41 'A'
  {   277,   7,  12,  10,    2,  -11 },   // 0x42 'B'
  {   288,   8,  12,  10,    1,  -11 },   // 0x43 'C'
  {   300,   7,  12,  10,    2,  -11 },   // 0x44 'D'
  {   311,   6,  12,   9,    2,  -11 },   // 0x45 'E'
  {   320,   7,  12,   9,    2,  -11 },   // 0x46 'F'
  {   331,   9,  12,  11,    1,  -11 },   // 0x47 'G'
  {   345,   8,  12,  11,    2,  -11 },   // 0x48 'H'
  {   357,   2,  12,   4,    1,  -11 },   // 0x49 'I'
  {   360,   6,  12,   9,    1,  -11 },   // 0x4A 'J'
  {   369,   8,  12,  10,    2,  -11 },   // 0x4B 'K'
  {   381,   6,  12,   8,    2,  -11 },   // 0x4C 'L'
  {   390,  10,  12,  14,    2,  -11 },   // 0x4D 'M'
  {   405,   8,  12,  11,    2,  -11 },   // 0x4E 'N'
  {   417,   9,  12,  11,    1,  -11 },   // 0x4F 'O'
  {   431,   7,  12,  10,    2,  -11 },   // 0x50 'P'
  {   442,   9,  14,  11,    1,  -11 },   // 0x51 'Q'
  {   458,   7,  12,  10,    2,  -11 },   // 0x52 'R'
  {   469,   8,  12,   9,    1,  -11 },   // 0x53 'S'
  {   481,   9,  12,  10,    0,  -11 },   // 0x54 'T'
  {   495,   8,  12,  11,    1,  -11 },   // 0x55 'U'
  {   507,   9,  12,  10,    0,  -11 },   // 0x56 'V'
  {   521,  14,  12,  15,    0,  -11 },   // 0x57 'W'
  {   542,   9,  12,  10,    0,  -11 },   // 0x58 'X'
  {   556,   9,  12,  10,    0,  -11 },   // 0x59 'Y'
  {   570,   8,  12,  10,    1,  -11 },   // 0x5A 'Z'
  {   582,   3,  15,   3,    1,  -12 },   // 0x5B '['
  {   588,   6,  13,   6,    0,  -11 },   // 0x5C '\'
  {   598,   2,  15,   3,    0,  -12 },   // 0x5D ']'
  {   602,   5,   6,   7,    1,  -11 },   // 0x5E '^'
  {   606,   7,   1,   7,    0,    1 },   // 0x5F '_'
  {   607,   2,   2,   4,    1,  -11 },   // 0x60 '`'
  {   608,   6,   9,   8,    1,   -8 },   // 0x61 'a'
  {   615,   7,  12,   9,    1,  -11 },   // 0x62 'b'
  {   626,   6,   9,   8,    1,   -8 },   // 0x63 'c'
  {   633,   6,  12,   9,    1,  -11 },   // 0x64 'd'
  {   642,   6,   9,   8,    1,   -8 },   // 0x65 'e'
  {   649,   4,  12,   5,    1,  -11 },   // 0x66 'f'
  {   655,   6,  12,   9,    1,   -8 },   // 0x67 'g'
  {   664,   6,  12,   9,    1,  -11 },   // 0x68 'h'
  {   673,   1,  12,   3,    1,  -11 },   // 0x69 'i'
  {   675,   3,  15,   3,   -1,  -11 },   // 0x6A 'j'
  {   681,   6,  12,   8,    1,  -11 },   // 0x6B 'k'
  {   690,   1,  12,   3,    1,  -11 },   // 0x6C 'l'
  {   692,  12,   9,  14,    1,   -8 },   // 0x6D 'm'
  {   706,   6,   9,   9,    1,   -8 },   // 0x6E 'n'
  {   713,   7,   9,   9,    1,   -8 },   // 0x6F 'o'
  {   721,   7,  12,   9,    1,   -8 },   // 0x70 'p'
  {   732,   6,  12,   9,    1,   -8 },   // 0x71 'q'
  {   741,   4,   9,   5,    1,   -8 },   // 0x72 'r'
  {   746,   6,   9,   8,    1,   -8 },   // 0x73 's'
  {   753,   4,  11,   5,    0,  -10 },   // 0x74 't'
  {   759,   6,   9,   9,    1,   -8 },   // 0x75 'u'
  {   766,   7,   9,   8,    0,   -8 },   // 0x76 'v'
  {   774,  10,   9,  12,    1,   -8 },   // 0x77 'w'
  {   786,   7,   9,   8,    0,   -8 },   // 0x78 'x'
  {   794,   7,  12,   8,    0,   -8 },   // 0x79 'y'
  {   805,   6,   9,   8,    1,   -8 },   // 0x7A 'z'
  {   812,   4,  15,   5,    1,  -11 },   // 0x7B '{'
  {   820,   1,  14,   3,    1,  -11 },   // 0x7C '|'
  {   822,   5,  15,   5,    0,  -11 },   // 0x7D '}'
  {   832,   9,   3,  11,    1,   -5 } }; // 0x7E '~'

const GFXfont Roboto_Thin8pt7b PROGMEM = {
  (uint8_t  *)Roboto_Thin8pt7bBitmaps,
  (GFXglyph *)Roboto_Thin8pt7bGlyphs,
  0x20, 0x7E, 19 };

// Approx. 1508 bytes
