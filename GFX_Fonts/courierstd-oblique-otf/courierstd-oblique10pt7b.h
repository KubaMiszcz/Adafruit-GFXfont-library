#pragma once
#include <Adafruit_GFX.h>

const uint8_t courierstd_oblique10pt7bBitmaps[] PROGMEM = {
  0x33, 0x22, 0x22, 0x44, 0x00, 0xEC, 0xCF, 0x2C, 0xA6, 0x9A, 0x40, 0x08,
  0x82, 0x20, 0x90, 0x44, 0x7F, 0xC4, 0x42, 0x20, 0x88, 0xFF, 0x89, 0x04,
  0x41, 0x10, 0x44, 0x00, 0x02, 0x00, 0x80, 0xF8, 0xC6, 0x20, 0x88, 0x03,
  0x00, 0x78, 0x01, 0x00, 0x44, 0x13, 0x0C, 0xBC, 0x04, 0x01, 0x00, 0x40,
  0x38, 0x22, 0x13, 0x0F, 0x10, 0x70, 0xE3, 0x80, 0x38, 0x26, 0x11, 0x09,
  0x07, 0x00, 0x0F, 0x04, 0x41, 0x00, 0x40, 0x10, 0x06, 0x06, 0x9D, 0x34,
  0x86, 0x31, 0x87, 0xB8, 0x6D, 0x25, 0x00, 0x08, 0x21, 0x08, 0x21, 0x04,
  0x10, 0x43, 0x04, 0x10, 0x41, 0x04, 0x00, 0x10, 0x20, 0x82, 0x08, 0x20,
  0x82, 0x08, 0x21, 0x04, 0x21, 0x84, 0x00, 0x18, 0x20, 0x46, 0xF7, 0xC6,
  0x1E, 0x64, 0x00, 0x08, 0x08, 0x08, 0x08, 0xFF, 0x08, 0x08, 0x08, 0x08,
  0x32, 0x64, 0xC0, 0xFC, 0xD8, 0x00, 0x00, 0x04, 0x01, 0x00, 0x20, 0x08,
  0x03, 0x00, 0x40, 0x10, 0x06, 0x00, 0x80, 0x20, 0x04, 0x01, 0x00, 0x40,
  0x08, 0x02, 0x00, 0x80, 0x00, 0x1E, 0x33, 0x61, 0x41, 0x41, 0x81, 0x81,
  0x82, 0x82, 0x82, 0xC4, 0x78, 0x06, 0x3E, 0x04, 0x04, 0x04, 0x04, 0x04,
  0x08, 0x08, 0x08, 0x08, 0xFF, 0x0F, 0x86, 0x31, 0x04, 0x01, 0x00, 0x40,
  0x20, 0x10, 0x18, 0x08, 0x04, 0x26, 0x09, 0xFC, 0x1E, 0x21, 0x01, 0x01,
  0x02, 0x0C, 0x03, 0x01, 0x01, 0x02, 0x86, 0x78, 0x03, 0x07, 0x0A, 0x0A,
  0x12, 0x22, 0x42, 0xC6, 0xFF, 0x04, 0x04, 0x3F, 0x3F, 0x90, 0x08, 0x04,
  0x02, 0x01, 0xF1, 0x84, 0x02, 0x01, 0x00, 0xA0, 0x8F, 0x80, 0x03, 0xC3,
  0x01, 0x00, 0x80, 0x20, 0x17, 0x86, 0x31, 0x04, 0x41, 0x10, 0x46, 0x20,
  0xF0, 0xFF, 0x83, 0x82, 0x06, 0x04, 0x08, 0x08, 0x10, 0x10, 0x20, 0x20,
  0x40, 0x0F, 0x08, 0xC8, 0x24, 0x12, 0x10, 0xF0, 0x8C, 0x82, 0x41, 0x20,
  0x90, 0x87, 0x80, 0x0F, 0x08, 0xC8, 0x24, 0x12, 0x09, 0x0C, 0x7A, 0x02,
  0x01, 0x01, 0x03, 0x1F, 0x00, 0x76, 0x00, 0x0E, 0xC0, 0x1C, 0x60, 0x00,
  0x00, 0xC2, 0x18, 0x40, 0x01, 0x0E, 0x38, 0xC0, 0xC0, 0x30, 0x0E, 0x01,
  0xFF, 0x00, 0x00, 0xFF, 0x81, 0xC0, 0x60, 0x30, 0x63, 0x98, 0x40, 0x7D,
  0x8E, 0x08, 0x10, 0x61, 0x8C, 0x10, 0x00, 0x03, 0x86, 0x00, 0x07, 0x83,
  0x0C, 0x80, 0xA3, 0xD4, 0x92, 0x92, 0x64, 0x8C, 0x92, 0x4D, 0x88, 0x18,
  0xFC, 0x00, 0x0F, 0x80, 0x28, 0x02, 0x80, 0x4C, 0x04, 0x40, 0x84, 0x08,
  0x41, 0xFC, 0x10, 0x42, 0x02, 0x20, 0x2F, 0x0F, 0x3F, 0xC2, 0x08, 0x41,
  0x88, 0x31, 0x04, 0x21, 0x8F, 0xE1, 0x06, 0x20, 0x44, 0x08, 0x83, 0x7F,
  0x80, 0x0F, 0xA3, 0x1C, 0x81, 0xA0, 0x24, 0x01, 0x80, 0x20, 0x04, 0x00,
  0xC0, 0x08, 0x01, 0x86, 0x1F, 0x00, 0x3F, 0x81, 0x06, 0x10, 0x21, 0x02,
  0x10, 0x22, 0x02, 0x20, 0x22, 0x02, 0x20, 0x42, 0x0C, 0x61, 0x8F, 0xE0,
  0x3F, 0xF0, 0x82, 0x10, 0x21, 0x02, 0x11, 0x01, 0x10, 0x1F, 0x03, 0x10,
  0x20, 0x42, 0x04, 0x20, 0x4F, 0xFC, 0x3F, 0xE2, 0x04, 0x41, 0x88, 0x22,
  0x10, 0x46, 0x0F, 0x81, 0x10, 0x20, 0x0C, 0x01, 0x00, 0x7C, 0x00, 0x07,
  0xA1, 0x86, 0x30, 0x22, 0x02, 0x40, 0x24, 0x00, 0x40, 0x04, 0x3E, 0x40,
  0x44, 0x04, 0x60, 0xC1, 0xF0, 0x3C, 0xF1, 0x04, 0x10, 0x41, 0x04, 0x30,
  0x42, 0x04, 0x3F, 0xC2, 0x08, 0x20, 0x82, 0x08, 0x40, 0x8F, 0x3C, 0x3F,
  0xC1, 0x00, 0x40, 0x10, 0x04, 0x01, 0x00, 0x80, 0x20, 0x08, 0x02, 0x00,
  0x83, 0xFC, 0x07, 0xF0, 0x04, 0x00, 0x80, 0x08, 0x00, 0x80, 0x08, 0x40,
  0x84, 0x08, 0x41, 0x0C, 0x10, 0xE3, 0x03, 0xE0, 0x3C, 0xF0, 0x84, 0x18,
  0x81, 0x10, 0x12, 0x01, 0x60, 0x1A, 0x01, 0x30, 0x21, 0x02, 0x10, 0x20,
  0x8F, 0x0E, 0x3F, 0x01, 0x00, 0x20, 0x04, 0x01, 0x80, 0x20, 0x04, 0x00,
  0x81, 0x10, 0x42, 0x08, 0x81, 0x7F, 0xE0, 0x3C, 0x38, 0xA1, 0x85, 0x14,
  0x28, 0xA1, 0x49, 0x0A, 0x58, 0x8C, 0x84, 0x64, 0x22, 0x21, 0x01, 0x08,
  0x08, 0xE1, 0xC0, 0x3C, 0x7C, 0x30, 0x40, 0xC1, 0x04, 0x8C, 0x12, 0x20,
  0x48, 0x81, 0x12, 0x04, 0x48, 0x31, 0x20, 0x83, 0x02, 0x0C, 0x3E, 0x30,
  0x07, 0x83, 0x08, 0xC0, 0x90, 0x14, 0x02, 0x80, 0x50, 0x0A, 0x01, 0x40,
  0x48, 0x18, 0x86, 0x0F, 0x00, 0x3F, 0x82, 0x18, 0x41, 0x08, 0x21, 0x04,
  0x40, 0x88, 0x21, 0xF8, 0x20, 0x04, 0x01, 0x80, 0x7C, 0x00, 0x07, 0x83,
  0x08, 0xC0, 0x90, 0x14, 0x02, 0x80, 0x50, 0x0A, 0x01, 0x40, 0x48, 0x19,
  0x86, 0x1F, 0x01, 0x00, 0x7F, 0x00, 0x80, 0x3F, 0xC2, 0x08, 0x41, 0x08,
  0x21, 0x04, 0x20, 0x8C, 0x21, 0xF8, 0x22, 0x04, 0x20, 0x84, 0x78, 0x60,
  0x07, 0xA1, 0x0C, 0x40, 0x98, 0x23, 0x00, 0x30, 0x03, 0xE0, 0x06, 0x40,
  0x48, 0x19, 0x86, 0x3F, 0x80, 0x7F, 0xE8, 0x85, 0x10, 0xE2, 0x30, 0x40,
  0x08, 0x02, 0x00, 0x40, 0x08, 0x01, 0x00, 0x20, 0x3F, 0x00, 0xF9, 0xF2,
  0x04, 0x20, 0x46, 0x04, 0x40, 0xC4, 0x08, 0x40, 0x84, 0x08, 0x40, 0x84,
  0x10, 0x63, 0x03, 0xC0, 0xF8, 0xF2, 0x04, 0x20, 0x42, 0x08, 0x20, 0x82,
  0x10, 0x31, 0x01, 0x20, 0x12, 0x01, 0x40, 0x14, 0x01, 0x80, 0xF0, 0xE4,
  0x04, 0x44, 0x44, 0x44, 0x4C, 0x84, 0xC8, 0x56, 0x85, 0x28, 0x63, 0x06,
  0x30, 0x43, 0x0C, 0x30, 0x1E, 0x78, 0x61, 0x01, 0x10, 0x09, 0x00, 0x38,
  0x01, 0x80, 0x0C, 0x00, 0xA0, 0x08, 0x80, 0x84, 0x0C, 0x10, 0xF3, 0xC0,
  0xF1, 0xD0, 0x66, 0x10, 0x88, 0x24, 0x05, 0x01, 0x80, 0x40, 0x10, 0x04,
  0x01, 0x03, 0xF0, 0x3F, 0xC8, 0x32, 0x18, 0x84, 0x02, 0x01, 0x00, 0x80,
  0x42, 0x20, 0x98, 0x2C, 0x1B, 0xFC, 0x3C, 0x82, 0x08, 0x21, 0x84, 0x10,
  0x41, 0x04, 0x20, 0x82, 0x0E, 0x00, 0x02, 0x10, 0x84, 0x10, 0x84, 0x20,
  0x84, 0x21, 0x04, 0x21, 0x08, 0x1C, 0x10, 0x43, 0x08, 0x20, 0x82, 0x08,
  0x41, 0x04, 0x10, 0x4E, 0x00, 0x18, 0x18, 0x3C, 0x66, 0xC1, 0xFF, 0xF0,
  0x43, 0xC1, 0x80, 0x0F, 0x84, 0x20, 0x08, 0x02, 0x1F, 0x98, 0x24, 0x19,
  0x1C, 0x79, 0xC0, 0x18, 0x00, 0x80, 0x08, 0x00, 0x80, 0x0B, 0xC1, 0xC2,
  0x18, 0x31, 0x01, 0x10, 0x11, 0x02, 0x10, 0x23, 0x8C, 0x6F, 0x80, 0x1F,
  0x4C, 0x34, 0x09, 0x00, 0x80, 0x20, 0x0C, 0x01, 0x8E, 0x3E, 0x00, 0x01,
  0xE0, 0x04, 0x00, 0x80, 0x10, 0xF4, 0x61, 0x88, 0x32, 0x02, 0x40, 0x48,
  0x19, 0x02, 0x31, 0xC3, 0xCE, 0x1F, 0x0C, 0x64, 0x0B, 0x02, 0xFF, 0xA0,
  0x08, 0x03, 0x06, 0x3E, 0x00, 0x07, 0xC3, 0x00, 0x80, 0x20, 0x7F, 0x84,
  0x01, 0x00, 0x40, 0x10, 0x04, 0x03, 0x00, 0x80, 0xFE, 0x00, 0x0F, 0x73,
  0x0C, 0x40, 0xC4, 0x04, 0x40, 0x44, 0x08, 0x61, 0x83, 0xE8, 0x00, 0x80,
  0x08, 0x01, 0x08, 0x30, 0xFE, 0x00, 0x38, 0x03, 0x00, 0x40, 0x08, 0x01,
  0x3C, 0x38, 0x84, 0x11, 0x02, 0x20, 0x44, 0x10, 0x82, 0x10, 0x4F, 0x3C,
  0x06, 0x06, 0x00, 0x00, 0x3C, 0x04, 0x04, 0x0C, 0x08, 0x08, 0x08, 0x08,
  0xFF, 0x01, 0x80, 0xC0, 0x00, 0x03, 0xF0, 0x08, 0x04, 0x02, 0x01, 0x01,
  0x00, 0x80, 0x40, 0x20, 0x10, 0x10, 0x08, 0xF8, 0x00, 0x38, 0x01, 0x00,
  0x40, 0x08, 0x01, 0x1E, 0x22, 0x04, 0x80, 0xE0, 0x34, 0x04, 0x40, 0x8C,
  0x10, 0x8E, 0x3C, 0x3E, 0x06, 0x04, 0x04, 0x04, 0x04, 0x04, 0x08, 0x08,
  0x08, 0x08, 0x08, 0xFF, 0x6C, 0xE6, 0xE5, 0x88, 0xA1, 0x14, 0x46, 0x88,
  0x91, 0x12, 0x22, 0xC6, 0x60, 0x77, 0x86, 0x13, 0x04, 0x81, 0x20, 0x88,
  0x22, 0x08, 0x82, 0xF3, 0xC0, 0x0F, 0x82, 0x18, 0x81, 0xA0, 0x14, 0x02,
  0x80, 0x90, 0x13, 0x0C, 0x1E, 0x00, 0x3B, 0xC1, 0x42, 0x18, 0x31, 0x01,
  0x10, 0x11, 0x02, 0x30, 0x23, 0x8C, 0x2F, 0x82, 0x00, 0x20, 0x02, 0x00,
  0xF8, 0x00, 0x0F, 0x73, 0x1C, 0x20, 0xC4, 0x04, 0x40, 0x44, 0x08, 0x40,
  0x86, 0x38, 0x3C, 0x80, 0x08, 0x01, 0x00, 0x10, 0x0F, 0xC0, 0x3C, 0xE1,
  0x24, 0x38, 0x04, 0x00, 0x80, 0x10, 0x04, 0x00, 0x80, 0x7F, 0x00, 0x1F,
  0x90, 0xD0, 0x2C, 0x03, 0xF0, 0x0E, 0x07, 0x82, 0xBE, 0x00, 0x20, 0x20,
  0x20, 0xFE, 0x40, 0x40, 0x40, 0x40, 0x80, 0x80, 0xC6, 0x7C, 0xE3, 0xB0,
  0x50, 0x28, 0x34, 0x12, 0x09, 0x04, 0x8E, 0x79, 0x80, 0xF1, 0xE4, 0x10,
  0x84, 0x10, 0x82, 0x20, 0x64, 0x05, 0x00, 0xC0, 0x18, 0x00, 0xE0, 0xE8,
  0x09, 0x11, 0x26, 0x44, 0xC8, 0xAA, 0x15, 0x43, 0x30, 0x62, 0x00, 0x3C,
  0x70, 0x42, 0x01, 0x20, 0x06, 0x00, 0x30, 0x02, 0x80, 0x22, 0x02, 0x18,
  0x79, 0xE0, 0x78, 0x72, 0x04, 0x10, 0x41, 0x08, 0x11, 0x00, 0xB0, 0x0A,
  0x00, 0xC0, 0x0C, 0x00, 0x80, 0x10, 0x02, 0x00, 0xF8, 0x00, 0x3F, 0x88,
  0x66, 0x30, 0x18, 0x0C, 0x04, 0x02, 0x11, 0x04, 0xFF, 0x00, 0x06, 0x10,
  0x20, 0xC1, 0x02, 0x04, 0x18, 0x20, 0x81, 0x81, 0x02, 0x08, 0x10, 0x20,
  0x40, 0xC0, 0xFF, 0xFF, 0xF0, 0x18, 0x10, 0x41, 0x08, 0x20, 0x82, 0x08,
  0x10, 0xC4, 0x10, 0x43, 0x08, 0x20, 0x8C, 0x00, 0x71, 0xD9, 0x8E };

const GFXglyph courierstd_oblique10pt7bGlyphs[] PROGMEM = {
  {     0,   0,   0,  12,    0,    1 },   // 0x20 ' '
  {     0,   4,  12,  12,    5,  -11 },   // 0x21 '!'
  {     6,   6,   6,  12,    5,  -11 },   // 0x22 '"'
  {    11,  10,  13,  12,    2,  -11 },   // 0x23 '#'
  {    28,  10,  16,  12,    2,  -12 },   // 0x24 '$'
  {    48,   9,  12,  12,    3,  -11 },   // 0x25 '%'
  {    62,  10,  11,  12,    2,  -10 },   // 0x26 '&'
  {    76,   3,   6,  12,    6,  -11 },   // 0x27 '''
  {    79,   6,  15,  12,    6,  -12 },   // 0x28 '('
  {    91,   6,  15,  12,    2,  -12 },   // 0x29 ')'
  {   103,   7,   9,  12,    4,  -11 },   // 0x2A '*'
  {   111,   8,   9,  12,    3,   -8 },   // 0x2B '+'
  {   120,   4,   5,  12,    3,   -1 },   // 0x2C ','
  {   123,   6,   1,  12,    4,   -4 },   // 0x2D '-'
  {   124,   3,   2,  12,    5,   -1 },   // 0x2E '.'
  {   125,  11,  17,  12,    1,  -13 },   // 0x2F '/'
  {   149,   8,  12,  12,    3,  -11 },   // 0x30 '0'
  {   161,   8,  12,  12,    2,  -11 },   // 0x31 '1'
  {   173,  10,  12,  12,    1,  -11 },   // 0x32 '2'
  {   188,   8,  12,  12,    2,  -11 },   // 0x33 '3'
  {   200,   8,  12,  12,    2,  -11 },   // 0x34 '4'
  {   212,   9,  12,  12,    2,  -11 },   // 0x35 '5'
  {   226,  10,  12,  12,    2,  -11 },   // 0x36 '6'
  {   241,   8,  12,  12,    4,  -11 },   // 0x37 '7'
  {   253,   9,  12,  12,    2,  -11 },   // 0x38 '8'
  {   267,   9,  12,  12,    2,  -11 },   // 0x39 '9'
  {   281,   4,   7,  12,    5,   -6 },   // 0x3A ':'
  {   285,   6,   9,  12,    3,   -6 },   // 0x3B ';'
  {   292,   8,   8,  12,    3,   -7 },   // 0x3C '<'
  {   300,   8,   4,  12,    3,   -5 },   // 0x3D '='
  {   304,   7,   8,  12,    4,   -7 },   // 0x3E '>'
  {   311,   7,  12,  12,    4,  -11 },   // 0x3F '?'
  {   322,  11,  11,  12,    1,  -10 },   // 0x40 '@'
  {   338,  12,  12,  12,    0,  -11 },   // 0x41 'A'
  {   356,  11,  12,  12,    1,  -11 },   // 0x42 'B'
  {   373,  11,  12,  12,    2,  -11 },   // 0x43 'C'
  {   390,  12,  12,  12,    1,  -11 },   // 0x44 'D'
  {   408,  12,  12,  12,    1,  -11 },   // 0x45 'E'
  {   426,  11,  12,  12,    2,  -11 },   // 0x46 'F'
  {   443,  12,  12,  12,    1,  -11 },   // 0x47 'G'
  {   461,  12,  12,  12,    1,  -11 },   // 0x48 'H'
  {   479,  10,  12,  12,    2,  -11 },   // 0x49 'I'
  {   494,  12,  12,  12,    1,  -11 },   // 0x4A 'J'
  {   512,  12,  12,  12,    1,  -11 },   // 0x4B 'K'
  {   530,  11,  12,  12,    1,  -11 },   // 0x4C 'L'
  {   547,  13,  12,  12,    0,  -11 },   // 0x4D 'M'
  {   567,  14,  12,  12,    0,  -11 },   // 0x4E 'N'
  {   588,  11,  12,  12,    1,  -11 },   // 0x4F 'O'
  {   605,  11,  12,  12,    2,  -11 },   // 0x50 'P'
  {   622,  11,  15,  12,    1,  -11 },   // 0x51 'Q'
  {   643,  11,  12,  12,    1,  -11 },   // 0x52 'R'
  {   660,  11,  12,  12,    1,  -11 },   // 0x53 'S'
  {   677,  11,  12,  12,    2,  -11 },   // 0x54 'T'
  {   694,  12,  12,  12,    2,  -11 },   // 0x55 'U'
  {   712,  12,  12,  12,    2,  -11 },   // 0x56 'V'
  {   730,  12,  12,  12,    2,  -11 },   // 0x57 'W'
  {   748,  13,  12,  12,    0,  -11 },   // 0x58 'X'
  {   768,  10,  12,  12,    3,  -11 },   // 0x59 'Y'
  {   783,  10,  12,  12,    2,  -11 },   // 0x5A 'Z'
  {   798,   6,  15,  12,    6,  -12 },   // 0x5B '['
  {   810,   5,  17,  12,    4,  -13 },   // 0x5C '\'
  {   821,   6,  15,  12,    2,  -12 },   // 0x5D ']'
  {   833,   8,   5,  12,    3,  -14 },   // 0x5E '^'
  {   838,  12,   1,  12,   -1,    5 },   // 0x5F '_'
  {   840,   6,   3,  12,    5,  -12 },   // 0x60 '`'
  {   843,  10,   9,  12,    1,   -8 },   // 0x61 'a'
  {   855,  12,  13,  12,    0,  -12 },   // 0x62 'b'
  {   875,  10,   9,  12,    2,   -8 },   // 0x63 'c'
  {   887,  11,  13,  12,    1,  -12 },   // 0x64 'd'
  {   905,  10,   9,  12,    2,   -8 },   // 0x65 'e'
  {   917,  10,  13,  12,    2,  -12 },   // 0x66 'f'
  {   934,  12,  13,  12,    1,   -8 },   // 0x67 'g'
  {   954,  11,  13,  12,    1,  -12 },   // 0x68 'h'
  {   972,   8,  13,  12,    2,  -12 },   // 0x69 'i'
  {   985,   9,  17,  12,    1,  -12 },   // 0x6A 'j'
  {  1005,  11,  13,  12,    1,  -12 },   // 0x6B 'k'
  {  1023,   8,  13,  12,    2,  -12 },   // 0x6C 'l'
  {  1036,  11,   9,  12,    1,   -8 },   // 0x6D 'm'
  {  1049,  10,   9,  12,    1,   -8 },   // 0x6E 'n'
  {  1061,  11,   9,  12,    1,   -8 },   // 0x6F 'o'
  {  1074,  12,  13,  12,    0,   -8 },   // 0x70 'p'
  {  1094,  12,  13,  12,    1,   -8 },   // 0x71 'q'
  {  1114,  11,   9,  12,    1,   -8 },   // 0x72 'r'
  {  1127,   9,   9,  12,    2,   -8 },   // 0x73 's'
  {  1138,   8,  12,  12,    3,  -11 },   // 0x74 't'
  {  1150,   9,   9,  12,    2,   -8 },   // 0x75 'u'
  {  1161,  11,   9,  12,    2,   -8 },   // 0x76 'v'
  {  1174,  11,   9,  12,    2,   -8 },   // 0x77 'w'
  {  1187,  13,   9,  12,    0,   -8 },   // 0x78 'x'
  {  1202,  12,  13,  12,    1,   -8 },   // 0x79 'y'
  {  1222,  10,   9,  12,    2,   -8 },   // 0x7A 'z'
  {  1234,   7,  18,  12,    4,  -13 },   // 0x7B '{'
  {  1250,   1,  20,  12,    7,  -14 },   // 0x7C '|'
  {  1253,   6,  19,  12,    3,  -14 },   // 0x7D '}'
  {  1268,   8,   3,  12,    3,   -4 } }; // 0x7E '~'

const GFXfont courierstd_oblique10pt7b PROGMEM = {
  (uint8_t  *)courierstd_oblique10pt7bBitmaps,
  (GFXglyph *)courierstd_oblique10pt7bGlyphs,
  0x20, 0x7E, 24 };

// Approx. 1943 bytes
