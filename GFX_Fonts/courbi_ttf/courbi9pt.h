#pragma once
#include <Adafruit_GFX.h>

const uint8_t courbi9pt7bBitmaps[] PROGMEM = {
  0x19, 0xCE, 0x63, 0x18, 0xCC, 0x60, 0x19, 0x80, 0x6E, 0x9B, 0x36, 0x68,
  0x80, 0x0D, 0x84, 0xC6, 0xC3, 0x67, 0xFB, 0xFC, 0xD8, 0x6C, 0xFF, 0x7F,
  0x9B, 0x0D, 0x8C, 0x86, 0xC0, 0x06, 0x03, 0x07, 0xA7, 0xF2, 0x19, 0xE0,
  0xFC, 0x06, 0xC3, 0x61, 0xBF, 0x97, 0x83, 0x01, 0x80, 0xC0, 0x1C, 0x13,
  0x08, 0x84, 0x83, 0xB8, 0xE3, 0xB8, 0x26, 0x33, 0x19, 0x07, 0x00, 0x0F,
  0x0F, 0x86, 0x83, 0x01, 0x83, 0xED, 0xBF, 0x9C, 0x7F, 0x3F, 0x80, 0x7B,
  0x68, 0x0C, 0x71, 0x8C, 0x61, 0x86, 0x18, 0xE1, 0x86, 0x18, 0x20, 0x10,
  0xC6, 0x31, 0x8C, 0x63, 0x31, 0x99, 0x88, 0x00, 0x0C, 0x08, 0xFF, 0xFF,
  0x38, 0x6C, 0x4C, 0x04, 0x06, 0x03, 0x01, 0x8F, 0xFF, 0xFC, 0x60, 0x30,
  0x18, 0x08, 0x00, 0x39, 0x98, 0x88, 0x00, 0xFF, 0xFC, 0x7C, 0x00, 0x60,
  0x0C, 0x03, 0x00, 0xC0, 0x18, 0x06, 0x01, 0x80, 0x30, 0x0C, 0x03, 0x00,
  0x60, 0x18, 0x06, 0x00, 0xC0, 0x30, 0x00, 0x0F, 0x0F, 0x8C, 0x6C, 0x36,
  0x1B, 0x0F, 0x0D, 0x86, 0xE6, 0x3F, 0x0E, 0x00, 0x06, 0x3C, 0x3C, 0x0C,
  0x0C, 0x0C, 0x08, 0x18, 0x18, 0xFE, 0xFE, 0x07, 0x87, 0xF3, 0x8C, 0xC3,
  0x01, 0x80, 0xC0, 0xE0, 0x60, 0x71, 0x3F, 0xCF, 0xF0, 0x0F, 0x87, 0xF1,
  0x8C, 0x03, 0x0F, 0x83, 0xE0, 0x18, 0x06, 0x41, 0xBF, 0xC7, 0xE0, 0x03,
  0x07, 0x0F, 0x1B, 0x32, 0x66, 0xFF, 0xFF, 0x06, 0x1E, 0x1E, 0x1F, 0xC7,
  0xF1, 0x80, 0x60, 0x3F, 0x0F, 0xE1, 0x18, 0x02, 0x41, 0x9F, 0xC3, 0xE0,
  0x07, 0x8F, 0xCE, 0x0C, 0x0D, 0xC7, 0xF3, 0x9D, 0x84, 0xC6, 0x7F, 0x1E,
  0x00, 0x7F, 0x7F, 0xB0, 0xC0, 0xC0, 0x60, 0x60, 0x30, 0x30, 0x30, 0x18,
  0x08, 0x00, 0x0F, 0x1F, 0xCC, 0x6C, 0x33, 0xF3, 0xF9, 0x8D, 0x86, 0xC3,
  0x7F, 0x1F, 0x00, 0x0F, 0x0F, 0xCC, 0x64, 0x36, 0x39, 0xFC, 0x76, 0x06,
  0x0E, 0x7E, 0x3C, 0x00, 0x33, 0x00, 0x00, 0x6E, 0x0C, 0x70, 0x00, 0x00,
  0x03, 0x08, 0x43, 0x00, 0x00, 0x60, 0x3C, 0x3E, 0x1F, 0x0F, 0x00, 0xF0,
  0x07, 0x00, 0x78, 0x03, 0x80, 0x30, 0x7F, 0xEF, 0xFC, 0x00, 0x00, 0x0F,
  0xFD, 0xFF, 0x80, 0x30, 0x07, 0x80, 0x3C, 0x01, 0xC0, 0x1E, 0x07, 0x03,
  0x81, 0xE0, 0xF0, 0x18, 0x00, 0x3D, 0xFE, 0x1C, 0x30, 0xC7, 0x18, 0x00,
  0x00, 0xC3, 0x80, 0x0F, 0x11, 0x21, 0x61, 0x4F, 0x53, 0x53, 0xCE, 0xC0,
  0xC0, 0xC4, 0x7C, 0x0F, 0x83, 0xF0, 0x1E, 0x06, 0xC0, 0x8C, 0x3F, 0x8F,
  0xF1, 0x86, 0xF9, 0xFE, 0x3C, 0x1F, 0xC7, 0xFC, 0x61, 0x8C, 0x31, 0xFC,
  0x3F, 0xCC, 0x19, 0x83, 0xFF, 0xDF, 0xF0, 0x0F, 0xE3, 0xFC, 0xC3, 0xB0,
  0x26, 0x00, 0x80, 0x30, 0x03, 0x06, 0x7F, 0x87, 0xE0, 0x1F, 0x87, 0xF8,
  0x63, 0x88, 0x33, 0x06, 0x60, 0xCC, 0x31, 0x0E, 0xFF, 0x9F, 0xC0, 0x1F,
  0xF3, 0xFE, 0x18, 0x61, 0x90, 0x1F, 0x01, 0xF0, 0x33, 0x63, 0x04, 0x7F,
  0xC7, 0xFC, 0x3F, 0xF3, 0xFE, 0x18, 0x21, 0xB6, 0x1F, 0x03, 0xF0, 0x32,
  0x03, 0x00, 0xFC, 0x0F, 0xC0, 0x0F, 0xA3, 0xFC, 0xC1, 0xB0, 0x26, 0x00,
  0x8F, 0xF1, 0xF7, 0x04, 0x7F, 0x87, 0xE0, 0x3C, 0xE7, 0xBC, 0xC3, 0x18,
  0x63, 0xF8, 0x7F, 0x18, 0x63, 0x0C, 0xF7, 0xDE, 0xF0, 0x3F, 0x9F, 0xC3,
  0x01, 0x80, 0xC0, 0x40, 0x60, 0x30, 0xFE, 0x7F, 0x00, 0x07, 0xF0, 0x7F,
  0x00, 0xC0, 0x08, 0x01, 0x86, 0x18, 0x41, 0x8C, 0x30, 0xFE, 0x03, 0xC0,
  0x1E, 0x71, 0xF7, 0x86, 0x38, 0x37, 0x01, 0xF0, 0x0F, 0xC0, 0xE6, 0x06,
  0x30, 0xFC, 0xE7, 0xC7, 0x00, 0x3F, 0x0F, 0xC0, 0x80, 0x60, 0x18, 0x06,
  0x11, 0x0C, 0xC3, 0xFF, 0xFF, 0xE0, 0x38, 0x39, 0xE3, 0xC7, 0x3C, 0x79,
  0xE3, 0x5E, 0x13, 0xD0, 0x9D, 0x8C, 0xCC, 0xF9, 0xE7, 0x8F, 0x00, 0x3C,
  0x79, 0xE7, 0xC7, 0x88, 0x3C, 0xC1, 0x66, 0x19, 0xB0, 0xCD, 0x06, 0x38,
  0x79, 0xC7, 0xC6, 0x00, 0x0F, 0x83, 0xF8, 0xC3, 0xB0, 0x34, 0x07, 0x80,
  0xB0, 0x33, 0x0C, 0x7F, 0x07, 0xC0, 0x1F, 0xC7, 0xFC, 0x61, 0x8C, 0x31,
  0x8E, 0x3F, 0x8F, 0xC1, 0x80, 0xFE, 0x1F, 0x80, 0x0F, 0x83, 0xF8, 0xC3,
  0xB0, 0x34, 0x07, 0x80, 0xB0, 0x33, 0x0C, 0x7F, 0x03, 0x80, 0xF2, 0x3F,
  0xC6, 0x70, 0x1F, 0xC7, 0xFC, 0x61, 0x8C, 0x31, 0xFC, 0x3F, 0x0C, 0x61,
  0x86, 0x7C, 0xEF, 0x0C, 0x0F, 0xC7, 0xF3, 0x0C, 0xC0, 0x3F, 0x03, 0xE4,
  0x09, 0x86, 0xFF, 0xB7, 0x80, 0x7F, 0xDF, 0xFC, 0xCF, 0x32, 0x0C, 0x06,
  0x01, 0x80, 0x60, 0xFE, 0x3F, 0x00, 0x7B, 0xFF, 0x7D, 0x86, 0x30, 0xC4,
  0x19, 0x82, 0x30, 0xC6, 0x38, 0xFE, 0x0F, 0x00, 0xF1, 0xFE, 0x3D, 0x82,
  0x30, 0xC6, 0x30, 0x4C, 0x0D, 0x81, 0xE0, 0x38, 0x07, 0x00, 0x79, 0xFF,
  0x7F, 0x03, 0x66, 0x4D, 0xD9, 0xBB, 0x3D, 0xC7, 0x38, 0xE7, 0x18, 0xC0,
  0x1C, 0x71, 0xE7, 0x83, 0x38, 0x1F, 0x00, 0x70, 0x03, 0x80, 0x76, 0x07,
  0x38, 0xFB, 0xE7, 0x9E, 0x00, 0x71, 0xCE, 0x78, 0xCE, 0x1B, 0x81, 0xE0,
  0x38, 0x06, 0x00, 0xC0, 0xFE, 0x1F, 0x80, 0x1F, 0xC7, 0xF3, 0x18, 0xCC,
  0x06, 0x03, 0x23, 0x99, 0xC6, 0x7F, 0xBF, 0xE0, 0x1E, 0x3C, 0xC1, 0x83,
  0x04, 0x18, 0x30, 0x60, 0x83, 0x07, 0x8F, 0x00, 0xC6, 0x30, 0xC6, 0x31,
  0x86, 0x31, 0x8C, 0x31, 0x8C, 0x60, 0x1E, 0x38, 0x30, 0x60, 0xC1, 0x06,
  0x0C, 0x18, 0x30, 0xC7, 0x8F, 0x00, 0x08, 0x1C, 0x3C, 0x76, 0xC7, 0x83,
  0x7F, 0xFF, 0xFF, 0x80, 0x88, 0x80, 0x1F, 0x0F, 0xE0, 0x18, 0x7E, 0x7F,
  0xB0, 0x4F, 0xF9, 0xEE, 0x18, 0x07, 0x00, 0x60, 0x0D, 0xE1, 0xFE, 0x30,
  0xCC, 0x19, 0x83, 0x30, 0xFF, 0xFB, 0xBC, 0x00, 0x1E, 0xBF, 0xD8, 0x78,
  0x0C, 0x06, 0x0F, 0xFC, 0xFC, 0x00, 0xE0, 0x1C, 0x01, 0x0F, 0x23, 0xFC,
  0xE3, 0x90, 0x26, 0x0C, 0xE3, 0x8F, 0xF8, 0xF7, 0x00, 0x0F, 0x0F, 0xE6,
  0x0D, 0xFF, 0xFF, 0xF8, 0x07, 0xF8, 0xFC, 0x03, 0xE0, 0xFC, 0x30, 0x0F,
  0xE3, 0xFC, 0x18, 0x02, 0x00, 0xC0, 0x18, 0x0F, 0xE1, 0xFC, 0x00, 0x1E,
  0xE7, 0xFD, 0x86, 0x20, 0xCC, 0x19, 0xC7, 0x1F, 0xC1, 0xD8, 0x03, 0x0F,
  0xC1, 0xF0, 0x00, 0x38, 0x0E, 0x01, 0x80, 0xDE, 0x3F, 0x8E, 0x63, 0x19,
  0x86, 0x61, 0xBD, 0xFF, 0x78, 0x06, 0x03, 0x00, 0x03, 0xC3, 0xE0, 0x20,
  0x30, 0x18, 0x0C, 0x7F, 0xFF, 0xC0, 0x03, 0x81, 0x80, 0x03, 0xF3, 0xF8,
  0x08, 0x0C, 0x06, 0x03, 0x01, 0x80, 0x80, 0xCF, 0xC7, 0xC0, 0x38, 0x0E,
  0x01, 0x80, 0x6F, 0x13, 0xCF, 0x83, 0xC0, 0xF0, 0x26, 0x39, 0xEE, 0x78,
  0x0F, 0x0F, 0x01, 0x80, 0xC0, 0x60, 0x20, 0x30, 0x18, 0x0C, 0x7F, 0xFF,
  0xC0, 0x36, 0xEF, 0xFC, 0xCC, 0x99, 0x32, 0x66, 0xCC, 0xFD, 0xDF, 0x37,
  0x37, 0x9F, 0xE3, 0x88, 0xC6, 0x21, 0x98, 0x6F, 0x3B, 0xCE, 0x1E, 0x3F,
  0xB8, 0xF8, 0x38, 0x1E, 0x1B, 0xF8, 0xF8, 0x1D, 0xE3, 0xFF, 0x0C, 0x31,
  0x83, 0x18, 0x31, 0xC7, 0x17, 0xE3, 0x38, 0x30, 0x0F, 0xC0, 0xF8, 0x00,
  0x0E, 0xF3, 0xFF, 0x71, 0xC6, 0x0C, 0xC1, 0x8E, 0x38, 0x7F, 0x83, 0xD8,
  0x03, 0x00, 0xF8, 0x0F, 0x80, 0x3D, 0xC7, 0xFC, 0x79, 0x0E, 0x01, 0x80,
  0x30, 0x3F, 0xC7, 0xF0, 0x1E, 0xBF, 0xD8, 0xCF, 0xC3, 0xF6, 0x1B, 0xFD,
  0x78, 0x30, 0x30, 0x30, 0xFF, 0xFF, 0x60, 0x60, 0x60, 0xC3, 0xFF, 0x7C,
  0xE3, 0xF3, 0xD8, 0x4C, 0x64, 0x36, 0x1B, 0xFC, 0xEE, 0x79, 0xEF, 0x3C,
  0xC6, 0x18, 0xC3, 0x30, 0x3C, 0x07, 0x00, 0xE0, 0x78, 0xEE, 0x3D, 0x9B,
  0x37, 0x46, 0xF8, 0xFF, 0x1D, 0xC3, 0x98, 0x39, 0xEF, 0x38, 0x6E, 0x07,
  0x01, 0xE0, 0xEE, 0x3C, 0xF7, 0xBC, 0x3C, 0xF3, 0xCF, 0x18, 0xC1, 0x8C,
  0x19, 0x80, 0xF0, 0x0E, 0x00, 0xC0, 0x08, 0x0F, 0xC0, 0xFC, 0x00, 0x7F,
  0xBF, 0xD9, 0x81, 0x83, 0x83, 0x1B, 0xFD, 0xFC, 0x0C, 0x73, 0x0C, 0x30,
  0x8E, 0x18, 0x61, 0x0C, 0x38, 0x60, 0xFF, 0xFC, 0x38, 0xE1, 0x86, 0x18,
  0x61, 0xCC, 0x30, 0xC2, 0x38, 0xC0, 0x38, 0x3C, 0xF3, 0xC1, 0xC0 };

const GFXglyph courbi9pt7bGlyphs[] PROGMEM = {
  {     0,   0,   0,  11,    0,    1 },   // 0x20 ' '
  {     0,   5,  12,  11,    4,  -11 },   // 0x21 '!'
  {     8,   7,   5,  11,    4,   -9 },   // 0x22 '"'
  {    13,   9,  14,  11,    2,  -11 },   // 0x23 '#'
  {    29,   9,  15,  11,    2,  -11 },   // 0x24 '$'
  {    46,   9,  11,  11,    2,  -10 },   // 0x25 '%'
  {    59,   9,  10,  11,    2,   -9 },   // 0x26 '&'
  {    71,   3,   5,  11,    6,   -9 },   // 0x27 '''
  {    73,   6,  13,  11,    5,  -10 },   // 0x28 '('
  {    83,   5,  13,  11,    2,  -10 },   // 0x29 ')'
  {    92,   8,   7,  11,    3,  -10 },   // 0x2A '*'
  {    99,   9,  10,  11,    2,   -9 },   // 0x2B '+'
  {   111,   5,   5,  11,    3,   -1 },   // 0x2C ','
  {   115,   7,   2,  11,    3,   -5 },   // 0x2D '-'
  {   117,   3,   2,  11,    4,   -1 },   // 0x2E '.'
  {   118,  11,  15,  11,    1,  -12 },   // 0x2F '/'
  {   139,   9,  11,  11,    2,  -10 },   // 0x30 '0'
  {   152,   8,  11,  11,    2,  -10 },   // 0x31 '1'
  {   163,  10,  11,  11,    1,  -10 },   // 0x32 '2'
  {   177,  10,  11,  11,    1,  -10 },   // 0x33 '3'
  {   191,   8,  11,  11,    2,  -10 },   // 0x34 '4'
  {   202,  10,  11,  11,    1,  -10 },   // 0x35 '5'
  {   216,   9,  11,  11,    3,  -10 },   // 0x36 '6'
  {   229,   9,  11,  11,    3,  -10 },   // 0x37 '7'
  {   242,   9,  11,  11,    2,  -10 },   // 0x38 '8'
  {   255,   9,  11,  11,    2,  -10 },   // 0x39 '9'
  {   268,   4,   8,  11,    4,   -7 },   // 0x3A ':'
  {   272,   6,  10,  11,    2,   -7 },   // 0x3B ';'
  {   280,  11,  10,  11,    1,   -9 },   // 0x3C '<'
  {   294,  11,   6,  11,    1,   -7 },   // 0x3D '='
  {   303,  11,  10,  11,    1,   -9 },   // 0x3E '>'
  {   317,   7,  11,  11,    4,  -10 },   // 0x3F '?'
  {   327,   8,  12,  11,    2,  -10 },   // 0x40 '@'
  {   339,  11,  10,  11,    0,   -9 },   // 0x41 'A'
  {   353,  11,  10,  11,    0,   -9 },   // 0x42 'B'
  {   367,  11,  10,  11,    1,   -9 },   // 0x43 'C'
  {   381,  11,  10,  11,    1,   -9 },   // 0x44 'D'
  {   395,  12,  10,  11,    0,   -9 },   // 0x45 'E'
  {   410,  12,  10,  11,    1,   -9 },   // 0x46 'F'
  {   425,  11,  10,  11,    1,   -9 },   // 0x47 'G'
  {   439,  11,  10,  11,    1,   -9 },   // 0x48 'H'
  {   453,   9,  10,  11,    2,   -9 },   // 0x49 'I'
  {   465,  12,  10,  11,    1,   -9 },   // 0x4A 'J'
  {   480,  13,  10,  11,    0,   -9 },   // 0x4B 'K'
  {   497,  10,  10,  11,    1,   -9 },   // 0x4C 'L'
  {   510,  13,  10,  11,    0,   -9 },   // 0x4D 'M'
  {   527,  13,  10,  11,    0,   -9 },   // 0x4E 'N'
  {   544,  11,  10,  11,    1,   -9 },   // 0x4F 'O'
  {   558,  11,  10,  11,    0,   -9 },   // 0x50 'P'
  {   572,  11,  13,  11,    1,   -9 },   // 0x51 'Q'
  {   590,  11,  10,  11,    0,   -9 },   // 0x52 'R'
  {   604,  10,  10,  11,    1,   -9 },   // 0x53 'S'
  {   617,  10,  10,  11,    2,   -9 },   // 0x54 'T'
  {   630,  11,  10,  11,    2,   -9 },   // 0x55 'U'
  {   644,  11,  10,  11,    2,   -9 },   // 0x56 'V'
  {   658,  11,  10,  11,    2,   -9 },   // 0x57 'W'
  {   672,  13,  10,  11,    0,   -9 },   // 0x58 'X'
  {   689,  11,  10,  11,    2,   -9 },   // 0x59 'Y'
  {   703,  10,  10,  11,    1,   -9 },   // 0x5A 'Z'
  {   716,   7,  13,  11,    4,  -10 },   // 0x5B '['
  {   728,   5,  15,  11,    4,  -12 },   // 0x5C '\'
  {   738,   7,  13,  11,    2,  -10 },   // 0x5D ']'
  {   750,   8,   6,  11,    3,  -11 },   // 0x5E '^'
  {   756,  13,   2,  11,   -2,    4 },   // 0x5F '_'
  {   760,   3,   3,  11,    5,  -11 },   // 0x60 '`'
  {   762,  10,   8,  11,    1,   -7 },   // 0x61 'a'
  {   772,  11,  11,  11,    0,  -10 },   // 0x62 'b'
  {   788,   9,   8,  11,    2,   -7 },   // 0x63 'c'
  {   797,  11,  11,  11,    1,  -10 },   // 0x64 'd'
  {   813,  10,   8,  11,    1,   -7 },   // 0x65 'e'
  {   823,  11,  11,  11,    1,  -10 },   // 0x66 'f'
  {   839,  11,  11,  11,    1,   -7 },   // 0x67 'g'
  {   855,  10,  11,  11,    1,  -10 },   // 0x68 'h'
  {   869,   9,  11,  11,    1,  -10 },   // 0x69 'i'
  {   882,   9,  14,  11,    1,  -10 },   // 0x6A 'j'
  {   898,  10,  11,  11,    1,  -10 },   // 0x6B 'k'
  {   912,   9,  11,  11,    1,  -10 },   // 0x6C 'l'
  {   925,  11,   8,  11,    0,   -7 },   // 0x6D 'm'
  {   936,  10,   8,  11,    1,   -7 },   // 0x6E 'n'
  {   946,   9,   8,  11,    2,   -7 },   // 0x6F 'o'
  {   955,  12,  11,  11,   -1,   -7 },   // 0x70 'p'
  {   972,  12,  11,  11,    1,   -7 },   // 0x71 'q'
  {   989,  11,   8,  11,    1,   -7 },   // 0x72 'r'
  {  1000,   9,   8,  11,    2,   -7 },   // 0x73 's'
  {  1009,   8,  11,  11,    3,  -10 },   // 0x74 't'
  {  1020,   9,   8,  11,    2,   -7 },   // 0x75 'u'
  {  1029,  11,   8,  11,    1,   -7 },   // 0x76 'v'
  {  1040,  11,   8,  11,    1,   -7 },   // 0x77 'w'
  {  1051,  11,   8,  11,    1,   -7 },   // 0x78 'x'
  {  1062,  12,  11,  11,    0,   -7 },   // 0x79 'y'
  {  1079,   9,   8,  11,    2,   -7 },   // 0x7A 'z'
  {  1088,   6,  13,  11,    4,  -10 },   // 0x7B '{'
  {  1098,   1,  14,  11,    5,  -10 },   // 0x7C '|'
  {  1100,   6,  13,  11,    3,  -10 },   // 0x7D '}'
  {  1110,   9,   4,  11,    2,   -6 } }; // 0x7E '~'

const GFXfont courbi9pt7b PROGMEM = {
  (uint8_t  *)courbi9pt7bBitmaps,
  (GFXglyph *)courbi9pt7bGlyphs,
  0x20, 0x7E, 20 };

// Approx. 1787 bytes
