#pragma once
#include <Adafruit_GFX.h>

const uint8_t covertopsital11pt7bBitmaps[] PROGMEM = {
  0x1C, 0x71, 0xCF, 0x38, 0xE3, 0x9E, 0x71, 0xC0, 0x38, 0xE3, 0x80, 0x77,
  0x7E, 0xEE, 0xEE, 0xEE, 0x07, 0x1E, 0x07, 0x1C, 0x0F, 0x1C, 0x3F, 0xFF,
  0x3F, 0xBE, 0x3F, 0xBE, 0x0E, 0x38, 0x1E, 0x78, 0x7F, 0x7E, 0x7F, 0x7C,
  0x7F, 0x7C, 0x3C, 0xF0, 0x3C, 0xF0, 0x38, 0xE0, 0x03, 0x80, 0x38, 0x00,
  0x01, 0xEE, 0x1F, 0xE1, 0xDE, 0x3C, 0xE3, 0xC0, 0x3E, 0x03, 0xF8, 0x1F,
  0xC0, 0x7C, 0x03, 0xC7, 0x78, 0xFF, 0x8F, 0x78, 0xF7, 0x00, 0x00, 0x38,
  0x03, 0x80, 0x3B, 0xC0, 0x03, 0xDE, 0x3C, 0x1E, 0xF1, 0xC0, 0xE7, 0x9E,
  0x0F, 0x39, 0xE0, 0x7B, 0xDE, 0x03, 0xDE, 0xE0, 0x1F, 0xEF, 0x00, 0x00,
  0xF7, 0x78, 0x07, 0x7B, 0xC0, 0x73, 0xDE, 0x07, 0xBC, 0xF0, 0x79, 0xC7,
  0x03, 0x8F, 0x78, 0x3C, 0x7B, 0xC0, 0x03, 0xFC, 0x0D, 0xC0, 0xEE, 0x07,
  0x70, 0x78, 0x03, 0x80, 0x1C, 0x00, 0xEF, 0xC7, 0x7E, 0x77, 0xF3, 0x8E,
  0x1C, 0x71, 0xFF, 0x8E, 0xFC, 0x77, 0xC0, 0x77, 0xEE, 0xE0, 0x1F, 0x1F,
  0x1E, 0x3C, 0x38, 0x38, 0x38, 0x78, 0x70, 0x70, 0x70, 0xF8, 0xF8, 0x78,
  0x1E, 0x1F, 0x1E, 0x0E, 0x1E, 0x1E, 0x1C, 0x1C, 0x1C, 0x3C, 0x38, 0xF8,
  0xF8, 0xF0, 0x34, 0xFD, 0xB3, 0x6E, 0xEF, 0x00, 0x00, 0x1C, 0x39, 0xFF,
  0xFF, 0xE7, 0x1C, 0x00, 0x77, 0x76, 0xE0, 0x7F, 0xFF, 0x80, 0xFF, 0x80,
  0x00, 0x38, 0x01, 0xC0, 0x0F, 0x00, 0x78, 0x01, 0xC0, 0x0F, 0x00, 0x78,
  0x03, 0xC0, 0x0E, 0x00, 0x78, 0x03, 0xC0, 0x0E, 0x00, 0x78, 0x03, 0xC0,
  0x00, 0x0E, 0xF1, 0xEF, 0x1E, 0xF3, 0xCF, 0x38, 0xE3, 0x8E, 0x3F, 0xE7,
  0x9E, 0x71, 0xC7, 0x1C, 0x73, 0xCF, 0xFC, 0xF7, 0x8F, 0x70, 0x6E, 0x6E,
  0x6E, 0x1E, 0x1C, 0x1C, 0x1C, 0x3C, 0x38, 0x38, 0x38, 0x78, 0x70, 0x70,
  0x1E, 0xE1, 0xEE, 0x1D, 0xE3, 0x9E, 0x01, 0xE0, 0x7C, 0x3F, 0xC7, 0xF0,
  0x7C, 0x07, 0x80, 0x70, 0x0F, 0x78, 0xF7, 0x8F, 0xF8, 0x1F, 0xC3, 0xBC,
  0x77, 0x00, 0xE0, 0x1C, 0x07, 0x83, 0xE0, 0x7C, 0x0F, 0x80, 0xF0, 0x1C,
  0x7B, 0x8F, 0x71, 0xDC, 0x00, 0x38, 0xF3, 0x8E, 0x38, 0xE7, 0x9E, 0x79,
  0xE7, 0x1C, 0x7D, 0xCF, 0xFC, 0xFB, 0xC0, 0x38, 0x03, 0x80, 0x78, 0x07,
  0x80, 0x70, 0x1F, 0xF1, 0xFE, 0x1D, 0xE3, 0xC0, 0x3C, 0x03, 0xC0, 0x3F,
  0x87, 0xFC, 0x0F, 0xC0, 0x3C, 0x73, 0x8F, 0x78, 0xF7, 0x8F, 0x70, 0x1E,
  0xF1, 0xEF, 0x1E, 0xF3, 0xC0, 0x38, 0x03, 0xFE, 0x3F, 0xE7, 0xFC, 0x71,
  0xC7, 0x1C, 0x73, 0xCF, 0xFC, 0xF7, 0x87, 0x70, 0x1E, 0xE1, 0xFE, 0x1D,
  0xC0, 0x3C, 0x07, 0x80, 0x70, 0x0F, 0x00, 0xE0, 0x1E, 0x03, 0xC0, 0x38,
  0x07, 0x80, 0x70, 0x0F, 0x00, 0x0D, 0xF1, 0xDF, 0x1D, 0xF3, 0xCF, 0x38,
  0xF3, 0x8E, 0x3B, 0xE3, 0xBC, 0x77, 0xE7, 0x1C, 0x71, 0xCF, 0xFC, 0xEF,
  0xCE, 0xF8, 0x0E, 0xF1, 0xEF, 0x1E, 0xF3, 0xCE, 0x38, 0xE3, 0x8E, 0x3F,
  0xE7, 0xFE, 0x7F, 0xC0, 0x1C, 0x03, 0xCF, 0xFC, 0xF7, 0x8F, 0x78, 0x3B,
  0x9C, 0x00, 0x73, 0x9C, 0x1C, 0xE3, 0x80, 0x00, 0x07, 0x1C, 0x71, 0x8E,
  0x00, 0x07, 0x07, 0x07, 0x83, 0x85, 0x87, 0x83, 0x81, 0xC0, 0xF0, 0x78,
  0x1C, 0x0E, 0x07, 0x83, 0xC0, 0x3F, 0x9F, 0x9F, 0xC0, 0x07, 0xF3, 0xF9,
  0xF8, 0x1E, 0x07, 0x03, 0x81, 0xE0, 0xF0, 0x38, 0x1E, 0x0F, 0x0B, 0x0D,
  0x07, 0x07, 0x07, 0x07, 0x80, 0x1E, 0xE1, 0xEE, 0x1F, 0xE3, 0xDE, 0x01,
  0xE0, 0x7C, 0x1F, 0xC3, 0xF0, 0x3C, 0x03, 0x80, 0x00, 0x07, 0x00, 0x70,
  0x07, 0x00, 0x1F, 0xDF, 0xC7, 0xF7, 0xF1, 0xFD, 0xFC, 0xF0, 0x0F, 0x39,
  0xBB, 0x8E, 0xEE, 0xE3, 0xB3, 0xB9, 0xEC, 0xFE, 0x77, 0xFF, 0x1D, 0xDF,
  0x87, 0x00, 0x03, 0xFF, 0x80, 0xFF, 0xE0, 0x1F, 0xF8, 0x00, 0x0D, 0xF1,
  0xDF, 0x3D, 0xF3, 0xCF, 0x38, 0xF3, 0x8E, 0x7B, 0xE7, 0xFE, 0x77, 0xE7,
  0x1C, 0xF1, 0xCF, 0x3C, 0xE3, 0xCE, 0x38, 0x1D, 0xF1, 0xDF, 0x1D, 0xF3,
  0xCF, 0x38, 0xF3, 0x8E, 0x3B, 0xE7, 0xBC, 0x77, 0xE7, 0x1C, 0x71, 0xCF,
  0xFC, 0xEF, 0xCE, 0xF8, 0x1E, 0xF1, 0xEF, 0x1E, 0xF3, 0xC0, 0x38, 0x03,
  0x80, 0x38, 0x07, 0x80, 0x70, 0x07, 0x00, 0x70, 0x0F, 0xFC, 0xF7, 0x87,
  0x78, 0x1E, 0xF1, 0xEF, 0x1E, 0xF3, 0xCE, 0x38, 0xE3, 0x8E, 0x39, 0xE7,
  0x9E, 0x71, 0xC7, 0x1C, 0x73, 0xCF, 0xFC, 0xF7, 0x8F, 0x70, 0x1D, 0xE3,
  0xBC, 0x77, 0x1E, 0x03, 0x80, 0x77, 0x0E, 0xE3, 0xFC, 0x70, 0x0E, 0x01,
  0xC0, 0x7B, 0x8E, 0xF1, 0xDE, 0x00, 0x1D, 0xE3, 0xBC, 0x77, 0x1E, 0x03,
  0x80, 0x77, 0x0E, 0xE3, 0xFC, 0x70, 0x0E, 0x01, 0xC0, 0x78, 0x0E, 0x01,
  0xC0, 0x00, 0x1E, 0xF1, 0xEF, 0x1E, 0xF3, 0xC0, 0x38, 0x03, 0x80, 0x39,
  0xE7, 0xBC, 0x73, 0xC7, 0x1C, 0x73, 0xCF, 0xFC, 0xF7, 0x87, 0x78, 0x1C,
  0x78, 0xE3, 0x87, 0x1C, 0x79, 0xE3, 0xCF, 0x1C, 0x70, 0xFB, 0x8F, 0xFC,
  0x7D, 0xE3, 0x8E, 0x1C, 0x71, 0xE7, 0x8F, 0x3C, 0x71, 0xC0, 0x1B, 0xB8,
  0xDD, 0x86, 0xEC, 0x0F, 0x00, 0x70, 0x03, 0x80, 0x1C, 0x01, 0xE0, 0x0E,
  0x00, 0x70, 0x03, 0x81, 0xFD, 0x8D, 0xDC, 0x6E, 0xC0, 0x00, 0xF0, 0x0F,
  0x00, 0xF0, 0x0E, 0x00, 0xE0, 0x0E, 0x01, 0xE0, 0x1E, 0x01, 0xC0, 0x1C,
  0x03, 0xCF, 0xFC, 0xF7, 0x8F, 0x70, 0x1C, 0x3C, 0x71, 0xE1, 0xCF, 0x0F,
  0x38, 0x39, 0xC0, 0xEF, 0x03, 0xB8, 0x1E, 0xC0, 0x77, 0x81, 0xDE, 0x07,
  0x38, 0x3C, 0xF0, 0xE1, 0xC3, 0x87, 0x80, 0x1C, 0x0E, 0x07, 0x07, 0x83,
  0x81, 0xC0, 0xE0, 0xF0, 0x70, 0x38, 0x1C, 0x1F, 0xEE, 0xF7, 0x78, 0x0E,
  0x07, 0x8B, 0x81, 0xE2, 0xF0, 0xF8, 0xFC, 0x3A, 0x3F, 0x1D, 0x8F, 0xCF,
  0xC3, 0x73, 0xB1, 0xDD, 0xFC, 0x77, 0x77, 0x1D, 0xDB, 0x87, 0x7E, 0xE3,
  0xDF, 0x38, 0xE7, 0x9E, 0x39, 0xE7, 0x00, 0x0E, 0x3C, 0xBC, 0xE1, 0xF3,
  0x8D, 0xDE, 0x37, 0x78, 0xDF, 0xC3, 0xFB, 0x1F, 0xEC, 0x73, 0xB1, 0xCF,
  0x87, 0x3E, 0x3C, 0xF0, 0xE1, 0xC3, 0x87, 0x80, 0x1E, 0xF1, 0xEF, 0x1E,
  0xF3, 0xCE, 0x38, 0xE3, 0x8E, 0x39, 0xE7, 0x9E, 0x71, 0xC7, 0x1C, 0x73,
  0xCF, 0xFC, 0xF7, 0x87, 0x70, 0x1D, 0xF1, 0xDF, 0x1D, 0xF3, 0xCF, 0x38,
  0xF3, 0x8E, 0x3B, 0xE7, 0xFE, 0x77, 0xC7, 0x00, 0x70, 0x0F, 0x00, 0xE0,
  0x0E, 0x00, 0x1E, 0xF1, 0xEF, 0x1E, 0xF3, 0xCE, 0x38, 0xE3, 0x8E, 0x39,
  0xE7, 0x9C, 0x71, 0xC7, 0x1C, 0x73, 0xCF, 0xFC, 0xF7, 0x87, 0x70, 0x07,
  0x00, 0xF0, 0x1D, 0xF1, 0xDF, 0x1D, 0xF3, 0xCF, 0x38, 0xF3, 0x8E, 0x3B,
  0xE7, 0xFE, 0x77, 0xC7, 0x70, 0x77, 0x0F, 0x70, 0xE7, 0x8E, 0x78, 0x1E,
  0xE1, 0xFE, 0x1D, 0xE3, 0xCE, 0x3C, 0x03, 0xE0, 0x3F, 0x81, 0xFC, 0x07,
  0xC0, 0x3C, 0x77, 0x8F, 0xF8, 0xF7, 0x8F, 0x70, 0x7E, 0xEF, 0xD9, 0xFB,
  0x0F, 0x01, 0xC0, 0x38, 0x07, 0x01, 0xE0, 0x38, 0x07, 0x00, 0xE0, 0x3C,
  0x07, 0x00, 0xE0, 0x00, 0x1C, 0x38, 0xE3, 0xC7, 0x1E, 0x78, 0xE3, 0xC7,
  0x1C, 0x78, 0xE3, 0xCF, 0x1C, 0x78, 0xE3, 0x8F, 0x1C, 0x79, 0xF7, 0x8F,
  0xBC, 0x3F, 0xC0, 0xF1, 0xFE, 0x3F, 0xCF, 0x79, 0xEF, 0x79, 0xEF, 0x3F,
  0xC3, 0x78, 0x7E, 0x0B, 0xC1, 0xF0, 0x5E, 0x07, 0x80, 0xF0, 0x00, 0xF1,
  0xF0, 0xEF, 0x1F, 0x1E, 0xF3, 0xF1, 0xCF, 0x37, 0x3C, 0xF7, 0x73, 0x8F,
  0x77, 0x78, 0xFF, 0x77, 0x06, 0xF7, 0xF0, 0x6E, 0x6E, 0x05, 0xE7, 0xE0,
  0x5C, 0x5C, 0x0B, 0xC7, 0xC0, 0x38, 0x38, 0x07, 0x87, 0x80, 0x1E, 0x3C,
  0x38, 0xE0, 0xE7, 0x03, 0xF8, 0x0F, 0x60, 0x1D, 0x00, 0x78, 0x01, 0xE0,
  0x0B, 0x80, 0x2F, 0x01, 0xFC, 0x0E, 0x70, 0x71, 0xC3, 0xC7, 0x80, 0xF1,
  0xEE, 0x39, 0xCF, 0x3F, 0xC3, 0xF0, 0x5C, 0x07, 0x81, 0xE0, 0x3C, 0x07,
  0x00, 0xE0, 0x1C, 0x07, 0x80, 0xF0, 0x00, 0x1E, 0xF1, 0xFE, 0x1F, 0xE0,
  0x3E, 0x07, 0xC0, 0xF8, 0x0F, 0x81, 0xF0, 0x3E, 0x07, 0xC0, 0x7C, 0x0F,
  0xB8, 0xF7, 0x8F, 0xF0, 0x1F, 0x1F, 0x1E, 0x3C, 0x38, 0x38, 0x38, 0x78,
  0x70, 0x70, 0x70, 0xF8, 0xF8, 0xF8, 0xF1, 0xE1, 0xC3, 0xC7, 0x8F, 0x0E,
  0x1E, 0x3C, 0x78, 0x70, 0xE1, 0xE3, 0xC0, 0x1F, 0x1F, 0x1E, 0x0E, 0x1E,
  0x1E, 0x1C, 0x1C, 0x1C, 0x3C, 0x38, 0xF8, 0xF8, 0xF8, 0x03, 0xC0, 0x70,
  0x1F, 0x03, 0xA0, 0xF4, 0x1D, 0x87, 0xB0, 0xEF, 0x3D, 0xE7, 0x3D, 0xE7,
  0xBC, 0xFF, 0x1F, 0xE3, 0xC0, 0xFF, 0xFF, 0xFF, 0xEE, 0x70, 0x01, 0xE0,
  0x7C, 0x0F, 0x83, 0xF0, 0x7E, 0x1F, 0xC3, 0xF8, 0xEF, 0x1D, 0xE7, 0xFC,
  0xFF, 0xBF, 0xF7, 0x1F, 0xE3, 0xC0, 0x1D, 0xF1, 0xDF, 0x1D, 0xF3, 0xCF,
  0x38, 0xF3, 0x8E, 0x3B, 0xE7, 0xBC, 0x77, 0xE7, 0x1C, 0x71, 0xCF, 0xFC,
  0xEF, 0xCE, 0xF8, 0x1E, 0xF1, 0xEF, 0x1E, 0xF3, 0xC0, 0x38, 0x03, 0x80,
  0x38, 0x07, 0x80, 0x70, 0x07, 0x00, 0x70, 0x0F, 0xFC, 0xF7, 0x8F, 0x78,
  0x1E, 0xF1, 0xEF, 0x1E, 0xF3, 0xCE, 0x38, 0xE3, 0x8E, 0x39, 0xE7, 0x9C,
  0x71, 0xC7, 0x1C, 0x73, 0xCF, 0xFC, 0xF7, 0x8F, 0x78, 0x1D, 0xE3, 0xBC,
  0x77, 0x1E, 0x03, 0x80, 0x77, 0x0E, 0xE3, 0xFC, 0x70, 0x0E, 0x01, 0xC0,
  0x7B, 0x8E, 0xF1, 0xDE, 0x00, 0x1D, 0xE3, 0xBC, 0x77, 0x1E, 0x03, 0x80,
  0x77, 0x0E, 0xE3, 0xFC, 0x70, 0x0E, 0x01, 0xC0, 0x78, 0x0E, 0x01, 0xC0,
  0x00, 0x1E, 0xF1, 0xEF, 0x1E, 0xF3, 0xC0, 0x38, 0x03, 0x80, 0x39, 0xE7,
  0xBE, 0x73, 0xC7, 0x1C, 0x73, 0xCF, 0xFC, 0xF7, 0x8F, 0x78, 0x1C, 0x78,
  0xE3, 0x87, 0x3C, 0x79, 0xE3, 0x8F, 0x1C, 0x70, 0xEF, 0x8F, 0xFC, 0x77,
  0xE3, 0x8E, 0x1C, 0x71, 0xE7, 0x8E, 0x3C, 0x71, 0xC0, 0x1C, 0x71, 0xCF,
  0x38, 0xE3, 0x9E, 0x71, 0xC7, 0x3C, 0xE3, 0x80, 0x00, 0x70, 0x07, 0x00,
  0xF0, 0x0E, 0x00, 0xE0, 0x0E, 0x01, 0xE0, 0x1E, 0x01, 0xC0, 0x1C, 0x03,
  0xCF, 0xFC, 0xF7, 0x8F, 0x70, 0x1C, 0x71, 0xC7, 0x1C, 0xF3, 0xCE, 0x38,
  0xE3, 0x9E, 0x3B, 0xC7, 0xBC, 0x77, 0xC7, 0x1C, 0x71, 0xCF, 0x3C, 0xE3,
  0x8E, 0x38, 0x1C, 0x0E, 0x07, 0x07, 0x83, 0x81, 0xC0, 0xE0, 0xF0, 0x70,
  0x38, 0x1C, 0x1F, 0xEE, 0xF7, 0x78, 0x0E, 0x07, 0x8B, 0x81, 0xE2, 0xF0,
  0xF8, 0xFC, 0x3A, 0x3F, 0x1D, 0x8F, 0xCF, 0xC3, 0x73, 0xB1, 0xDD, 0xFC,
  0x77, 0x77, 0x1D, 0xDB, 0x87, 0x7E, 0xE3, 0xDF, 0x38, 0xE7, 0x9E, 0x39,
  0xE7, 0x00, 0x0E, 0x3C, 0xBC, 0xE1, 0xF3, 0x8D, 0xDE, 0x37, 0x78, 0xDF,
  0xC3, 0xFB, 0x1F, 0xEC, 0x73, 0xB1, 0xCF, 0x87, 0x3E, 0x3C, 0xF0, 0xE1,
  0xC3, 0x87, 0x80, 0x0E, 0xF1, 0xEF, 0x1E, 0xF3, 0xCE, 0x38, 0xE3, 0x8E,
  0x39, 0xE7, 0x9E, 0x71, 0xC7, 0x1C, 0x73, 0xCF, 0xFC, 0xF7, 0x8F, 0x70,
  0x1D, 0xF1, 0xDF, 0x1D, 0xF3, 0xCF, 0x38, 0xF3, 0x8E, 0x3B, 0xE7, 0xFE,
  0x77, 0xC7, 0x00, 0x70, 0x0F, 0x00, 0xE0, 0x0E, 0x00, 0x1E, 0xF1, 0xEF,
  0x1E, 0xF3, 0xCE, 0x38, 0xE3, 0x8E, 0x39, 0xE7, 0x9E, 0x71, 0xC7, 0x1C,
  0x73, 0xCF, 0xFC, 0xF7, 0x8F, 0x78, 0x07, 0x00, 0xF0, 0x1D, 0xF1, 0xDF,
  0x1D, 0xF3, 0xCF, 0x38, 0xF3, 0x8E, 0x3B, 0xE7, 0xFC, 0x77, 0xE7, 0x1C,
  0x71, 0xCF, 0x3C, 0xE3, 0xCE, 0x38, 0x1F, 0xE1, 0xDE, 0x1D, 0xE3, 0xCE,
  0x3C, 0x03, 0xE0, 0x3F, 0x81, 0xFC, 0x07, 0xC0, 0x3C, 0x73, 0x8F, 0xF8,
  0xF7, 0x8F, 0x70, 0x6E, 0xED, 0xD9, 0xBB, 0x0F, 0x01, 0xC0, 0x38, 0x07,
  0x01, 0xE0, 0x38, 0x07, 0x00, 0xE0, 0x3C, 0x07, 0x00, 0xE0, 0x00, 0x1C,
  0x38, 0xE3, 0xC7, 0x1E, 0x78, 0xE3, 0xC7, 0x1C, 0x78, 0xE3, 0xCF, 0x1C,
  0x78, 0xE3, 0x8F, 0x1C, 0x79, 0xF7, 0x8F, 0xFC, 0x3B, 0xC0, 0xF1, 0xFE,
  0x3B, 0xCF, 0x79, 0xCF, 0x79, 0xEE, 0x3D, 0xC7, 0xB0, 0xF6, 0x1E, 0x83,
  0xD0, 0x7C, 0x0F, 0x01, 0xE0, 0x00, 0xF1, 0xE0, 0xEF, 0x1F, 0x1E, 0xF3,
  0xD1, 0xCF, 0x3B, 0x3C, 0xF7, 0xF3, 0x8F, 0x77, 0x78, 0xFF, 0xF7, 0x0F,
  0xEF, 0x60, 0xFE, 0xF6, 0x0F, 0xCF, 0x40, 0xFC, 0xF4, 0x0F, 0x8F, 0x80,
  0xF8, 0xF0, 0x0F, 0x0F, 0x00, 0x1C, 0xF1, 0xCE, 0x1C, 0xE3, 0x8E, 0x39,
  0xE3, 0x9C, 0x3D, 0xC3, 0xD8, 0x7F, 0xC7, 0x38, 0x73, 0x8F, 0x38, 0xE3,
  0x8E, 0x78, 0xF1, 0xFE, 0x79, 0xCE, 0x3B, 0x87, 0xB0, 0xF4, 0x1E, 0x01,
  0xC0, 0x38, 0x0F, 0x01, 0xE0, 0x38, 0x07, 0x01, 0xE0, 0x00, 0x1E, 0xE1,
  0xFE, 0x1D, 0xC0, 0x3C, 0x07, 0x80, 0x70, 0x0F, 0x00, 0xE0, 0x1E, 0x03,
  0xC0, 0x38, 0x07, 0xF8, 0x77, 0x8F, 0xF0, 0x03, 0xC1, 0xF0, 0x78, 0x3C,
  0x0E, 0x1B, 0x8E, 0xE3, 0x78, 0x1C, 0x07, 0x01, 0xC0, 0xF8, 0x3E, 0x07,
  0x80, 0x07, 0x0F, 0x0E, 0x0E, 0x0E, 0x1E, 0x1E, 0x1C, 0x1C, 0x3C, 0x3C,
  0x38, 0x38, 0x78, 0x78, 0x70, 0x70, 0xF0, 0xF0, 0x1E, 0x07, 0xC3, 0xE0,
  0x38, 0x1E, 0x07, 0xF1, 0xD8, 0x76, 0x3C, 0x0F, 0x03, 0x83, 0xE0, 0xF8,
  0x3C, 0x00, 0x37, 0xCF, 0xBB, 0xB6, 0x00 };

const GFXglyph covertopsital11pt7bGlyphs[] PROGMEM = {
  {     0,   0,   0,   5,    0,    1 },   // 0x20 ' '
  {     0,   6,  14,   5,    1,  -13 },   // 0x21 '!'
  {    11,   8,   5,   8,    3,  -13 },   // 0x22 '"'
  {    16,  16,  14,  15,    1,  -13 },   // 0x23 '#'
  {    44,  12,  20,  10,    1,  -16 },   // 0x24 '$'
  {    74,  21,  16,  24,    3,  -14 },   // 0x25 '%'
  {   116,  13,  14,  13,    1,  -13 },   // 0x26 '&'
  {   139,   4,   5,   5,    3,  -13 },   // 0x27 '''
  {   142,   8,  14,   6,    1,  -13 },   // 0x28 '('
  {   156,   8,  14,   6,    1,  -13 },   // 0x29 ')'
  {   170,   7,   7,   9,    4,  -16 },   // 0x2A '*'
  {   177,   7,   7,   8,    2,   -9 },   // 0x2B '+'
  {   184,   4,   5,   5,    0,   -2 },   // 0x2C ','
  {   187,   6,   3,   7,    2,   -7 },   // 0x2D '-'
  {   190,   3,   3,   5,    1,   -2 },   // 0x2E '.'
  {   192,  14,  14,  12,    1,  -13 },   // 0x2F '/'
  {   217,  12,  14,  11,    1,  -13 },   // 0x30 '0'
  {   238,   8,  14,   8,    3,  -13 },   // 0x31 '1'
  {   252,  12,  14,  10,    1,  -13 },   // 0x32 '2'
  {   273,  11,  14,  10,    1,  -13 },   // 0x33 '3'
  {   293,  12,  14,  11,    2,  -13 },   // 0x34 '4'
  {   314,  12,  14,  10,    1,  -13 },   // 0x35 '5'
  {   335,  12,  14,  11,    1,  -13 },   // 0x36 '6'
  {   356,  12,  14,  10,    1,  -13 },   // 0x37 '7'
  {   377,  12,  14,  11,    1,  -13 },   // 0x38 '8'
  {   398,  12,  14,  11,    1,  -13 },   // 0x39 '9'
  {   419,   5,   8,   5,    1,   -7 },   // 0x3A ':'
  {   424,   6,  11,   5,    0,   -8 },   // 0x3B ';'
  {   433,   9,  14,   9,    3,  -13 },   // 0x3C '<'
  {   449,   9,   7,   8,    1,   -9 },   // 0x3D '='
  {   457,   9,  14,   9,    1,  -13 },   // 0x3E '>'
  {   473,  12,  14,  10,    1,  -13 },   // 0x3F '?'
  {   494,  18,  14,  17,    1,  -13 },   // 0x40 '@'
  {   526,  12,  14,  11,    1,  -13 },   // 0x41 'A'
  {   547,  12,  14,  11,    1,  -13 },   // 0x42 'B'
  {   568,  12,  14,  11,    1,  -13 },   // 0x43 'C'
  {   589,  12,  14,  11,    1,  -13 },   // 0x44 'D'
  {   610,  11,  14,  10,    1,  -13 },   // 0x45 'E'
  {   630,  11,  14,  10,    1,  -13 },   // 0x46 'F'
  {   650,  12,  14,  11,    1,  -13 },   // 0x47 'G'
  {   671,  13,  14,  11,    1,  -13 },   // 0x48 'H'
  {   694,  13,  14,  11,    1,  -13 },   // 0x49 'I'
  {   717,  12,  14,  11,    1,  -13 },   // 0x4A 'J'
  {   738,  14,  14,  13,    1,  -13 },   // 0x4B 'K'
  {   763,   9,  14,  10,    1,  -13 },   // 0x4C 'L'
  {   779,  18,  14,  16,    1,  -13 },   // 0x4D 'M'
  {   811,  14,  14,  13,    1,  -13 },   // 0x4E 'N'
  {   836,  12,  14,  11,    1,  -13 },   // 0x4F 'O'
  {   857,  12,  14,  11,    1,  -13 },   // 0x50 'P'
  {   878,  12,  16,  11,    1,  -13 },   // 0x51 'Q'
  {   902,  12,  14,  11,    1,  -13 },   // 0x52 'R'
  {   923,  12,  14,  10,    1,  -13 },   // 0x53 'S'
  {   944,  11,  14,  11,    3,  -13 },   // 0x54 'T'
  {   964,  13,  14,  12,    1,  -13 },   // 0x55 'U'
  {   987,  11,  14,  13,    4,  -13 },   // 0x56 'V'
  {  1007,  20,  14,  21,    4,  -13 },   // 0x57 'W'
  {  1042,  14,  14,  13,    1,  -13 },   // 0x58 'X'
  {  1067,  11,  14,  13,    4,  -13 },   // 0x59 'Y'
  {  1087,  12,  14,  10,    1,  -13 },   // 0x5A 'Z'
  {  1108,   8,  14,   6,    1,  -13 },   // 0x5B '['
  {  1122,   7,  14,  12,    4,  -13 },   // 0x5C '\'
  {  1135,   8,  14,   6,    1,  -13 },   // 0x5D ']'
  {  1149,  11,  14,  13,    1,  -13 },   // 0x5E '^'
  {  1169,   8,   3,  10,    1,   -2 },   // 0x5F '_'
  {  1172,   4,   3,   6,    4,  -13 },   // 0x60 '`'
  {  1174,  11,  14,  13,    1,  -13 },   // 0x61 'a'
  {  1194,  12,  14,  11,    1,  -13 },   // 0x62 'b'
  {  1215,  12,  14,  11,    1,  -13 },   // 0x63 'c'
  {  1236,  12,  14,  11,    1,  -13 },   // 0x64 'd'
  {  1257,  11,  14,  10,    1,  -13 },   // 0x65 'e'
  {  1277,  11,  14,  10,    1,  -13 },   // 0x66 'f'
  {  1297,  12,  14,  11,    1,  -13 },   // 0x67 'g'
  {  1318,  13,  14,  11,    1,  -13 },   // 0x68 'h'
  {  1341,   6,  14,   5,    1,  -13 },   // 0x69 'i'
  {  1352,  12,  14,  11,    1,  -13 },   // 0x6A 'j'
  {  1373,  12,  14,  11,    1,  -13 },   // 0x6B 'k'
  {  1394,   9,  14,  10,    1,  -13 },   // 0x6C 'l'
  {  1410,  18,  14,  16,    1,  -13 },   // 0x6D 'm'
  {  1442,  14,  14,  13,    1,  -13 },   // 0x6E 'n'
  {  1467,  12,  14,  11,    1,  -13 },   // 0x6F 'o'
  {  1488,  12,  14,  11,    1,  -13 },   // 0x70 'p'
  {  1509,  12,  16,  11,    1,  -13 },   // 0x71 'q'
  {  1533,  12,  14,  11,    1,  -13 },   // 0x72 'r'
  {  1554,  12,  14,  10,    1,  -13 },   // 0x73 's'
  {  1575,  11,  14,  11,    3,  -13 },   // 0x74 't'
  {  1595,  13,  14,  12,    1,  -13 },   // 0x75 'u'
  {  1618,  11,  14,  13,    4,  -13 },   // 0x76 'v'
  {  1638,  20,  14,  21,    4,  -13 },   // 0x77 'w'
  {  1673,  12,  14,  10,    1,  -13 },   // 0x78 'x'
  {  1694,  11,  14,  13,    4,  -13 },   // 0x79 'y'
  {  1714,  12,  14,  10,    1,  -13 },   // 0x7A 'z'
  {  1735,  10,  14,  10,    2,  -13 },   // 0x7B '{'
  {  1753,   8,  19,   5,    0,  -15 },   // 0x7C '|'
  {  1772,  10,  14,  10,    1,  -13 },   // 0x7D '}'
  {  1790,  11,   3,  12,    2,   -7 } }; // 0x7E '~'

const GFXfont covertopsital11pt7b PROGMEM = {
  (uint8_t  *)covertopsital11pt7bBitmaps,
  (GFXglyph *)covertopsital11pt7bGlyphs,
  0x20, 0x7E, 22 };

// Approx. 2467 bytes
