#pragma once
#include <Adafruit_GFX.h>

const uint8_t LSANSI8pt7bBitmaps[] PROGMEM = {
  0x22, 0x26, 0x64, 0x44, 0x40, 0x08, 0x99, 0x99, 0x02, 0x41, 0x20, 0x49,
  0xFF, 0x09, 0x04, 0xC1, 0x20, 0xC8, 0xFF, 0x89, 0x04, 0x81, 0x20, 0x04,
  0x1E, 0x39, 0x28, 0x28, 0x28, 0x18, 0x0C, 0x16, 0x16, 0x16, 0x94, 0x78,
  0x20, 0x1C, 0x32, 0x46, 0x64, 0x44, 0x48, 0x6D, 0x03, 0xA0, 0x05, 0xC0,
  0x92, 0x1A, 0x23, 0x22, 0x62, 0x44, 0x38, 0x07, 0x03, 0x20, 0x88, 0x26,
  0x0B, 0x07, 0x02, 0x45, 0x19, 0xC2, 0xF0, 0xE6, 0x30, 0xF6, 0xFA, 0x08,
  0x88, 0xC4, 0x63, 0x10, 0x84, 0x21, 0x08, 0x21, 0x00, 0x10, 0x60, 0x82,
  0x0C, 0x30, 0xC2, 0x08, 0x61, 0x04, 0x21, 0x08, 0x00, 0x25, 0x54, 0xC9,
  0x48, 0x08, 0x08, 0x08, 0x08, 0xFF, 0x10, 0x10, 0x10, 0x10, 0x6D, 0x28,
  0xE0, 0xC0, 0x00, 0xC0, 0x20, 0x18, 0x04, 0x02, 0x01, 0x80, 0x40, 0x30,
  0x08, 0x04, 0x03, 0x00, 0x80, 0x60, 0x10, 0x08, 0x00, 0x1E, 0x19, 0x88,
  0x48, 0x34, 0x16, 0x0B, 0x05, 0x86, 0x82, 0x61, 0x31, 0x0F, 0x00, 0x73,
  0x32, 0x26, 0x66, 0x44, 0xCC, 0x1E, 0x23, 0x01, 0x01, 0x03, 0x06, 0x0C,
  0x18, 0x20, 0x40, 0xC0, 0xFE, 0x1E, 0x23, 0x03, 0x03, 0x06, 0x38, 0x06,
  0x02, 0x02, 0x06, 0x8C, 0x78, 0x03, 0x01, 0x81, 0xC1, 0xA1, 0xB1, 0x99,
  0x88, 0x84, 0xFF, 0x83, 0x01, 0x80, 0x80, 0x3F, 0x90, 0x08, 0x04, 0x03,
  0xC0, 0x30, 0x08, 0x04, 0x02, 0x03, 0x23, 0x0F, 0x00, 0x0F, 0x08, 0x48,
  0x0C, 0x05, 0xE7, 0x1B, 0x0D, 0x86, 0xC3, 0x61, 0x11, 0x87, 0x00, 0x3F,
  0x80, 0xC0, 0xC0, 0xC0, 0x40, 0x40, 0x60, 0x60, 0x20, 0x30, 0x18, 0x08,
  0x00, 0x1E, 0x31, 0x21, 0x21, 0x36, 0x1C, 0x6E, 0xC6, 0xC3, 0x82, 0xC6,
  0x78, 0x1E, 0x23, 0x61, 0x41, 0x41, 0xC3, 0x67, 0x3F, 0x02, 0x06, 0x8C,
  0xF0, 0x60, 0x00, 0x00, 0x80, 0x33, 0x00, 0x00, 0x06, 0x44, 0x48, 0x00,
  0x81, 0x83, 0x06, 0x0E, 0x03, 0x80, 0x60, 0x0C, 0x02, 0x00, 0x7F, 0x80,
  0x00, 0x03, 0xFE, 0x40, 0x18, 0x03, 0x00, 0xC0, 0x38, 0x30, 0x60, 0xC0,
  0x80, 0x00, 0x7D, 0x08, 0x10, 0x20, 0xC3, 0x0C, 0x30, 0x40, 0x00, 0x06,
  0x00, 0x07, 0xC1, 0x86, 0x20, 0x14, 0x79, 0x88, 0x99, 0x19, 0x91, 0x19,
  0x32, 0x9D, 0xC8, 0x00, 0x60, 0x03, 0xE0, 0x01, 0x80, 0x70, 0x0E, 0x03,
  0xC0, 0xC8, 0x19, 0x86, 0x30, 0xC6, 0x3F, 0xC4, 0x09, 0x81, 0xA0, 0x30,
  0x3E, 0x23, 0x63, 0x63, 0x66, 0x78, 0x4E, 0xC6, 0xC2, 0xC6, 0x86, 0xF8,
  0x0F, 0x86, 0x12, 0x01, 0x80, 0xC0, 0x30, 0x0C, 0x02, 0x00, 0xC0, 0x30,
  0x06, 0x18, 0xF8, 0x3F, 0x88, 0x76, 0x0D, 0x81, 0x60, 0x50, 0x14, 0x0F,
  0x03, 0xC0, 0xB0, 0x68, 0x33, 0xF0, 0x3F, 0x20, 0x60, 0x60, 0x60, 0x7C,
  0x40, 0xC0, 0xC0, 0xC0, 0x80, 0xFC, 0x3F, 0x20, 0x60, 0x60, 0x60, 0x40,
  0x7C, 0xC0, 0xC0, 0xC0, 0x80, 0x80, 0x0F, 0x86, 0x12, 0x01, 0x80, 0xC0,
  0x30, 0x0C, 0x02, 0x06, 0xC1, 0xB0, 0x66, 0x10, 0xFC, 0x20, 0x44, 0x09,
  0x83, 0x30, 0x66, 0x0C, 0xFF, 0x90, 0x26, 0x0C, 0xC1, 0x98, 0x32, 0x06,
  0x40, 0x80, 0x25, 0xB6, 0x96, 0xDA, 0x40, 0x02, 0x0C, 0x18, 0x30, 0x40,
  0x83, 0x06, 0x0C, 0x18, 0x20, 0xC9, 0x1C, 0x00, 0x21, 0x88, 0xC6, 0x61,
  0x90, 0x68, 0x14, 0x07, 0x83, 0x60, 0xCC, 0x31, 0x08, 0x62, 0x0C, 0x20,
  0x41, 0x83, 0x06, 0x08, 0x10, 0x60, 0xC1, 0x82, 0x07, 0xF0, 0x18, 0x19,
  0xC1, 0xCE, 0x0E, 0x58, 0xA2, 0xC5, 0x16, 0x58, 0xB2, 0xCC, 0xA6, 0x65,
  0x22, 0x31, 0x11, 0x88, 0x80, 0xC0, 0x30, 0x66, 0x09, 0xC1, 0x2C, 0x24,
  0x8C, 0x91, 0x91, 0x26, 0x24, 0xC6, 0x90, 0x52, 0x0E, 0x40, 0x80, 0x0F,
  0x83, 0x18, 0x81, 0xB0, 0x3C, 0x07, 0x80, 0xF0, 0x1C, 0x02, 0xC0, 0xD8,
  0x31, 0x8C, 0x1F, 0x00, 0x3E, 0x23, 0x61, 0x63, 0x63, 0x46, 0x78, 0xC0,
  0xC0, 0xC0, 0x80, 0x80, 0x0F, 0x83, 0x18, 0x81, 0xB0, 0x3C, 0x07, 0x80,
  0xF0, 0x1C, 0x02, 0xC0, 0xD8, 0x31, 0x8C, 0x1F, 0x00, 0x38, 0x01, 0x80,
  0x3F, 0x23, 0x61, 0x63, 0x46, 0x78, 0x4C, 0xCC, 0xC4, 0xC6, 0x82, 0x83,
  0x0F, 0x18, 0x4C, 0x06, 0x03, 0x00, 0xE0, 0x38, 0x0C, 0x03, 0x01, 0x21,
  0x8F, 0x80, 0xFF, 0xC3, 0x00, 0xC0, 0x20, 0x08, 0x06, 0x01, 0x80, 0x60,
  0x10, 0x04, 0x03, 0x00, 0xC0, 0x20, 0xD8, 0x36, 0x09, 0x82, 0x60, 0x90,
  0x6C, 0x1B, 0x04, 0xC1, 0x30, 0xCC, 0x20, 0xF0, 0x40, 0x68, 0x09, 0x83,
  0x30, 0xC6, 0x10, 0xC6, 0x08, 0x81, 0xB0, 0x34, 0x07, 0x80, 0xE0, 0x0C,
  0x00, 0x82, 0x0C, 0x30, 0xE1, 0x85, 0x1C, 0x68, 0xA2, 0x4D, 0x33, 0x49,
  0x1A, 0x58, 0xE3, 0x87, 0x1C, 0x38, 0xC1, 0x86, 0x00, 0x18, 0x21, 0x84,
  0x0C, 0xC0, 0xD8, 0x07, 0x00, 0x60, 0x06, 0x00, 0xB0, 0x1B, 0x03, 0x18,
  0x61, 0x8C, 0x0C, 0x40, 0x98, 0x66, 0x10, 0x88, 0x34, 0x05, 0x01, 0x80,
  0x60, 0x10, 0x04, 0x03, 0x00, 0xC0, 0x1F, 0xE0, 0x18, 0x06, 0x00, 0xC0,
  0x30, 0x0C, 0x03, 0x00, 0xE0, 0x18, 0x06, 0x01, 0x80, 0x3F, 0xC0, 0x1C,
  0x43, 0x08, 0x20, 0x82, 0x18, 0x61, 0x04, 0x10, 0xC3, 0x0E, 0x00, 0x88,
  0x8C, 0x44, 0x44, 0x62, 0x22, 0x31, 0x10, 0x1C, 0x10, 0xC3, 0x08, 0x20,
  0x82, 0x18, 0x41, 0x04, 0x10, 0xCF, 0x00, 0x00, 0x01, 0x01, 0x81, 0xC0,
  0xA0, 0x88, 0x44, 0x42, 0x61, 0xA0, 0x40, 0xFC, 0x44, 0x0F, 0x8C, 0xCC,
  0x4C, 0x24, 0x32, 0x3B, 0x1D, 0x94, 0x72, 0x00, 0x20, 0x20, 0x20, 0x60,
  0x67, 0x5B, 0x53, 0x63, 0xC3, 0xC2, 0xC6, 0x8C, 0xF0, 0x0E, 0x31, 0x20,
  0x60, 0x40, 0xC0, 0xC0, 0x62, 0x7C, 0x00, 0xC0, 0x20, 0x08, 0x02, 0x0F,
  0x86, 0x63, 0x11, 0x84, 0x43, 0x11, 0xCC, 0x73, 0x28, 0x72, 0x00, 0x0E,
  0x64, 0x8B, 0x34, 0xDE, 0x30, 0x21, 0x3C, 0x07, 0x09, 0x18, 0x10, 0x7C,
  0x30, 0x20, 0x20, 0x20, 0x60, 0x60, 0x60, 0x40, 0x40, 0xC0, 0xC0, 0x0F,
  0x88, 0xC8, 0x4C, 0x64, 0x32, 0x39, 0x2C, 0xE4, 0x02, 0x03, 0x21, 0x0F,
  0x00, 0x20, 0x20, 0x20, 0x60, 0x66, 0x6B, 0x53, 0x63, 0xC2, 0xC2, 0xC6,
  0x86, 0x86, 0x20, 0x34, 0x96, 0xDA, 0x40, 0x03, 0x00, 0x00, 0x02, 0x02,
  0x06, 0x06, 0x04, 0x04, 0x04, 0x0C, 0x0C, 0x08, 0x98, 0x70, 0x20, 0x20,
  0x20, 0x60, 0x62, 0x64, 0x48, 0x58, 0xF0, 0xD8, 0xD8, 0x8C, 0x86, 0x22,
  0x26, 0x66, 0x44, 0xCC, 0xC8, 0x80, 0x66, 0x3A, 0x5A, 0xD4, 0xE6, 0xC6,
  0x3C, 0x31, 0x63, 0x0B, 0x18, 0xD0, 0xC6, 0x84, 0x30, 0x66, 0x4B, 0x53,
  0x63, 0xE2, 0xC2, 0xC6, 0x86, 0x86, 0x1E, 0x33, 0x61, 0x41, 0x41, 0xC3,
  0xC2, 0x46, 0x78, 0x33, 0x96, 0xCE, 0x66, 0x36, 0x1B, 0x09, 0x0C, 0x8C,
  0x78, 0x60, 0x30, 0x18, 0x00, 0x0F, 0x8C, 0xCC, 0x4C, 0x64, 0x32, 0x3B,
  0x2D, 0x94, 0x72, 0x01, 0x01, 0x80, 0xC0, 0x66, 0xD1, 0x43, 0x0E, 0x18,
  0x30, 0x40, 0x80, 0x1C, 0x44, 0x81, 0x81, 0x81, 0x83, 0x46, 0x78, 0x27,
  0xD8, 0x84, 0x23, 0x18, 0xC3, 0x00, 0x63, 0x43, 0x43, 0x42, 0xC6, 0xCE,
  0x8E, 0x96, 0xE6, 0xC3, 0xC2, 0xC6, 0x44, 0x48, 0x58, 0x50, 0x70, 0x60,
  0x86, 0x2C, 0xE2, 0xCE, 0x6C, 0xE4, 0xD2, 0xCD, 0x28, 0x63, 0x86, 0x30,
  0x63, 0x00, 0x10, 0x86, 0x60, 0xB0, 0x38, 0x0C, 0x07, 0x81, 0x20, 0x8C,
  0x41, 0x00, 0xC1, 0xC2, 0x46, 0x44, 0x4C, 0x68, 0x70, 0x70, 0x60, 0x60,
  0x40, 0x80, 0x3F, 0x03, 0x06, 0x0C, 0x18, 0x30, 0x60, 0x60, 0xFE, 0x0C,
  0x41, 0x04, 0x10, 0x42, 0x30, 0x60, 0x86, 0x10, 0x43, 0x06, 0x00, 0x13,
  0x22, 0x22, 0x64, 0x44, 0x4C, 0x88, 0x80, 0x18, 0x30, 0xC3, 0x18, 0x61,
  0x83, 0x10, 0x43, 0x0C, 0x30, 0x8C, 0x00, 0x71, 0x99, 0x8E };

const GFXglyph LSANSI8pt7bGlyphs[] PROGMEM = {
  {     0,   0,   0,   5,    0,    1 },   // 0x20 ' '
  {     0,   4,  12,   5,    2,  -11 },   // 0x21 '!'
  {     6,   4,   4,   6,    3,  -12 },   // 0x22 '"'
  {     8,  10,  12,  10,    1,  -11 },   // 0x23 '#'
  {    23,   8,  14,  10,    2,  -12 },   // 0x24 '$'
  {    37,  12,  12,  12,    1,  -11 },   // 0x25 '%'
  {    55,  10,  12,  11,    1,  -11 },   // 0x26 '&'
  {    70,   2,   4,   3,    3,  -12 },   // 0x27 '''
  {    71,   5,  15,   5,    2,  -12 },   // 0x28 '('
  {    81,   6,  15,   5,    0,  -12 },   // 0x29 ')'
  {    93,   5,   6,   8,    3,  -11 },   // 0x2A '*'
  {    97,   8,   9,  10,    2,   -8 },   // 0x2B '+'
  {   106,   3,   5,   5,    1,   -1 },   // 0x2C ','
  {   108,   3,   1,   5,    2,   -4 },   // 0x2D '-'
  {   109,   2,   1,   5,    2,    0 },   // 0x2E '.'
  {   110,  10,  15,   8,    0,  -12 },   // 0x2F '/'
  {   129,   9,  12,  10,    2,  -11 },   // 0x30 '0'
  {   143,   4,  12,  10,    4,  -11 },   // 0x31 '1'
  {   149,   8,  12,  10,    2,  -11 },   // 0x32 '2'
  {   161,   8,  12,  10,    2,  -11 },   // 0x33 '3'
  {   173,   9,  12,  10,    1,  -11 },   // 0x34 '4'
  {   187,   9,  12,  10,    2,  -11 },   // 0x35 '5'
  {   201,   9,  12,  10,    2,  -11 },   // 0x36 '6'
  {   215,   9,  12,  10,    2,  -11 },   // 0x37 '7'
  {   229,   8,  12,  10,    2,  -11 },   // 0x38 '8'
  {   241,   8,  12,  10,    2,  -11 },   // 0x39 '9'
  {   253,   3,   9,   5,    2,   -8 },   // 0x3A ':'
  {   257,   4,  12,   5,    1,   -8 },   // 0x3B ';'
  {   263,   9,   9,  10,    2,   -8 },   // 0x3C '<'
  {   274,  10,   4,  10,    1,   -6 },   // 0x3D '='
  {   279,   9,   9,  10,    2,   -8 },   // 0x3E '>'
  {   290,   7,  12,   7,    2,  -11 },   // 0x3F '?'
  {   301,  12,  12,  14,    2,  -11 },   // 0x40 '@'
  {   319,  11,  12,  11,    0,  -11 },   // 0x41 'A'
  {   336,   8,  12,  10,    2,  -11 },   // 0x42 'B'
  {   348,  10,  12,  11,    2,  -11 },   // 0x43 'C'
  {   363,  10,  12,  12,    2,  -11 },   // 0x44 'D'
  {   378,   8,  12,   9,    2,  -11 },   // 0x45 'E'
  {   390,   8,  12,   9,    2,  -11 },   // 0x46 'F'
  {   402,  10,  12,  11,    2,  -11 },   // 0x47 'G'
  {   417,  11,  12,  12,    2,  -11 },   // 0x48 'H'
  {   434,   3,  12,   5,    2,  -11 },   // 0x49 'I'
  {   439,   7,  14,   7,    0,  -11 },   // 0x4A 'J'
  {   452,  10,  12,  10,    2,  -11 },   // 0x4B 'K'
  {   467,   7,  12,   9,    2,  -11 },   // 0x4C 'L'
  {   478,  13,  12,  13,    1,  -11 },   // 0x4D 'M'
  {   498,  11,  12,  12,    2,  -11 },   // 0x4E 'N'
  {   515,  11,  12,  12,    2,  -11 },   // 0x4F 'O'
  {   532,   8,  12,   9,    2,  -11 },   // 0x50 'P'
  {   544,  11,  14,  12,    2,  -11 },   // 0x51 'Q'
  {   564,   8,  12,  10,    2,  -11 },   // 0x52 'R'
  {   576,   9,  12,   9,    1,  -11 },   // 0x53 'S'
  {   590,  10,  12,  10,    2,  -11 },   // 0x54 'T'
  {   605,  10,  12,  11,    2,  -11 },   // 0x55 'U'
  {   620,  11,  12,  11,    2,  -11 },   // 0x56 'V'
  {   637,  13,  12,  14,    3,  -11 },   // 0x57 'W'
  {   657,  12,  12,  10,    0,  -11 },   // 0x58 'X'
  {   675,  10,  12,  10,    2,  -11 },   // 0x59 'Y'
  {   690,  11,  12,   9,    0,  -11 },   // 0x5A 'Z'
  {   707,   6,  15,   5,    1,  -12 },   // 0x5B '['
  {   719,   4,  15,   8,    3,  -12 },   // 0x5C '\'
  {   727,   6,  15,   5,    0,  -12 },   // 0x5D ']'
  {   739,   9,  10,  10,    1,  -12 },   // 0x5E '^'
  {   751,   6,   1,   8,    1,    1 },   // 0x5F '_'
  {   752,   3,   2,   9,    5,  -12 },   // 0x60 '`'
  {   753,   9,   9,  10,    1,   -8 },   // 0x61 'a'
  {   764,   8,  13,  10,    2,  -12 },   // 0x62 'b'
  {   777,   8,   9,   8,    1,   -8 },   // 0x63 'c'
  {   786,  10,  13,  10,    1,  -12 },   // 0x64 'd'
  {   803,   7,   9,   8,    1,   -8 },   // 0x65 'e'
  {   811,   8,  16,   6,    1,  -12 },   // 0x66 'f'
  {   827,   9,  12,  10,    1,   -8 },   // 0x67 'g'
  {   841,   8,  13,  10,    2,  -12 },   // 0x68 'h'
  {   854,   3,  12,   5,    2,  -11 },   // 0x69 'i'
  {   859,   8,  15,   5,   -2,  -11 },   // 0x6A 'j'
  {   874,   8,  13,   9,    2,  -12 },   // 0x6B 'k'
  {   887,   4,  13,   5,    2,  -12 },   // 0x6C 'l'
  {   894,  13,   9,  15,    2,   -8 },   // 0x6D 'm'
  {   909,   8,   9,  10,    2,   -8 },   // 0x6E 'n'
  {   918,   8,   9,   9,    1,   -8 },   // 0x6F 'o'
  {   927,   9,  12,  10,    1,   -8 },   // 0x70 'p'
  {   941,   9,  12,  10,    1,   -8 },   // 0x71 'q'
  {   955,   7,   9,   8,    2,   -8 },   // 0x72 'r'
  {   963,   7,   9,   8,    1,   -8 },   // 0x73 's'
  {   971,   5,  10,   6,    2,   -9 },   // 0x74 't'
  {   978,   8,   9,  10,    2,   -8 },   // 0x75 'u'
  {   987,   8,   9,   9,    2,   -8 },   // 0x76 'v'
  {   996,  12,   9,  13,    2,   -8 },   // 0x77 'w'
  {  1010,  10,   9,   9,    0,   -8 },   // 0x78 'x'
  {  1022,   8,  12,   9,    2,   -8 },   // 0x79 'y'
  {  1034,   8,   9,   9,    1,   -8 },   // 0x7A 'z'
  {  1043,   6,  15,   5,    1,  -12 },   // 0x7B '{'
  {  1055,   4,  15,   4,    1,  -12 },   // 0x7C '|'
  {  1063,   6,  15,   5,    0,  -12 },   // 0x7D '}'
  {  1075,   8,   3,  10,    2,   -5 } }; // 0x7E '~'

const GFXfont LSANSI8pt7b PROGMEM = {
  (uint8_t  *)LSANSI8pt7bBitmaps,
  (GFXglyph *)LSANSI8pt7bGlyphs,
  0x20, 0x7E, 19 };

// Approx. 1750 bytes
