#pragma once
#include <Adafruit_GFX.h>

const uint8_t VIPER__6pt7bBitmaps[] PROGMEM = {
  0xFF, 0xFF, 0x3C, 0x21, 0x1C, 0xE3, 0x78, 0xFE, 0x1F, 0x3F, 0xFF, 0xFE,
  0xF7, 0x6C, 0x03, 0x00, 0xC0, 0x0C, 0x82, 0x61, 0x91, 0xFB, 0x7F, 0xCC,
  0x8F, 0xFB, 0xFE, 0x64, 0x1B, 0x04, 0xC0, 0xF6, 0x49, 0x69, 0xB6, 0x58,
  0x80, 0x89, 0x36, 0xDA, 0x5A, 0x00, 0x30, 0x63, 0xDF, 0xE3, 0x8F, 0x9B,
  0x00, 0x0C, 0x03, 0x00, 0xC0, 0x30, 0x0C, 0x3E, 0xF2, 0xC0, 0x30, 0x0C,
  0x03, 0x00, 0xC0, 0xD4, 0xF0, 0x39, 0xFC, 0xF3, 0xCF, 0x3D, 0x73, 0xCD,
  0xE3, 0x00, 0x13, 0xF1, 0x11, 0x11, 0x11, 0x10, 0x39, 0xFC, 0xF3, 0x0C,
  0x63, 0x18, 0x63, 0xDF, 0xC0, 0x39, 0xFC, 0xC1, 0x38, 0xF0, 0xF3, 0xCD,
  0xB7, 0x80, 0x1C, 0x72, 0xCB, 0x6D, 0x34, 0xFF, 0xFC, 0x30, 0x80, 0x79,
  0xF4, 0x14, 0x6F, 0x70, 0xF3, 0xCD, 0xF3, 0x00, 0x39, 0xFC, 0xB0, 0x7B,
  0x7C, 0xF3, 0xCD, 0xE3, 0x80, 0xFF, 0xF0, 0xC6, 0x18, 0x63, 0x0C, 0x31,
  0x47, 0x00, 0x39, 0xF4, 0xD3, 0x39, 0xEC, 0xF3, 0xCD, 0xE3, 0x00, 0x39,
  0xEC, 0xF3, 0xCD, 0x37, 0xC3, 0x4D, 0xE3, 0x80, 0xF3, 0xC0, 0xC0, 0xF7,
  0x31, 0xEC, 0xC2, 0x18, 0xC3, 0x08, 0x00, 0x82, 0x00, 0x1F, 0x07, 0x11,
  0x01, 0x46, 0xB9, 0x33, 0x64, 0xEC, 0x94, 0xAC, 0xCA, 0x0C, 0x50, 0x7C,
  0x00, 0x38, 0x38, 0x3C, 0x3C, 0x2C, 0x6C, 0x66, 0x7E, 0x76, 0xCA, 0xC7,
  0xFB, 0xFC, 0xF3, 0xBF, 0xFC, 0xF3, 0xCF, 0xFF, 0x80, 0x7C, 0xDB, 0x16,
  0x0C, 0x18, 0x30, 0x63, 0xC4, 0xF8, 0xE0, 0xF9, 0xFF, 0x1E, 0x3C, 0x78,
  0xF1, 0xE3, 0xC7, 0xFB, 0xE0, 0xFF, 0xBD, 0x30, 0x7B, 0xEC, 0x30, 0xC3,
  0xFF, 0xC0, 0xFF, 0xFC, 0x30, 0xFF, 0xFC, 0x30, 0xC3, 0x0C, 0x00, 0x3C,
  0xDF, 0x1E, 0x08, 0x19, 0xF3, 0xE3, 0xC6, 0xDC, 0xF8, 0xC7, 0x8F, 0x1E,
  0x3F, 0xFF, 0xF1, 0xE3, 0xC7, 0x8F, 0x18, 0xFF, 0xFF, 0xFC, 0x18, 0xC6,
  0x31, 0x8C, 0xBB, 0xDF, 0xCC, 0xC7, 0x9B, 0x66, 0xC7, 0x1F, 0x3E, 0x6E,
  0xCD, 0x9B, 0x18, 0xC3, 0x0C, 0x30, 0xC3, 0x0C, 0x30, 0xC3, 0xFF, 0xC0,
  0xE3, 0xF9, 0xFC, 0xFA, 0x5D, 0x7E, 0xAF, 0x77, 0xBB, 0xCD, 0xE6, 0xF2,
  0x60, 0xC7, 0xCE, 0x9F, 0x3F, 0x7A, 0xF7, 0xE7, 0xCF, 0x97, 0x18, 0x38,
  0xF9, 0x1E, 0x3C, 0x78, 0xF1, 0xE3, 0x46, 0xF8, 0xE0, 0xF9, 0xFB, 0x1E,
  0x3C, 0xDF, 0xB0, 0x60, 0xC1, 0x83, 0x00, 0x7D, 0xDB, 0x1E, 0x2C, 0x78,
  0xF3, 0xE7, 0xD6, 0xFC, 0x08, 0xFD, 0xFF, 0x1E, 0x3C, 0xDF, 0xB2, 0xA3,
  0xC7, 0x8F, 0x18, 0x39, 0xBD, 0xF0, 0x70, 0xA1, 0xF3, 0xCD, 0xE3, 0x80,
  0xFF, 0xFC, 0x40, 0x81, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0xC7, 0x8F,
  0x1E, 0x34, 0x78, 0xF1, 0xE3, 0xC7, 0x79, 0xE0, 0xC7, 0xCE, 0x9B, 0x26,
  0x4D, 0x8D, 0x1E, 0x3C, 0x70, 0xE0, 0xC6, 0x78, 0xCD, 0x91, 0xB7, 0x36,
  0xE4, 0xD5, 0x9A, 0xF1, 0x5E, 0x3B, 0xCF, 0x30, 0xE6, 0x00, 0xC6, 0xCD,
  0xB1, 0xE3, 0x83, 0x0E, 0x1E, 0x6C, 0xD7, 0x18, 0xC7, 0x66, 0x66, 0x3C,
  0x3C, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0xFF, 0xF0, 0xC6, 0x18, 0xC7,
  0x28, 0xE3, 0xFF, 0xC0, 0xF9, 0x99, 0x99, 0x99, 0xF0, 0xF9, 0x99, 0x99,
  0x99, 0xF0, 0xF9, 0x99, 0x99, 0x99, 0xF0, 0xF9, 0x99, 0x99, 0x99, 0xF0,
  0xF9, 0x99, 0x99, 0x99, 0xF0, 0xF9, 0x99, 0x99, 0x99, 0xF0, 0x38, 0x38,
  0x3C, 0x3C, 0x2C, 0x6C, 0x66, 0x7E, 0x76, 0xCA, 0xC7, 0xFB, 0xFC, 0xF3,
  0xBF, 0xFC, 0xF3, 0xCF, 0xFF, 0x80, 0x7C, 0xDB, 0x16, 0x0C, 0x18, 0x30,
  0x63, 0xC4, 0xF8, 0xE0, 0xF9, 0xFF, 0x1E, 0x3C, 0x78, 0xF1, 0xE3, 0xC7,
  0xFB, 0xE0, 0xFF, 0xBD, 0x30, 0x7B, 0xEC, 0x30, 0xC3, 0xFF, 0xC0, 0xFF,
  0xFC, 0x30, 0xFF, 0xFC, 0x30, 0xC3, 0x0C, 0x00, 0x3C, 0xDF, 0x1E, 0x08,
  0x19, 0xF3, 0xE3, 0xC6, 0xDC, 0xF8, 0xC7, 0x8F, 0x1E, 0x3F, 0xFF, 0xF1,
  0xE3, 0xC7, 0x8F, 0x18, 0xFF, 0xFF, 0xFC, 0x18, 0xC6, 0x31, 0x8C, 0xBB,
  0xDF, 0xCC, 0xC7, 0x9B, 0x66, 0xC7, 0x1F, 0x3E, 0x6E, 0xCD, 0x9B, 0x18,
  0xC3, 0x0C, 0x30, 0xC3, 0x0C, 0x30, 0xC3, 0xFF, 0xC0, 0xE3, 0xF9, 0xFC,
  0xFA, 0x5D, 0x7E, 0xAF, 0x77, 0xBB, 0xCD, 0xE6, 0xF2, 0x60, 0xC7, 0xCE,
  0x9F, 0x3F, 0x7A, 0xF7, 0xE7, 0xCF, 0x97, 0x18, 0x38, 0xF9, 0x1E, 0x3C,
  0x78, 0xF1, 0xE3, 0x46, 0xF8, 0xE0, 0xF9, 0xFB, 0x1E, 0x3C, 0xDF, 0xB0,
  0x60, 0xC1, 0x83, 0x00, 0x7D, 0xDB, 0x1E, 0x2C, 0x78, 0xF3, 0xE7, 0xD6,
  0xFC, 0x08, 0xFD, 0xFF, 0x1E, 0x3C, 0xDF, 0xB2, 0xA3, 0xC7, 0x8F, 0x18,
  0x39, 0xBD, 0xF0, 0x70, 0xA1, 0xF3, 0xCD, 0xE3, 0x80, 0xFF, 0xFC, 0x40,
  0x81, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0xC7, 0x8F, 0x1E, 0x34, 0x78,
  0xF1, 0xE3, 0xC7, 0x79, 0xE0, 0xC7, 0xCE, 0x9B, 0x26, 0x4D, 0x8D, 0x1E,
  0x3C, 0x70, 0xE0, 0xC6, 0x78, 0xCD, 0x91, 0xB7, 0x36, 0xE4, 0xD5, 0x9A,
  0xF1, 0x5E, 0x3B, 0xCF, 0x30, 0xE6, 0x00, 0xC6, 0xCD, 0xB1, 0xE3, 0x83,
  0x0E, 0x1E, 0x6C, 0xD7, 0x18, 0xC7, 0x66, 0x66, 0x3C, 0x3C, 0x18, 0x18,
  0x18, 0x18, 0x18, 0x18, 0xFF, 0xF0, 0xC6, 0x18, 0xC7, 0x28, 0xE3, 0xFF,
  0xC0, 0xF9, 0x99, 0x99, 0x99, 0xF0, 0xF9, 0x99, 0x99, 0x99, 0xF0, 0xF9,
  0x99, 0x99, 0x99, 0xF0, 0xF9, 0x99, 0x99, 0x99, 0xF0 };

const GFXglyph VIPER__6pt7bGlyphs[] PROGMEM = {
  {     0,   0,   0,   6,    0,    1 },   // 0x20 ' '
  {     0,   2,  11,   2,    0,   -8 },   // 0x21 '!'
  {     3,  10,  11,  11,    1,   -8 },   // 0x22 '"'
  {    17,  10,  11,  11,    1,   -8 },   // 0x23 '#'
  {    31,   0,   0,  11,    0,    1 },   // 0x24 '$'
  {    31,   0,   0,  11,    0,    1 },   // 0x25 '%'
  {    31,   0,   0,  11,    0,    1 },   // 0x26 '&'
  {    31,   2,   4,   2,    0,   -8 },   // 0x27 '''
  {    32,   3,  11,   3,    0,   -8 },   // 0x28 '('
  {    37,   3,  11,   3,    0,   -8 },   // 0x29 ')'
  {    42,   7,   7,   8,    1,   -7 },   // 0x2A '*'
  {    49,  10,  11,  11,    1,   -8 },   // 0x2B '+'
  {    63,   2,   3,   2,    0,    2 },   // 0x2C ','
  {    64,   0,   0,  11,    0,    1 },   // 0x2D '-'
  {    64,   2,   2,   2,    0,    1 },   // 0x2E '.'
  {    65,   0,   0,  11,    0,    1 },   // 0x2F '/'
  {    65,   6,  11,   6,    0,   -8 },   // 0x30 '0'
  {    74,   4,  11,   5,    0,   -8 },   // 0x31 '1'
  {    80,   6,  11,   6,    0,   -8 },   // 0x32 '2'
  {    89,   6,  11,   6,    0,   -8 },   // 0x33 '3'
  {    98,   6,  11,   7,    0,   -8 },   // 0x34 '4'
  {   107,   6,  11,   6,    0,   -8 },   // 0x35 '5'
  {   116,   6,  11,   6,    0,   -8 },   // 0x36 '6'
  {   125,   6,  11,   6,    0,   -8 },   // 0x37 '7'
  {   134,   6,  11,   6,    0,   -8 },   // 0x38 '8'
  {   143,   6,  11,   6,    0,   -8 },   // 0x39 '9'
  {   152,   2,   5,   2,    0,   -4 },   // 0x3A ':'
  {   154,   2,   8,   2,    0,   -3 },   // 0x3B ';'
  {   156,   0,   0,  11,    0,    1 },   // 0x3C '<'
  {   156,   0,   0,  11,    0,    1 },   // 0x3D '='
  {   156,   0,   0,  11,    0,    1 },   // 0x3E '>'
  {   156,   6,  11,   6,    0,   -8 },   // 0x3F '?'
  {   165,  11,  11,  12,    1,   -8 },   // 0x40 '@'
  {   181,   8,  11,   8,    0,   -8 },   // 0x41 'A'
  {   192,   6,  11,   7,    0,   -8 },   // 0x42 'B'
  {   201,   7,  11,   7,    0,   -8 },   // 0x43 'C'
  {   211,   7,  11,   7,    0,   -8 },   // 0x44 'D'
  {   221,   6,  11,   6,    0,   -8 },   // 0x45 'E'
  {   230,   6,  11,   6,    0,   -8 },   // 0x46 'F'
  {   239,   7,  11,   7,    0,   -8 },   // 0x47 'G'
  {   249,   7,  11,   7,    0,   -8 },   // 0x48 'H'
  {   259,   2,  11,   2,    0,   -8 },   // 0x49 'I'
  {   262,   5,  11,   6,    0,   -8 },   // 0x4A 'J'
  {   269,   7,  11,   7,    0,   -8 },   // 0x4B 'K'
  {   279,   6,  11,   6,    0,   -8 },   // 0x4C 'L'
  {   288,   9,  11,  10,    0,   -8 },   // 0x4D 'M'
  {   301,   7,  11,   7,    0,   -8 },   // 0x4E 'N'
  {   311,   7,  11,   7,    0,   -8 },   // 0x4F 'O'
  {   321,   7,  11,   7,    0,   -8 },   // 0x50 'P'
  {   331,   7,  11,   7,    0,   -8 },   // 0x51 'Q'
  {   341,   7,  11,   7,    0,   -8 },   // 0x52 'R'
  {   351,   6,  11,   6,    0,   -8 },   // 0x53 'S'
  {   360,   7,  11,   7,    0,   -8 },   // 0x54 'T'
  {   370,   7,  11,   7,    0,   -8 },   // 0x55 'U'
  {   380,   7,  11,   7,    0,   -8 },   // 0x56 'V'
  {   390,  11,  11,  11,    0,   -8 },   // 0x57 'W'
  {   406,   7,  11,   7,    0,   -8 },   // 0x58 'X'
  {   416,   8,  11,   8,    0,   -8 },   // 0x59 'Y'
  {   427,   6,  11,   6,    0,   -8 },   // 0x5A 'Z'
  {   436,   4,   9,   6,    1,   -8 },   // 0x5B '['
  {   441,   4,   9,   6,    1,   -8 },   // 0x5C '\'
  {   446,   4,   9,   6,    1,   -8 },   // 0x5D ']'
  {   451,   4,   9,   6,    1,   -8 },   // 0x5E '^'
  {   456,   4,   9,   6,    1,   -8 },   // 0x5F '_'
  {   461,   4,   9,   6,    1,   -8 },   // 0x60 '`'
  {   466,   8,  11,   8,    0,   -8 },   // 0x61 'a'
  {   477,   6,  11,   7,    0,   -8 },   // 0x62 'b'
  {   486,   7,  11,   7,    0,   -8 },   // 0x63 'c'
  {   496,   7,  11,   7,    0,   -8 },   // 0x64 'd'
  {   506,   6,  11,   6,    0,   -8 },   // 0x65 'e'
  {   515,   6,  11,   6,    0,   -8 },   // 0x66 'f'
  {   524,   7,  11,   7,    0,   -8 },   // 0x67 'g'
  {   534,   7,  11,   7,    0,   -8 },   // 0x68 'h'
  {   544,   2,  11,   2,    0,   -8 },   // 0x69 'i'
  {   547,   5,  11,   6,    0,   -8 },   // 0x6A 'j'
  {   554,   7,  11,   7,    0,   -8 },   // 0x6B 'k'
  {   564,   6,  11,   6,    0,   -8 },   // 0x6C 'l'
  {   573,   9,  11,  10,    0,   -8 },   // 0x6D 'm'
  {   586,   7,  11,   7,    0,   -8 },   // 0x6E 'n'
  {   596,   7,  11,   7,    0,   -8 },   // 0x6F 'o'
  {   606,   7,  11,   7,    0,   -8 },   // 0x70 'p'
  {   616,   7,  11,   7,    0,   -8 },   // 0x71 'q'
  {   626,   7,  11,   7,    0,   -8 },   // 0x72 'r'
  {   636,   6,  11,   6,    0,   -8 },   // 0x73 's'
  {   645,   7,  11,   7,    0,   -8 },   // 0x74 't'
  {   655,   7,  11,   7,    0,   -8 },   // 0x75 'u'
  {   665,   7,  11,   7,    0,   -8 },   // 0x76 'v'
  {   675,  11,  11,  11,    0,   -8 },   // 0x77 'w'
  {   691,   7,  11,   7,    0,   -8 },   // 0x78 'x'
  {   701,   8,  11,   8,    0,   -8 },   // 0x79 'y'
  {   712,   6,  11,   6,    0,   -8 },   // 0x7A 'z'
  {   721,   4,   9,   6,    1,   -8 },   // 0x7B '{'
  {   726,   4,   9,   6,    1,   -8 },   // 0x7C '|'
  {   731,   4,   9,   6,    1,   -8 },   // 0x7D '}'
  {   736,   4,   9,   6,    1,   -8 } }; // 0x7E '~'

const GFXfont VIPER__6pt7b PROGMEM = {
  (uint8_t  *)VIPER__6pt7bBitmaps,
  (GFXglyph *)VIPER__6pt7bGlyphs,
  0x20, 0x7E, 14 };

// Approx. 1413 bytes
