#pragma once
#include <Adafruit_GFX.h>

const uint8_t LFAXD8pt7bBitmaps[] PROGMEM = {
  0xFF, 0xF4, 0x92, 0x43, 0xF0, 0xDF, 0x3C, 0xB2, 0xC8, 0x0C, 0x82, 0x60,
  0x91, 0xFF, 0x19, 0x04, 0xC1, 0x20, 0x48, 0xFF, 0x89, 0x82, 0x40, 0x90,
  0x10, 0xFB, 0x5E, 0xBD, 0x1E, 0x1E, 0x1E, 0x1E, 0x2E, 0x5E, 0xA7, 0x82,
  0x00, 0x78, 0x34, 0xC6, 0x4C, 0xC4, 0xC8, 0x4D, 0x87, 0xB0, 0x06, 0xE0,
  0xDB, 0x19, 0x91, 0x19, 0x31, 0xB6, 0x0E, 0x1E, 0x06, 0x60, 0xCC, 0x1B,
  0x03, 0xC0, 0xF1, 0xF3, 0x36, 0x76, 0xC6, 0x98, 0xF3, 0x8E, 0x1F, 0xE0,
  0xFF, 0x40, 0x13, 0x66, 0xCC, 0xCC, 0xCC, 0x66, 0x31, 0x8C, 0x66, 0x33,
  0x33, 0x33, 0x66, 0xC8, 0x32, 0x8C, 0xD2, 0x79, 0x20, 0x08, 0x04, 0x02,
  0x01, 0x0F, 0xF8, 0x40, 0x20, 0x10, 0x08, 0x00, 0xFD, 0xE0, 0xE0, 0xFC,
  0x01, 0x81, 0x80, 0xC0, 0xC0, 0x60, 0x60, 0x30, 0x30, 0x18, 0x18, 0x0C,
  0x0C, 0x06, 0x06, 0x00, 0x3C, 0x33, 0x18, 0xD8, 0x6C, 0x3E, 0x1F, 0x0F,
  0x87, 0xC3, 0x31, 0x99, 0x87, 0x80, 0x39, 0xF0, 0xE1, 0xC3, 0x87, 0x0E,
  0x1C, 0x38, 0x70, 0xE7, 0xF0, 0x7C, 0xC6, 0xC7, 0x07, 0x07, 0x06, 0x0C,
  0x18, 0x20, 0x60, 0xFF, 0xFF, 0xF9, 0x1C, 0x38, 0x70, 0xCF, 0x03, 0x03,
  0x06, 0x0E, 0x3F, 0xC0, 0x06, 0x07, 0x03, 0x82, 0xC2, 0x63, 0x33, 0x19,
  0xFF, 0xFF, 0x83, 0x01, 0x81, 0xE0, 0xFF, 0xFF, 0x06, 0x0C, 0x1F, 0x07,
  0x07, 0x0E, 0x1E, 0x37, 0xC0, 0x1F, 0x18, 0x98, 0x1C, 0x0D, 0xE7, 0x1B,
  0x8F, 0xC7, 0xE3, 0xB1, 0x98, 0xC7, 0xC0, 0xFF, 0xFF, 0x06, 0x04, 0x0C,
  0x18, 0x10, 0x30, 0x60, 0x60, 0x60, 0xE0, 0x3E, 0x31, 0x98, 0xCC, 0x67,
  0x61, 0xE1, 0xBD, 0x8E, 0xC3, 0xE1, 0x98, 0xC7, 0xC0, 0x3C, 0x33, 0x30,
  0xD8, 0x6C, 0x3E, 0x1D, 0x9E, 0x77, 0x03, 0x01, 0xB1, 0x9F, 0x80, 0xFC,
  0x00, 0x07, 0xE0, 0xFC, 0x00, 0x07, 0xEF, 0x00, 0x00, 0x81, 0x83, 0x87,
  0x0F, 0x01, 0xC0, 0x38, 0x07, 0x00, 0x80, 0xFF, 0x80, 0x00, 0x1F, 0xF0,
  0x80, 0x30, 0x0E, 0x01, 0xC0, 0x78, 0x70, 0xE0, 0xC0, 0x80, 0x00, 0xF9,
  0x1E, 0x38, 0x70, 0xC3, 0x04, 0x18, 0x30, 0x00, 0xC1, 0x80, 0x07, 0xC0,
  0xC1, 0x08, 0x04, 0x8F, 0x34, 0x88, 0xCC, 0xC6, 0x4A, 0x52, 0xB6, 0x9D,
  0xC2, 0x00, 0x18, 0x40, 0x3E, 0x00, 0x06, 0x00, 0x70, 0x0F, 0x00, 0xB0,
  0x0B, 0x81, 0x98, 0x11, 0xC3, 0x1C, 0x3F, 0xC2, 0x0E, 0x60, 0x6F, 0x0F,
  0xFE, 0x33, 0x98, 0xCC, 0x66, 0x63, 0xE1, 0x9C, 0xC6, 0x63, 0xB1, 0xD8,
  0xDF, 0xC0, 0x1F, 0xDC, 0x36, 0x0F, 0x80, 0xC0, 0x30, 0x0C, 0x03, 0x00,
  0xE0, 0x18, 0x07, 0x04, 0x7E, 0xFF, 0x0C, 0x39, 0x83, 0x30, 0x76, 0x06,
  0xC0, 0xD8, 0x1B, 0x07, 0x60, 0xEC, 0x19, 0x86, 0x7F, 0x80, 0xFF, 0x61,
  0x60, 0x60, 0x62, 0x7E, 0x62, 0x60, 0x60, 0x60, 0x61, 0xFF, 0xFF, 0x61,
  0x60, 0x60, 0x60, 0x62, 0x7E, 0x62, 0x60, 0x60, 0x60, 0xF8, 0x1F, 0xCE,
  0x19, 0x80, 0x70, 0x0C, 0x01, 0x80, 0x30, 0x06, 0x1F, 0xE1, 0xCC, 0x38,
  0xC7, 0x0F, 0xE0, 0xF1, 0xEC, 0x19, 0x83, 0x30, 0x66, 0x0C, 0xFF, 0x98,
  0x33, 0x06, 0x60, 0xCC, 0x19, 0x83, 0x78, 0xF0, 0xF6, 0x66, 0x66, 0x66,
  0x66, 0x6F, 0x3E, 0x38, 0x70, 0xE1, 0xC3, 0x87, 0x0E, 0x1C, 0x38, 0x70,
  0xE9, 0x9E, 0x00, 0xF3, 0xD8, 0x46, 0x21, 0x90, 0x68, 0x1F, 0x07, 0xC1,
  0xB8, 0x67, 0x18, 0xE6, 0x3B, 0xCF, 0xF0, 0x60, 0x60, 0x60, 0x60, 0x60,
  0x60, 0x60, 0x60, 0x60, 0x61, 0xFF, 0xE0, 0x3B, 0x83, 0x9C, 0x1C, 0xF1,
  0xE5, 0x8B, 0x2C, 0x59, 0x34, 0xC9, 0xA6, 0x4F, 0x32, 0x31, 0x91, 0x8D,
  0xC0, 0xF0, 0xE1, 0xEC, 0x19, 0xC3, 0x3C, 0x65, 0x8C, 0x99, 0x93, 0xB2,
  0x36, 0x43, 0xC8, 0x79, 0x07, 0x78, 0x60, 0x1F, 0x0E, 0x39, 0x83, 0xF0,
  0x7C, 0x07, 0x80, 0xF0, 0x1E, 0x03, 0xE0, 0xEC, 0x1D, 0xC7, 0x0F, 0x80,
  0xFE, 0x31, 0x98, 0xCC, 0x76, 0x33, 0x39, 0xF8, 0xC0, 0x60, 0x30, 0x18,
  0x1E, 0x00, 0x1F, 0x03, 0x8E, 0x18, 0x39, 0xC1, 0xCC, 0x06, 0x60, 0x33,
  0x01, 0x98, 0x0C, 0xE0, 0xE3, 0x07, 0x1C, 0x70, 0x3E, 0x00, 0x1E, 0x00,
  0x3C, 0xFE, 0x18, 0xC6, 0x31, 0x8C, 0x63, 0x19, 0xC7, 0xC1, 0xB8, 0x67,
  0x18, 0xC6, 0x3B, 0xC7, 0x7F, 0xCF, 0x0E, 0x0F, 0x0F, 0x0F, 0x87, 0x07,
  0x0F, 0x1F, 0xE0, 0xFF, 0xF8, 0xC4, 0x18, 0x03, 0x00, 0x60, 0x0C, 0x01,
  0x80, 0x30, 0x06, 0x00, 0xC0, 0x18, 0x0F, 0x80, 0xF8, 0xF3, 0x06, 0x30,
  0x63, 0x06, 0x30, 0x63, 0x06, 0x30, 0x63, 0x06, 0x30, 0x63, 0x04, 0x38,
  0xC0, 0xF8, 0xF8, 0xEE, 0x08, 0xC1, 0x1C, 0x63, 0x88, 0x31, 0x07, 0x60,
  0x68, 0x0F, 0x01, 0xC0, 0x18, 0x03, 0x00, 0xF3, 0x1F, 0x8C, 0x26, 0x31,
  0x99, 0xE4, 0x65, 0x91, 0xD6, 0x43, 0x5F, 0x0E, 0x38, 0x38, 0xE0, 0xE3,
  0x81, 0x8E, 0x04, 0x10, 0x79, 0xCC, 0x23, 0x98, 0x6C, 0x1E, 0x03, 0x80,
  0xE0, 0x7C, 0x17, 0x0C, 0xE6, 0x1B, 0xCF, 0xF8, 0xEE, 0x18, 0xC2, 0x1C,
  0xC1, 0x90, 0x1C, 0x03, 0x80, 0x70, 0x0E, 0x01, 0xC0, 0x38, 0x0F, 0x80,
  0xFF, 0x87, 0x07, 0x0E, 0x0C, 0x1C, 0x18, 0x38, 0x70, 0x70, 0xE1, 0xFF,
  0xFC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCF, 0xC0, 0x30, 0x18, 0x06, 0x03,
  0x00, 0xC0, 0x60, 0x18, 0x0C, 0x03, 0x01, 0x80, 0x60, 0x30, 0x0C, 0xED,
  0xB6, 0xDB, 0x6D, 0xB7, 0xC0, 0x08, 0x04, 0x07, 0x06, 0x83, 0x63, 0x11,
  0x0D, 0x82, 0xFC, 0xC2, 0x7C, 0xCE, 0xCE, 0x0E, 0x7E, 0xCE, 0xCE, 0xCE,
  0x77, 0xF0, 0x1C, 0x07, 0x01, 0xDC, 0x7F, 0x9C, 0x77, 0x1D, 0xC7, 0x71,
  0xDC, 0x67, 0x19, 0xBC, 0x3C, 0xCF, 0x8E, 0x0C, 0x18, 0x38, 0x31, 0x3C,
  0x07, 0x01, 0x80, 0xC7, 0x66, 0x76, 0x1B, 0x0D, 0x86, 0xC3, 0x71, 0xBF,
  0xCF, 0x70, 0x3C, 0x66, 0xC6, 0xC6, 0xFF, 0xC0, 0xC1, 0x63, 0x3C, 0x3D,
  0x96, 0x3E, 0x61, 0x86, 0x18, 0x61, 0x86, 0x3E, 0x3F, 0x33, 0x31, 0x98,
  0xC6, 0x61, 0xE1, 0x81, 0xFC, 0x7F, 0x61, 0xB0, 0xCF, 0x80, 0xE0, 0x18,
  0x06, 0x01, 0xBC, 0x7F, 0x1C, 0xC6, 0x31, 0x8C, 0x63, 0x18, 0xC6, 0x33,
  0xDF, 0x66, 0x0E, 0x66, 0x66, 0x66, 0x6F, 0x1C, 0x70, 0x0F, 0x1C, 0x71,
  0xC7, 0x1C, 0x71, 0xC7, 0x1F, 0x6F, 0x00, 0xE0, 0x30, 0x18, 0x0C, 0xE6,
  0x23, 0x21, 0xA0, 0xF8, 0x6E, 0x33, 0x19, 0xDE, 0x70, 0xE6, 0x66, 0x66,
  0x66, 0x66, 0x6F, 0xEE, 0x38, 0xDE, 0xF1, 0xCE, 0x63, 0x18, 0xC6, 0x31,
  0x8C, 0x63, 0x18, 0xC6, 0x31, 0x8C, 0xF7, 0xBE, 0xEF, 0x1F, 0xC7, 0x31,
  0x8C, 0x63, 0x18, 0xC6, 0x31, 0x8C, 0xF7, 0xC0, 0x3E, 0x33, 0xB8, 0xD8,
  0x7C, 0x3E, 0x1F, 0x8C, 0xCE, 0x3E, 0x00, 0xEF, 0x3F, 0xDC, 0xEC, 0x36,
  0x1B, 0x0D, 0x86, 0xC6, 0x7E, 0x30, 0x18, 0x1E, 0x00, 0x3F, 0x33, 0xB0,
  0xD8, 0x6C, 0x36, 0x1B, 0x9D, 0xFE, 0x7B, 0x01, 0x80, 0xC0, 0xF0, 0xED,
  0xF6, 0x18, 0x61, 0x86, 0x18, 0xF0, 0x7D, 0xCB, 0x17, 0x87, 0xC3, 0xE1,
  0xE3, 0x7C, 0x23, 0x3E, 0xC6, 0x31, 0x8C, 0x63, 0x0E, 0xF3, 0x8C, 0x63,
  0x18, 0xC6, 0x31, 0x8C, 0x63, 0x38, 0xF6, 0x3D, 0xC0, 0xF1, 0xB8, 0xCC,
  0x46, 0x23, 0xA0, 0xD0, 0x70, 0x18, 0x0C, 0x00, 0xF1, 0x3B, 0x18, 0x9C,
  0xE4, 0x6F, 0x23, 0x5F, 0x1A, 0x70, 0x73, 0x83, 0x1C, 0x18, 0x40, 0xF3,
  0x39, 0x0F, 0x83, 0x81, 0xC0, 0xE0, 0xD8, 0xCE, 0xE7, 0x80, 0xF1, 0xB8,
  0xCC, 0x47, 0x21, 0xA0, 0xD0, 0x70, 0x18, 0x0C, 0x0C, 0x06, 0x06, 0x00,
  0xFF, 0x86, 0x0C, 0x1C, 0x18, 0x30, 0x70, 0x63, 0xFF, 0x36, 0x66, 0x66,
  0xC6, 0x66, 0x66, 0x63, 0xFF, 0xFF, 0xFF, 0xFC, 0xC6, 0x66, 0x66, 0x36,
  0x66, 0x66, 0x6C, 0x70, 0xCC, 0xA1, 0xC0 };

const GFXglyph LFAXD8pt7bGlyphs[] PROGMEM = {
  {     0,   0,   0,   5,    0,    1 },   // 0x20 ' '
  {     0,   3,  12,   5,    1,  -11 },   // 0x21 '!'
  {     5,   6,   5,   8,    1,  -11 },   // 0x22 '"'
  {     9,  10,  12,  11,    0,  -11 },   // 0x23 '#'
  {    24,   7,  14,  11,    2,  -12 },   // 0x24 '$'
  {    37,  12,  12,  13,    0,  -11 },   // 0x25 '%'
  {    55,  11,  12,  12,    1,  -11 },   // 0x26 '&'
  {    72,   2,   5,   4,    1,  -11 },   // 0x27 '''
  {    74,   4,  14,   6,    1,  -11 },   // 0x28 '('
  {    81,   4,  14,   6,    1,  -11 },   // 0x29 ')'
  {    88,   6,   6,   8,    1,  -10 },   // 0x2A '*'
  {    93,   9,   9,  11,    1,   -8 },   // 0x2B '+'
  {   104,   3,   4,   5,    1,   -1 },   // 0x2C ','
  {   106,   3,   1,   5,    1,   -4 },   // 0x2D '-'
  {   107,   3,   2,   5,    1,   -1 },   // 0x2E '.'
  {   108,   9,  14,   9,    0,  -11 },   // 0x2F '/'
  {   124,   9,  12,  11,    1,  -11 },   // 0x30 '0'
  {   138,   7,  12,  11,    2,  -11 },   // 0x31 '1'
  {   149,   8,  12,  11,    1,  -11 },   // 0x32 '2'
  {   161,   7,  12,  11,    2,  -11 },   // 0x33 '3'
  {   172,   9,  12,  11,    1,  -11 },   // 0x34 '4'
  {   186,   7,  12,  11,    2,  -11 },   // 0x35 '5'
  {   197,   9,  12,  11,    1,  -11 },   // 0x36 '6'
  {   211,   8,  12,  11,    2,  -11 },   // 0x37 '7'
  {   223,   9,  12,  11,    1,  -11 },   // 0x38 '8'
  {   237,   9,  12,  11,    1,  -11 },   // 0x39 '9'
  {   251,   3,   9,   5,    1,   -8 },   // 0x3A ':'
  {   255,   3,  11,   5,    1,   -8 },   // 0x3B ';'
  {   260,   9,   9,  11,    1,   -8 },   // 0x3C '<'
  {   271,   9,   4,  11,    1,   -5 },   // 0x3D '='
  {   276,   9,   9,  11,    1,   -8 },   // 0x3E '>'
  {   287,   7,  12,   9,    1,  -11 },   // 0x3F '?'
  {   298,  13,  12,  14,    1,  -11 },   // 0x40 '@'
  {   318,  12,  12,  12,    0,  -11 },   // 0x41 'A'
  {   336,   9,  12,  10,    1,  -11 },   // 0x42 'B'
  {   350,  10,  12,  12,    1,  -11 },   // 0x43 'C'
  {   365,  11,  12,  13,    1,  -11 },   // 0x44 'D'
  {   382,   8,  12,  10,    1,  -11 },   // 0x45 'E'
  {   394,   8,  12,  10,    1,  -11 },   // 0x46 'F'
  {   406,  11,  12,  12,    1,  -11 },   // 0x47 'G'
  {   423,  11,  12,  13,    1,  -11 },   // 0x48 'H'
  {   440,   4,  12,   6,    1,  -11 },   // 0x49 'I'
  {   446,   7,  14,   8,    0,  -11 },   // 0x4A 'J'
  {   459,  10,  12,  12,    1,  -11 },   // 0x4B 'K'
  {   474,   8,  12,  10,    1,  -11 },   // 0x4C 'L'
  {   486,  13,  12,  15,    1,  -11 },   // 0x4D 'M'
  {   506,  11,  12,  13,    1,  -11 },   // 0x4E 'N'
  {   523,  11,  12,  13,    1,  -11 },   // 0x4F 'O'
  {   540,   9,  12,  10,    1,  -11 },   // 0x50 'P'
  {   554,  13,  14,  13,    1,  -11 },   // 0x51 'Q'
  {   577,  10,  12,  11,    1,  -11 },   // 0x52 'R'
  {   592,   7,  12,   9,    1,  -11 },   // 0x53 'S'
  {   603,  11,  12,  12,    0,  -11 },   // 0x54 'T'
  {   620,  12,  12,  12,    0,  -11 },   // 0x55 'U'
  {   638,  11,  12,  12,    0,  -11 },   // 0x56 'V'
  {   655,  14,  12,  15,    1,  -11 },   // 0x57 'W'
  {   676,  10,  12,  11,    0,  -11 },   // 0x58 'X'
  {   691,  11,  12,  11,    0,  -11 },   // 0x59 'Y'
  {   708,   8,  12,  10,    1,  -11 },   // 0x5A 'Z'
  {   720,   4,  14,   6,    1,  -11 },   // 0x5B '['
  {   727,   9,  14,   9,    0,  -11 },   // 0x5C '\'
  {   743,   3,  14,   6,    1,  -11 },   // 0x5D ']'
  {   749,   9,   8,  11,    1,  -11 },   // 0x5E '^'
  {   758,   6,   1,   8,    1,    1 },   // 0x5F '_'
  {   759,   4,   2,  10,    3,  -11 },   // 0x60 '`'
  {   760,   8,   9,   9,    1,   -8 },   // 0x61 'a'
  {   769,  10,  12,  11,    0,  -11 },   // 0x62 'b'
  {   784,   7,   9,   9,    1,   -8 },   // 0x63 'c'
  {   792,   9,  12,  11,    1,  -11 },   // 0x64 'd'
  {   806,   8,   9,  10,    1,   -8 },   // 0x65 'e'
  {   815,   6,  12,   7,    1,  -11 },   // 0x66 'f'
  {   824,   9,  12,  10,    1,   -8 },   // 0x67 'g'
  {   838,  10,  12,  11,    1,  -11 },   // 0x68 'h'
  {   853,   4,  12,   6,    1,  -11 },   // 0x69 'i'
  {   859,   6,  15,   6,   -1,  -11 },   // 0x6A 'j'
  {   871,   9,  12,  10,    1,  -11 },   // 0x6B 'k'
  {   885,   4,  12,   6,    1,  -11 },   // 0x6C 'l'
  {   891,  15,   9,  16,    1,   -8 },   // 0x6D 'm'
  {   908,  10,   9,  11,    1,   -8 },   // 0x6E 'n'
  {   920,   9,   9,  10,    1,   -8 },   // 0x6F 'o'
  {   931,   9,  12,  11,    1,   -8 },   // 0x70 'p'
  {   945,   9,  12,  11,    1,   -8 },   // 0x71 'q'
  {   959,   6,   9,   8,    1,   -8 },   // 0x72 'r'
  {   966,   7,   9,   9,    1,   -8 },   // 0x73 's'
  {   974,   5,  11,   7,    1,  -10 },   // 0x74 't'
  {   981,  10,   9,  11,    0,   -8 },   // 0x75 'u'
  {   993,   9,   9,  10,    0,   -8 },   // 0x76 'v'
  {  1004,  13,   9,  14,    0,   -8 },   // 0x77 'w'
  {  1019,   9,   9,   9,    0,   -8 },   // 0x78 'x'
  {  1030,   9,  12,  10,    0,   -8 },   // 0x79 'y'
  {  1044,   8,   9,  10,    1,   -8 },   // 0x7A 'z'
  {  1053,   4,  14,   6,    1,  -11 },   // 0x7B '{'
  {  1060,   2,  15,   4,    1,  -11 },   // 0x7C '|'
  {  1064,   4,  14,   6,    1,  -11 },   // 0x7D '}'
  {  1071,   9,   3,  11,    1,   -5 } }; // 0x7E '~'

const GFXfont LFAXD8pt7b PROGMEM = {
  (uint8_t  *)LFAXD8pt7bBitmaps,
  (GFXglyph *)LFAXD8pt7bGlyphs,
  0x20, 0x7E, 19 };

// Approx. 1747 bytes
