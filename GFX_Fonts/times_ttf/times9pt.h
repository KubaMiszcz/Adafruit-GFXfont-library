#pragma once
#include <Adafruit_GFX.h>

const uint8_t times9pt7bBitmaps[] PROGMEM = {
  0xFF, 0xFA, 0x0F, 0xDE, 0xF3, 0x18, 0x80, 0x11, 0x08, 0x84, 0x42, 0x42,
  0x27, 0xFC, 0x88, 0x44, 0x24, 0x7F, 0xD1, 0x08, 0x84, 0x40, 0x10, 0xF3,
  0x5C, 0x9D, 0x0E, 0x0E, 0x0E, 0x16, 0x24, 0x4C, 0xB7, 0x82, 0x00, 0x70,
  0x24, 0x82, 0x26, 0x21, 0x31, 0x09, 0x10, 0x39, 0x00, 0x09, 0xC0, 0x89,
  0x08, 0xC8, 0x86, 0x44, 0x12, 0x40, 0xE0, 0x0E, 0x01, 0x10, 0x11, 0x01,
  0x20, 0x1C, 0xF1, 0x86, 0x6C, 0x4C, 0x68, 0x86, 0x8C, 0x30, 0xC7, 0x97,
  0x8F, 0xF8, 0x09, 0x88, 0x84, 0x63, 0x10, 0x84, 0x31, 0x84, 0x20, 0x86,
  0x08, 0x83, 0x08, 0x21, 0x0C, 0x61, 0x08, 0x46, 0x31, 0x08, 0x8C, 0x80,
  0x10, 0x23, 0x5B, 0xE7, 0xDA, 0xC4, 0x08, 0x08, 0x02, 0x00, 0x80, 0x20,
  0xFF, 0xC2, 0x00, 0x80, 0x20, 0x08, 0x00, 0xDC, 0xA8, 0xFF, 0xF0, 0x08,
  0x44, 0x21, 0x10, 0x84, 0x42, 0x11, 0x08, 0x00, 0x38, 0x8B, 0x1E, 0x38,
  0x30, 0x60, 0xC1, 0xC7, 0x8D, 0x11, 0xC0, 0x27, 0x08, 0x42, 0x10, 0x84,
  0x21, 0x09, 0xF0, 0x3C, 0x46, 0x02, 0x02, 0x02, 0x02, 0x04, 0x08, 0x10,
  0x20, 0x3F, 0xFF, 0x39, 0x9A, 0x30, 0x61, 0x87, 0x03, 0x02, 0x04, 0x0B,
  0x37, 0x80, 0x06, 0x06, 0x0E, 0x16, 0x16, 0x26, 0x46, 0x86, 0xFF, 0x06,
  0x06, 0x06, 0x3E, 0x79, 0x03, 0x0F, 0x83, 0x81, 0x03, 0x06, 0x0A, 0x27,
  0x80, 0x0E, 0x30, 0x82, 0x0D, 0xDC, 0xE1, 0xC1, 0xC3, 0x85, 0x91, 0xC0,
  0x7F, 0xFE, 0x08, 0x20, 0x41, 0x02, 0x04, 0x10, 0x20, 0x41, 0x00, 0x38,
  0x8B, 0x1E, 0x26, 0x47, 0x0E, 0x26, 0x87, 0x87, 0x1B, 0xE0, 0x38, 0x9A,
  0x1C, 0x38, 0x38, 0x71, 0xBF, 0x04, 0x10, 0xC7, 0x00, 0xA0, 0x0A, 0x48,
  0x00, 0x37, 0x2A, 0x00, 0x00, 0x40, 0xE0, 0xC0, 0xC0, 0xC0, 0x0C, 0x00,
  0xC0, 0x0E, 0x00, 0x40, 0xFF, 0xC0, 0x00, 0x03, 0xFF, 0xC0, 0x1C, 0x00,
  0xC0, 0x0E, 0x00, 0xC0, 0xE0, 0xC1, 0xC0, 0xC0, 0x00, 0x7A, 0x38, 0x61,
  0x0C, 0x21, 0x08, 0x00, 0x03, 0x0C, 0x07, 0xE0, 0x38, 0x20, 0xC0, 0x21,
  0x00, 0x24, 0x1A, 0x50, 0x4C, 0xA1, 0x19, 0x46, 0x32, 0x88, 0x45, 0x30,
  0x8A, 0x63, 0x24, 0xCE, 0x48, 0xEF, 0x28, 0x00, 0x88, 0x02, 0x0C, 0x08,
  0x07, 0xE0, 0x02, 0x00, 0x10, 0x01, 0xC0, 0x12, 0x00, 0x98, 0x04, 0xC0,
  0x42, 0x03, 0xF8, 0x20, 0xC1, 0x03, 0x18, 0x19, 0xE1, 0xF0, 0xFF, 0x86,
  0x18, 0xC1, 0x18, 0x23, 0x0C, 0x7F, 0x0C, 0x31, 0x83, 0x30, 0x66, 0x0C,
  0xC3, 0x7F, 0xC0, 0x1F, 0x4C, 0x36, 0x07, 0x00, 0xC0, 0x30, 0x0C, 0x03,
  0x00, 0xC0, 0x18, 0x07, 0x0C, 0x7C, 0xFF, 0x83, 0x0E, 0x30, 0x63, 0x03,
  0x30, 0x33, 0x03, 0x30, 0x33, 0x03, 0x30, 0x33, 0x06, 0x30, 0xCF, 0xF8,
  0xFF, 0xC6, 0x08, 0xC1, 0x18, 0x43, 0x08, 0x7F, 0x0C, 0x21, 0x84, 0x30,
  0x06, 0x08, 0xC1, 0x7F, 0xE0, 0xFF, 0x98, 0x4C, 0x06, 0x23, 0x11, 0xF8,
  0xC4, 0x62, 0x30, 0x18, 0x0C, 0x1F, 0x00, 0x1F, 0x03, 0x0C, 0x60, 0x4C,
  0x00, 0xC0, 0x0C, 0x1F, 0xC0, 0x4C, 0x04, 0xC0, 0x46, 0x04, 0x30, 0xC1,
  0xF8, 0xF8, 0xF9, 0x83, 0x0C, 0x18, 0x60, 0xC3, 0x06, 0x1F, 0xF0, 0xC1,
  0x86, 0x0C, 0x30, 0x61, 0x83, 0x0C, 0x19, 0xF1, 0xF0, 0xFC, 0xC3, 0x0C,
  0x30, 0xC3, 0x0C, 0x30, 0xC3, 0x3F, 0x3E, 0x30, 0x60, 0xC1, 0x83, 0x06,
  0x0C, 0x18, 0x33, 0x63, 0x80, 0xF9, 0xF1, 0x86, 0x0C, 0x20, 0x66, 0x03,
  0x40, 0x1C, 0x00, 0xF8, 0x06, 0xE0, 0x31, 0x81, 0x86, 0x0C, 0x39, 0xF3,
  0xF0, 0xFC, 0x06, 0x00, 0xC0, 0x18, 0x03, 0x00, 0x60, 0x0C, 0x01, 0x80,
  0x30, 0x26, 0x08, 0xC1, 0x7F, 0xE0, 0xF0, 0x0F, 0x30, 0x0C, 0x38, 0x1C,
  0x38, 0x1C, 0x2C, 0x2C, 0x2C, 0x2C, 0x26, 0x4C, 0x26, 0x4C, 0x23, 0x8C,
  0x23, 0x8C, 0x21, 0x0C, 0xF1, 0x1F, 0xE0, 0x79, 0x81, 0x0E, 0x08, 0x78,
  0x42, 0xE2, 0x13, 0x10, 0x8C, 0x84, 0x34, 0x20, 0xE1, 0x07, 0x08, 0x19,
  0xF0, 0x40, 0x1F, 0x06, 0x31, 0x03, 0x60, 0x3C, 0x07, 0x80, 0xF0, 0x1E,
  0x03, 0xC0, 0x6C, 0x18, 0xC6, 0x0F, 0x80, 0xFF, 0x19, 0xCC, 0x66, 0x33,
  0x19, 0x8C, 0xFC, 0x60, 0x30, 0x18, 0x0C, 0x1F, 0x00, 0x1F, 0x06, 0x31,
  0x03, 0x60, 0x3C, 0x07, 0x80, 0xF0, 0x1E, 0x03, 0xC0, 0x6C, 0x19, 0xC6,
  0x0F, 0x80, 0x60, 0x07, 0x00, 0x38, 0xFF, 0x03, 0x18, 0x31, 0xC3, 0x0C,
  0x31, 0x83, 0x38, 0x3E, 0x03, 0x60, 0x33, 0x03, 0x18, 0x30, 0xCF, 0x87,
  0x38, 0x46, 0xC2, 0xC0, 0x60, 0x78, 0x1E, 0x07, 0x83, 0x83, 0xC2, 0xBC,
  0xFF, 0xA2, 0x20, 0x84, 0x20, 0x08, 0x02, 0x00, 0x80, 0x20, 0x08, 0x02,
  0x00, 0x80, 0xF8, 0xF8, 0x79, 0x81, 0x0C, 0x08, 0x60, 0x43, 0x02, 0x18,
  0x10, 0xC0, 0x86, 0x04, 0x30, 0x21, 0x81, 0x06, 0x10, 0x1F, 0x00, 0xF8,
  0x79, 0x81, 0x0C, 0x08, 0x20, 0x81, 0x84, 0x04, 0x20, 0x32, 0x00, 0x90,
  0x05, 0x00, 0x38, 0x00, 0x80, 0x04, 0x00, 0xFB, 0xE7, 0x90, 0xC0, 0x8C,
  0x30, 0x86, 0x18, 0x41, 0x0C, 0x40, 0xCB, 0x20, 0x25, 0x90, 0x1A, 0x50,
  0x0E, 0x38, 0x03, 0x1C, 0x01, 0x04, 0x00, 0x82, 0x00, 0xFC, 0xF9, 0xC1,
  0x06, 0x10, 0x19, 0x00, 0x70, 0x03, 0x00, 0x0C, 0x00, 0xB0, 0x09, 0x80,
  0x86, 0x08, 0x19, 0xE1, 0xF0, 0xF8, 0x79, 0x81, 0x06, 0x10, 0x31, 0x00,
  0xC8, 0x03, 0x80, 0x1C, 0x00, 0x40, 0x02, 0x00, 0x10, 0x00, 0x80, 0x1F,
  0x00, 0x7F, 0xC8, 0x11, 0x06, 0x01, 0x80, 0x60, 0x08, 0x03, 0x00, 0xC0,
  0x30, 0x06, 0x01, 0x81, 0x7F, 0xE0, 0xFC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
  0xCC, 0xCC, 0xF0, 0x84, 0x10, 0x84, 0x10, 0x84, 0x10, 0x84, 0x10, 0x80,
  0xF3, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0xF0, 0x08, 0x18, 0x24,
  0x22, 0x42, 0x81, 0xFF, 0x80, 0xC8, 0x80, 0x79, 0x9A, 0x30, 0xE6, 0xD1,
  0xA3, 0x7E, 0x60, 0xE0, 0x60, 0x60, 0x60, 0x6E, 0x73, 0x61, 0x61, 0x61,
  0x61, 0x62, 0x3C, 0x3B, 0x38, 0xE0, 0x83, 0x1F, 0xDE, 0x06, 0x0E, 0x06,
  0x06, 0x06, 0x3E, 0x46, 0x86, 0x86, 0x86, 0xC6, 0xC7, 0x7E, 0x7A, 0x3F,
  0xE0, 0x83, 0x1F, 0xDE, 0x1C, 0x4C, 0x83, 0x06, 0x1F, 0x18, 0x30, 0x60,
  0xC1, 0x83, 0x0F, 0x80, 0x38, 0x4F, 0xC4, 0xC6, 0x44, 0x78, 0x80, 0xFE,
  0x7F, 0x82, 0x82, 0xFC, 0x60, 0x70, 0x18, 0x0C, 0x06, 0x03, 0x71, 0xCC,
  0xC6, 0x63, 0x31, 0x98, 0xCC, 0x6F, 0x78, 0x44, 0x00, 0x04, 0xC4, 0x44,
  0x44, 0xF0, 0x10, 0x80, 0x00, 0x08, 0xC2, 0x10, 0x84, 0x21, 0x08, 0x52,
  0xE0, 0x60, 0x70, 0x18, 0x0C, 0x06, 0x03, 0x3D, 0x90, 0xD0, 0x70, 0x3C,
  0x1B, 0x0C, 0xCF, 0x78, 0x4C, 0x44, 0x44, 0x44, 0x44, 0x44, 0xF0, 0x6E,
  0x73, 0xCE, 0x66, 0x31, 0x98, 0xC6, 0x63, 0x19, 0x8C, 0x66, 0x31, 0xBD,
  0xEF, 0x6E, 0x79, 0x98, 0xCC, 0x66, 0x33, 0x19, 0x8D, 0xEF, 0x39, 0x8E,
  0x1C, 0x18, 0x38, 0x71, 0xBC, 0x6E, 0xF3, 0x61, 0x61, 0x61, 0x61, 0x63,
  0x7E, 0x60, 0x60, 0x60, 0xF0, 0x3A, 0x46, 0x86, 0x86, 0x86, 0x86, 0xC6,
  0x7E, 0x06, 0x06, 0x06, 0x0F, 0x6F, 0xD6, 0x18, 0x61, 0x86, 0x3C, 0x6C,
  0xE3, 0xC7, 0x8E, 0x2E, 0x21, 0x19, 0xF6, 0x31, 0x8C, 0x63, 0x4C, 0xE7,
  0x31, 0x98, 0xCC, 0x66, 0x33, 0x19, 0x9E, 0x76, 0xF3, 0x90, 0x88, 0x86,
  0x41, 0x40, 0xE0, 0x20, 0x10, 0xE7, 0x3B, 0x18, 0x88, 0xC8, 0x6A, 0x41,
  0x5C, 0x0C, 0x60, 0x63, 0x01, 0x10, 0xF7, 0x19, 0x0D, 0x03, 0x01, 0xC1,
  0x31, 0x0D, 0xCF, 0xF3, 0xB0, 0x88, 0x86, 0x41, 0x40, 0xE0, 0x30, 0x10,
  0x08, 0x08, 0x1C, 0x0C, 0x00, 0x7F, 0x06, 0x0C, 0x08, 0x10, 0x30, 0x61,
  0xFE, 0x08, 0x88, 0x43, 0x18, 0xC4, 0xC3, 0x0C, 0x63, 0x10, 0x82, 0x08,
  0xFF, 0xFF, 0x84, 0x66, 0x66, 0x42, 0x12, 0x46, 0x66, 0x64, 0x80, 0x70,
  0x63, 0x28, 0x38 };

const GFXglyph times9pt7bGlyphs[] PROGMEM = {
  {     0,   0,   0,   5,    0,    1 },   // 0x20 ' '
  {     0,   2,  12,   6,    2,  -11 },   // 0x21 '!'
  {     3,   5,   5,   7,    1,  -11 },   // 0x22 '"'
  {     7,   9,  13,   9,    0,  -12 },   // 0x23 '#'
  {    22,   7,  14,   9,    1,  -12 },   // 0x24 '$'
  {    35,  13,  12,  15,    1,  -11 },   // 0x25 '%'
  {    55,  12,  12,  14,    1,  -11 },   // 0x26 '&'
  {    73,   1,   5,   3,    1,  -11 },   // 0x27 '''
  {    74,   5,  17,   6,    1,  -12 },   // 0x28 '('
  {    85,   5,  17,   6,    0,  -12 },   // 0x29 ')'
  {    96,   7,   8,   9,    1,  -12 },   // 0x2A '*'
  {   103,  10,   9,  10,    0,  -10 },   // 0x2B '+'
  {   115,   3,   5,   5,    1,   -1 },   // 0x2C ','
  {   117,   4,   2,   6,    1,   -4 },   // 0x2D '-'
  {   118,   2,   2,   5,    1,   -1 },   // 0x2E '.'
  {   119,   5,  13,   5,    0,  -12 },   // 0x2F '/'
  {   128,   7,  12,   9,    1,  -11 },   // 0x30 '0'
  {   139,   5,  12,   9,    2,  -11 },   // 0x31 '1'
  {   147,   8,  12,   9,    0,  -11 },   // 0x32 '2'
  {   159,   7,  12,   9,    1,  -11 },   // 0x33 '3'
  {   170,   8,  12,   9,    0,  -11 },   // 0x34 '4'
  {   182,   7,  12,   9,    1,  -11 },   // 0x35 '5'
  {   193,   7,  12,   9,    1,  -11 },   // 0x36 '6'
  {   204,   7,  12,   9,    1,  -11 },   // 0x37 '7'
  {   215,   7,  12,   9,    1,  -11 },   // 0x38 '8'
  {   226,   7,  12,   9,    1,  -11 },   // 0x39 '9'
  {   237,   2,   8,   5,    2,   -7 },   // 0x3A ':'
  {   239,   3,  11,   5,    1,   -7 },   // 0x3B ';'
  {   244,  10,   9,  10,    0,  -10 },   // 0x3C '<'
  {   256,  10,   4,  10,    0,   -7 },   // 0x3D '='
  {   261,  10,   9,  10,    0,  -10 },   // 0x3E '>'
  {   273,   6,  12,   8,    1,  -11 },   // 0x3F '?'
  {   282,  15,  17,  17,    1,  -12 },   // 0x40 '@'
  {   314,  13,  12,  13,    0,  -11 },   // 0x41 'A'
  {   334,  11,  12,  12,    0,  -11 },   // 0x42 'B'
  {   351,  10,  12,  12,    1,  -11 },   // 0x43 'C'
  {   366,  12,  12,  13,    0,  -11 },   // 0x44 'D'
  {   384,  11,  12,  11,    0,  -11 },   // 0x45 'E'
  {   401,   9,  12,  10,    0,  -11 },   // 0x46 'F'
  {   415,  12,  12,  13,    1,  -11 },   // 0x47 'G'
  {   433,  13,  12,  13,    0,  -11 },   // 0x48 'H'
  {   453,   6,  12,   6,    0,  -11 },   // 0x49 'I'
  {   462,   7,  12,   7,    0,  -11 },   // 0x4A 'J'
  {   473,  13,  12,  13,    0,  -11 },   // 0x4B 'K'
  {   493,  11,  12,  11,    0,  -11 },   // 0x4C 'L'
  {   510,  16,  12,  16,    0,  -11 },   // 0x4D 'M'
  {   534,  13,  12,  13,    0,  -11 },   // 0x4E 'N'
  {   554,  11,  12,  13,    1,  -11 },   // 0x4F 'O'
  {   571,   9,  12,  10,    0,  -11 },   // 0x50 'P'
  {   585,  11,  15,  13,    1,  -11 },   // 0x51 'Q'
  {   606,  12,  12,  12,    0,  -11 },   // 0x52 'R'
  {   624,   8,  12,  10,    1,  -11 },   // 0x53 'S'
  {   636,  10,  12,  11,    1,  -11 },   // 0x54 'T'
  {   651,  13,  12,  13,    0,  -11 },   // 0x55 'U'
  {   671,  13,  12,  13,    0,  -11 },   // 0x56 'V'
  {   691,  17,  12,  17,    0,  -11 },   // 0x57 'W'
  {   717,  13,  12,  13,    0,  -11 },   // 0x58 'X'
  {   737,  13,  12,  13,    0,  -11 },   // 0x59 'Y'
  {   757,  11,  12,  11,    0,  -11 },   // 0x5A 'Z'
  {   774,   4,  17,   6,    1,  -12 },   // 0x5B '['
  {   783,   5,  13,   5,    0,  -12 },   // 0x5C '\'
  {   792,   4,  17,   6,    1,  -12 },   // 0x5D ']'
  {   801,   8,   6,   8,    0,  -11 },   // 0x5E '^'
  {   807,   9,   1,   9,    0,    4 },   // 0x5F '_'
  {   809,   3,   3,   6,    1,  -11 },   // 0x60 '`'
  {   811,   7,   8,   8,    1,   -7 },   // 0x61 'a'
  {   818,   8,  13,   9,    0,  -12 },   // 0x62 'b'
  {   831,   6,   8,   8,    1,   -7 },   // 0x63 'c'
  {   837,   8,  13,   9,    1,  -12 },   // 0x64 'd'
  {   850,   6,   8,   8,    1,   -7 },   // 0x65 'e'
  {   856,   7,  13,   6,    1,  -12 },   // 0x66 'f'
  {   868,   8,  12,   9,    1,   -7 },   // 0x67 'g'
  {   880,   9,  13,   9,    0,  -12 },   // 0x68 'h'
  {   895,   4,  13,   5,    1,  -12 },   // 0x69 'i'
  {   902,   5,  17,   5,   -1,  -12 },   // 0x6A 'j'
  {   913,   9,  13,   9,    0,  -12 },   // 0x6B 'k'
  {   928,   4,  13,   5,    1,  -12 },   // 0x6C 'l'
  {   935,  14,   8,  14,    0,   -7 },   // 0x6D 'm'
  {   949,   9,   8,   9,    0,   -7 },   // 0x6E 'n'
  {   958,   7,   8,   9,    1,   -7 },   // 0x6F 'o'
  {   965,   8,  12,   9,    0,   -7 },   // 0x70 'p'
  {   977,   8,  12,   9,    1,   -7 },   // 0x71 'q'
  {   989,   6,   8,   6,    0,   -7 },   // 0x72 'r'
  {   995,   5,   8,   7,    1,   -7 },   // 0x73 's'
  {  1000,   5,  11,   5,    0,  -10 },   // 0x74 't'
  {  1007,   9,   8,   9,    0,   -7 },   // 0x75 'u'
  {  1016,   9,   8,   9,    0,   -7 },   // 0x76 'v'
  {  1025,  13,   8,  13,    0,   -7 },   // 0x77 'w'
  {  1038,   9,   8,   9,    0,   -7 },   // 0x78 'x'
  {  1047,   9,  12,   9,    0,   -7 },   // 0x79 'y'
  {  1061,   8,   8,   8,    0,   -7 },   // 0x7A 'z'
  {  1069,   5,  17,   9,    2,  -12 },   // 0x7B '{'
  {  1080,   1,  16,   4,    1,  -12 },   // 0x7C '|'
  {  1082,   4,  17,   9,    2,  -12 },   // 0x7D '}'
  {  1091,  10,   3,  10,    0,   -5 } }; // 0x7E '~'

const GFXfont times9pt7b PROGMEM = {
  (uint8_t  *)times9pt7bBitmaps,
  (GFXglyph *)times9pt7bGlyphs,
  0x20, 0x7E, 21 };

// Approx. 1767 bytes
